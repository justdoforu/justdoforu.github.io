import{_ as r}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as i,a as s}from"./app-cbOojWoE.js";const n={},t=s('<h1 id="csr-vs-ssr" tabindex="-1"><a class="header-anchor" href="#csr-vs-ssr" aria-hidden="true">#</a> CSR vs SSR</h1><p>CSR（Client-Side Rendering）和 SSR（Server-Side Rendering）是两种不同的前端渲染方式，它们分别指的是在浏览器端和服务器端进行页面渲染的方法。</p><h3 id="csr-client-side-rendering" tabindex="-1"><a class="header-anchor" href="#csr-client-side-rendering" aria-hidden="true">#</a> CSR（Client-Side Rendering）</h3><ul><li><p><strong>工作方式：</strong> 在 CSR 中，页面的初始 HTML 由服务器生成并发送给浏览器，然后浏览器下载并执行 JavaScript 代码。JavaScript 代码执行后，它负责请求数据，并在浏览器中构建和渲染页面。</p></li><li><p><strong>优点：</strong></p><ol><li><p><strong>快速导航：</strong> 一旦初始页面加载完成，后续导航可以更快，因为只需加载和渲染数据，而不需要重新获取整个 HTML 页面。</p></li><li><p><strong>灵活性：</strong> 客户端渲染使得构建富交互性应用更为容易。</p></li></ol></li><li><p><strong>缺点：</strong></p><ol><li><p><strong>首次加载慢：</strong> 用户首次访问时，需要等待下载和执行 JavaScript 代码，可能导致较长的首次加载时间。</p></li><li><p><strong>SEO 难度：</strong> 对搜索引擎来说，初次渲染的 HTML 中可能没有包含所有内容，可能对搜索引擎优化（SEO）造成一定挑战。</p></li></ol></li></ul><h3 id="ssr-server-side-rendering" tabindex="-1"><a class="header-anchor" href="#ssr-server-side-rendering" aria-hidden="true">#</a> SSR（Server-Side Rendering）</h3><ul><li><p><strong>工作方式：</strong> 在 SSR 中，服务器负责生成完整的 HTML 页面，包括初始数据。当用户发起请求时，服务器返回已经渲染好的 HTML，浏览器收到后直接渲染页面。</p></li><li><p><strong>优点：</strong></p><ol><li><p><strong>快速首次加载：</strong> 用户首次访问时，服务器已经生成了完整的 HTML，因此首次加载时间较短。</p></li><li><p><strong>SEO 友好：</strong> 由于搜索引擎可以直接获取到完整的 HTML 内容，SSR 对搜索引擎更友好。</p></li></ol></li><li><p><strong>缺点：</strong></p><ol><li><p><strong>导航时的性能：</strong> 后续导航可能会稍慢，因为每次导航都需要向服务器请求完整的 HTML 页面。</p></li><li><p><strong>服务器压力：</strong> 对于高流量的应用，服务器需要处理更多的页面渲染请求。</p></li></ol></li></ul><h3 id="混合渲染" tabindex="-1"><a class="header-anchor" href="#混合渲染" aria-hidden="true">#</a> 混合渲染</h3><p>有时，开发者还会使用混合渲染的方法，即在首次加载时使用 SSR，然后在后续导航时切换为 CSR。这种方法结合了两者的优点，被称为 Universal 或 Isomorphic JavaScript。</p><p>选择 CSR 还是 SSR 取决于项目的需求、性能要求以及开发者的偏好。一些框架（如Next.js和Nuxt.js）提供了一种简化配置并支持两种渲染方式的方式。</p>',9),o=[t];function l(a,p){return e(),i("div",null,o)}const c=r(n,[["render",l],["__file","CSR vs SSR.html.vue"]]);export{c as default};

const nt="ENTRIES",V="KEYS",T="VALUES",F="";class D{set;_type;_path;constructor(t,s){const n=t._tree,u=Array.from(n.keys());this.set=t,this._type=s,this._path=u.length>0?[{node:n,keys:u}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case T:return this.value();case V:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ut=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const u=t.length+1,o=u+s,i=new Uint8Array(o*u).fill(s+1);for(let r=0;r<u;++r)i[r]=r;for(let r=1;r<o;++r)i[r*u]=r;return R(e,t,s,n,i,1,u,""),n},R=(e,t,s,n,u,o,i,r)=>{const d=o*i;t:for(const l of e.keys())if(l===F){const a=u[d-1];a<=s&&n.set(r,[e.get(l),a])}else{let a=o;for(let h=0;h<l.length;++h,++a){const m=l[h],p=i*a,f=p-i;let c=u[p];const g=Math.max(0,a-s-1),_=Math.min(i-1,a+s);for(let y=g;y<_;++y){const b=m!==t[y],z=u[f+y]+ +b,A=u[f+y+1]+1,w=u[p+y]+1,L=u[p+y+1]=Math.min(z,A,w);L<c&&(c=L)}if(c>s)continue t}R(e.get(l),t,s,n,u,a,i,r+l)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[u,o]=M(n);for(const i of u.keys())if(i!==F&&i.startsWith(o)){const r=new Map;return r.set(i.slice(o.length),u.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ut(this._tree,t,s)}get(t){const s=I(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=I(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,V)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,O(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=O(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=O(this._tree,t);let u=n.get(F);return u===void 0&&n.set(F,u=s()),u}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,u]of t)s.set(n,u);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},I=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return I(e.get(s),t.slice(s.length))},O=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const o of e.keys())if(o!==F&&t[n]===o[0]){const i=Math.min(s-n,o.length);let r=1;for(;r<i&&t[n+r]===o[r];)++r;const d=e.get(o);if(r===o.length)e=d;else{const l=new Map;l.set(o.slice(r),d),e.set(t.slice(n,n+r),l),e.delete(o),e=l}n+=r;continue t}const u=new Map;return e.set(t.slice(n),u),u}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)W(n);else if(s.size===1){const[u,o]=s.entries().next().value;$(n,u,o)}}},W=e=>{if(e.length===0)return;const[t,s]=M(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,u]=t.entries().next().value;n!==F&&$(e.slice(0,-1),n,u)}},$=(e,t,s)=>{if(e.length===0)return;const[n,u]=M(e);n.set(u+t,s),n.delete(u)},M=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},rt=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",q="and",ct="and_not",lt=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},N=({score:e},{score:t})=>t-e,ht=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,dt={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:u,terms:o,match:i}=t.get(s);n.score=n.score+u,n.match=Object.assign(n.match,i),P(n.terms,o)}}return e},[q]:(e,t)=>{const s=new Map;for(const n of t.keys()){const u=e.get(n);if(u==null)continue;const{score:o,terms:i,match:r}=t.get(n);P(u.terms,i),s.set(n,{score:u.score+o,terms:u.terms,match:Object.assign(u.match,r)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,u,o)=>{const{k:i,b:r,d}=o;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/u)))},ft=e=>(t,s,n)=>{const u=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,o=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:u,prefix:o}},H=(e,t,s,n)=>{for(const u of Object.keys(e._fieldIds))if(e._fieldIds[u]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${u}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},gt=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const u=e._index.fetch(n,ht),o=u.get(t);o==null||o.get(s)==null?H(e,s,t,n):o.get(s)<=1?o.size<=1?u.delete(t):o.delete(s):o.set(s,o.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},pt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(rt),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},Ft={combineWith:q,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},yt={..._t,...U},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(dt[s])||new Map},B=(e,t,s,n,u,o,i,r,d=new Map)=>{if(u==null)return d;for(const l of Object.keys(o)){const a=o[l],h=e._fieldIds[l],m=u.get(h);if(m==null)continue;let p=m.size;const f=e._avgFieldLength[h];for(const c of m.keys()){if(!e._documentIds.has(c)){gt(e,h,c,s),p-=1;continue}const g=i?i(e._documentIds.get(c),s,e._storedFields.get(c)):1;if(!g)continue;const _=m.get(c),y=e._fieldLength.get(c)[h],b=at(_,p,e._documentCount,y,f,r),z=n*a*g*b,A=d.get(c);if(A){A.score+=z,lt(A.terms,t);const w=G(A.match,s);w?w.push(l):A.match[s]=[l]}else d.set(c,{score:z,terms:[t],match:{[s]:[l]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},u=(n.fields||e._options.fields).reduce((c,g)=>({...c,[g]:G(n.boost,g)||1}),{}),{boostDocument:o,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:l,prefix:a}={...J.weights,...i},h=e._index.get(t.term),m=B(e,t.term,t.term,1,h,u,o,d);let p,f;if(t.prefix&&(p=e._index.atPrefix(t.term)),t.fuzzy){const c=t.fuzzy===!0?.2:t.fuzzy,g=c<1?Math.min(r,Math.round(t.term.length*c)):c;g&&(f=e._index.fuzzyGet(t.term,g))}if(p)for(const[c,g]of p){const _=c.length-t.term.length;if(!_)continue;f?.delete(c);const y=a*c.length/(c.length+.3*_);B(e,t.term,c,y,g,u,o,d,m)}if(f)for(const c of f.keys()){const[g,_]=f.get(c);if(!_)continue;const y=l*c.length/(c.length+_);B(e,t.term,c,y,g,u,o,d,m)}return m},X=(e,t,s={})=>{if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(m=>X(e,m,a));return Y(h,a.combineWith)}const{tokenize:n,processTerm:u,searchOptions:o}=e._options,i={tokenize:n,processTerm:u,...o,...s},{tokenize:r,processTerm:d}=i,l=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(ft(i)).map(a=>At(e,a,i));return Y(l,i.combineWith)},K=(e,t,s={})=>{const n=X(e,t,s),u=[];for(const[o,{score:i,terms:r,match:d}]of n){const l=r.length,a={id:e._documentIds.get(o),score:i*l,terms:Object.keys(d),match:d};Object.assign(a,e._storedFields.get(o)),(s.filter==null||s.filter(a))&&u.push(a)}return u.sort(N),u},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:o,terms:i}of K(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=o,d.count+=1):n.set(r,{score:o,terms:i,count:1})}const u=[];for(const[o,{score:i,terms:r,count:d}]of n)u.push({suggestion:o,terms:r,score:i/d});return u.sort(N),u};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...pt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...Ft,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const u={};for(const[o,i]of n)u[o]=Object.fromEntries(i);t.push([s,u])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:u,fieldLength:o,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:l},a)=>{if(l!==1&&l!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=k(n),h._idToShortId=new Map,h._fieldIds=u,h._fieldLength=k(o),h._avgFieldLength=i,h._storedFields=k(r),h._dirtCount=d||0,h._index=new C;for(const[m,p]of h._documentIds)h._idToShortId.set(p,m);for(const[m,p]of e){const f=new Map;for(const c of Object.keys(p)){let g=p[c];l===1&&(g=g.ds),f.set(parseInt(c,10),k(g))}h._index.set(m,f)}return h},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),u=[];let o=0,i=0;const r=(l,a=!1)=>{let h="";i===0?h=l.length>20?`… ${l.slice(-20)}`:l:a?h=l.length+i>100?`${l.slice(0,100-i)}… `:l:h=l.length>20?`${l.slice(0,20)} … ${l.slice(-20)}`:l,h&&u.push(h),i+=h.length,a||(u.push(["mark",t]),i+=t.length,i>=100&&u.push(" …"))};let d=s.indexOf(n,o);if(d===-1)return null;for(;d>=0;){const l=d+n.length;if(r(e.slice(o,d)),o=l,i>100)break;d=s.indexOf(n,o)}return i<100&&r(e.slice(o),!0),u},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return K(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(u=>{const{id:o,terms:i,score:r}=u,d=o.includes("@"),l=o.includes("#"),[a,h]=o.split(/[#@]/),m=i.sort((f,c)=>f.length-c.length).filter((f,c)=>i.slice(c+1).every(g=>!g.includes(f))),{contents:p}=n[a]??={title:"",contents:[]};if(d)p.push([{type:"customField",key:a,index:h,display:m.map(f=>u.c.map(c=>j(c,f))).flat().filter(f=>f!==null)},r]);else{const f=m.map(c=>j(u.h,c)).filter(c=>c!==null);if(f.length&&p.push([{type:l?"heading":"title",key:a,...l&&{anchor:h},display:f},r]),"t"in u)for(const c of u.t){const g=m.map(_=>j(c,_)).filter(_=>_!==null);g.length&&p.push([{type:"text",key:a,...l&&{anchor:h},display:g},r])}}}),Q(n).sort(([,u],[,o])=>"max"==="total"?xt(u,o):kt(u,o)).map(([u,{title:o,contents:i}])=>{if(!o){const r=it(t,u);r&&(o=r.h)}return{title:o,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Ct(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":482,\"nextId\":482,\"documentIds\":{\"0\":\"v-12e1114e\",\"1\":\"v-12e1114e#当我们输入网址后发生了什么\",\"2\":\"v-12e1114e#http协议详解\",\"3\":\"v-12e1114e#cookie和session的区别\",\"4\":\"v-12e1114e#为什么会有这样的区别\",\"5\":\"v-12e1114e#http缓存机制\",\"6\":\"v-12e1114e#客户端缓存\",\"7\":\"v-12e1114e#服务器缓存\",\"8\":\"v-12e1114e#了解tcp-ip协议栈\",\"9\":\"v-12e1114e#iso-osi七层网络模型\",\"10\":\"v-299fc028\",\"11\":\"v-299fc028#网址\",\"12\":\"v-299fc028#实现useimmer-hook\",\"13\":\"v-19e4d17a\",\"14\":\"v-19e4d17a#react18的优化\",\"15\":\"v-19e4d17a#createroot\",\"16\":\"v-19e4d17a#unmount\",\"17\":\"v-19e4d17a#usetransition\",\"18\":\"v-19e4d17a#usedeferredvalue\",\"19\":\"v-19e4d17a#useid\",\"20\":\"v-19e4d17a#usesyncexternalstore\",\"21\":\"v-19e4d17a#useinsertioneffect\",\"22\":\"v-19e4d17a#ssr\",\"23\":\"v-19e4d17a#状态管理库\",\"24\":\"v-19e4d17a#组件库\",\"25\":\"v-19e4d17a#storybook\",\"26\":\"v-19e4d17a#私仓\",\"27\":\"v-744e35e2\",\"28\":\"v-744e35e2#mvvm\",\"29\":\"v-744e35e2#object-defineproperty\",\"30\":\"v-e902167c\",\"31\":\"v-e902167c#object-defineproperty\",\"32\":\"v-e902167c#为什么vue2中要重写数组的监听\",\"33\":\"v-e902167c#observer\",\"34\":\"v-e902167c#watcher\",\"35\":\"v-e902167c#dep\",\"36\":\"v-e902167c#directive\",\"37\":\"v-e902167c#mvvm\",\"38\":\"v-e902167c#解释\",\"39\":\"v-e902167c#编译\",\"40\":\"v-e902167c#batcher\",\"41\":\"v-157f4d57\",\"42\":\"v-2d921140\",\"43\":\"v-395cf5dd\",\"44\":\"v-395cf5dd#solidity学习网站\",\"45\":\"v-395cf5dd#solidity语法\",\"46\":\"v-395cf5dd#基础部分\",\"47\":\"v-395cf5dd#_1-hello-solidity-sol\",\"48\":\"v-395cf5dd#_2-数据类型-sol\",\"49\":\"v-395cf5dd#_3-状态变量-sol\",\"50\":\"v-395cf5dd#_4-全局变量-sol\",\"51\":\"v-395cf5dd#_5-函数和函数修饰符-sol\",\"52\":\"v-395cf5dd#_5-1-修饰符-sol\",\"53\":\"v-395cf5dd#_6-数组-sol\",\"54\":\"v-395cf5dd#_7-mapping-sol\",\"55\":\"v-395cf5dd#_8-自定义结构-sol\",\"56\":\"v-395cf5dd#_9-事物控制与异常-sol\",\"57\":\"v-395cf5dd#_10-自定义修饰符-sol\",\"58\":\"v-395cf5dd#_11-storage与memory-sol\",\"59\":\"v-395cf5dd#_12-pure和if等-sol\",\"60\":\"v-395cf5dd#_13-interface-sol\",\"61\":\"v-395cf5dd#_14-payable-sol\",\"62\":\"v-395cf5dd#_15-事件-sol\",\"63\":\"v-395cf5dd#_16-other-sol\",\"64\":\"v-395cf5dd#提升部分\",\"65\":\"v-395cf5dd#_1-函数的重载-sol\",\"66\":\"v-395cf5dd#_2-库合约-sol\",\"67\":\"v-395cf5dd#_3-import-sol\",\"68\":\"v-395cf5dd#_4-调用合约\",\"69\":\"v-395cf5dd#yideng-sol\",\"70\":\"v-395cf5dd#_4-1-new调用-sol\",\"71\":\"v-395cf5dd#_4-2-继承调用-sol\",\"72\":\"v-395cf5dd#_4-3-合约地址的调用-sol\",\"73\":\"v-395cf5dd#_4-4-call-sol\",\"74\":\"v-395cf5dd#_4-5-staticcall-sol\",\"75\":\"v-395cf5dd#_4-6-delegatecall-sol\",\"76\":\"v-395cf5dd#_5-approve-sol\",\"77\":\"v-395cf5dd#_6-燃烧代币-sol\",\"78\":\"v-395cf5dd#_7-接收eth-receive和fallback-sol\",\"79\":\"v-395cf5dd#_8-发送eth-sol\",\"80\":\"v-395cf5dd#_9-合约内部创建合约-sol\",\"81\":\"v-395cf5dd#_10-create2-sol\",\"82\":\"v-395cf5dd#_11-删除合约-sol\",\"83\":\"v-395cf5dd#_12-abi-sol\",\"84\":\"v-395cf5dd#_13-hash-sol\",\"85\":\"v-395cf5dd#_14-函数选择器-selector-sol\",\"86\":\"v-395cf5dd#_15-trycatch-sol\",\"87\":\"v-395cf5dd#_16-assembly-sol\",\"88\":\"v-395cf5dd#_17-calldata-sol\",\"89\":\"v-395cf5dd#应用部分\",\"90\":\"v-395cf5dd#红包合约-sol\",\"91\":\"v-395cf5dd#合约的两个重要网站\",\"92\":\"v-395cf5dd#erc20-sol\",\"93\":\"v-395cf5dd#合约ide\",\"94\":\"v-395cf5dd#查询合约地址是否开源\",\"95\":\"v-64f2f668\",\"96\":\"v-64f2f668#npm排名\",\"97\":\"v-64f2f668#流行的js项目\",\"98\":\"v-64f2f668#一个基于react的个人博客网站\",\"99\":\"v-7e78eb94\",\"100\":\"v-7e78eb94#csr-client-side-rendering\",\"101\":\"v-7e78eb94#ssr-server-side-rendering\",\"102\":\"v-7e78eb94#混合渲染\",\"103\":\"v-3e735dd4\",\"104\":\"v-3e735dd4#tailwindcss-atomic-css\",\"105\":\"v-3e735dd4#_1-支持jit-即时编译\",\"106\":\"v-3e735dd4#_2-初始化tailwind\",\"107\":\"v-3e735dd4#_3-创建postcss-config-js\",\"108\":\"v-3e735dd4#_4-引入tailwindcss样式\",\"109\":\"v-3e735dd4#_5-修改webpack编译css\",\"110\":\"v-3e735dd4#mui\",\"111\":\"v-3e735dd4#安装\",\"112\":\"v-3e735dd4#安装依赖\",\"113\":\"v-3e735dd4#soda-friendly-errors-webpack-plugin\",\"114\":\"v-3e735dd4#welldone-software-why-did-you-render\",\"115\":\"v-3e735dd4#安装-1\",\"116\":\"v-3e735dd4#什么是why-did-you-render\",\"117\":\"v-3e735dd4#使用\",\"118\":\"v-1a1f4f06\",\"119\":\"v-1a1f4f06#函数式编程思维\",\"120\":\"v-1a1f4f06#函数柯里化\",\"121\":\"v-1a1f4f06#函数的反柯里化\",\"122\":\"v-1a1f4f06#高阶函数\",\"123\":\"v-1a1f4f06#尾调用优化\",\"124\":\"v-1a1f4f06#尾递归\",\"125\":\"v-1a1f4f06#闭包\",\"126\":\"v-1a1f4f06#实践网站\",\"127\":\"v-48db0e13\",\"128\":\"v-48db0e13#单元测试\",\"129\":\"v-48db0e13#安装\",\"130\":\"v-48db0e13#类型检查\",\"131\":\"v-48db0e13#jest-stare\",\"132\":\"v-48db0e13#需要用-swc-jest编译\",\"133\":\"v-48db0e13#majestic\",\"134\":\"v-48db0e13#e2e测试\",\"135\":\"v-48db0e13#cypress\",\"136\":\"v-48db0e13#一个ui测试库\",\"137\":\"v-48db0e13#https-typicode-github-io-husky\",\"138\":\"v-48db0e13#https-www-travis-ci-com\",\"139\":\"v-2096f05a\",\"140\":\"v-2096f05a#安装jotai-atomic-state\",\"141\":\"v-2096f05a#什么是状态撕裂\",\"142\":\"v-2096f05a#zustand\",\"143\":\"v-2096f05a#xstate\",\"144\":\"v-1606df62\",\"145\":\"v-1606df62#安装\",\"146\":\"v-1606df62#lerna\",\"147\":\"v-1606df62#turborepo\",\"148\":\"v-53f693f4\",\"149\":\"v-53f693f4#storybook\",\"150\":\"v-53f693f4#cva\",\"151\":\"v-18f9aeef\",\"152\":\"v-a4c2be1e\",\"153\":\"v-a4c2be1e#归并排序\",\"154\":\"v-a4c2be1e#快排\",\"155\":\"v-a4c2be1e#顺序搜索\",\"156\":\"v-608b05b0\",\"157\":\"v-608b05b0#prepack\",\"158\":\"v-608b05b0#解析webpack同步加载文件构建代码\",\"159\":\"v-608b05b0#解析webpack异步加载文件构建代码\",\"160\":\"v-608b05b0#webpack原理\",\"161\":\"v-341b4530\",\"162\":\"v-341b4530#提高webpack构建速度有哪些方案\",\"163\":\"v-341b4530#webpack源码核心模块有哪几个-分别是什么作用\",\"164\":\"v-341b4530#如何保证各个loader按照预想的方式工作\",\"165\":\"v-341b4530#是否写过loader-简述一下编写loader的思路\",\"166\":\"v-341b4530#是否写过plugin-简述一下编写plugin的思路\",\"167\":\"v-341b4530#详细描述babel原理\",\"168\":\"v-341b4530#详细描述swc原理\",\"169\":\"v-341b4530#使用swc-loader比使用babel-loader优势有哪些\",\"170\":\"v-341b4530#vite的原理是什么\",\"171\":\"v-341b4530#说一下webpack的热更新原理\",\"172\":\"v-341b4530#如何对bundle体积进行监控和分析\",\"173\":\"v-341b4530#你的项目工程化sonar是如何配置的\",\"174\":\"v-341b4530#以一个vue项目为例-说一下sonar的具体配置\",\"175\":\"v-341b4530#你的项目ci-cd使用的是什么\",\"176\":\"v-341b4530#node-modules的包安全性问题如何解决\",\"177\":\"v-341b4530#webpack-splitchunks是如何配置的\",\"178\":\"v-341b4530#webpack文件监听原理是什么\",\"179\":\"v-341b4530#目前你了解的前端构建工具都有哪些-区别是什么\",\"180\":\"v-341b4530#tree-shaking的原理是什么\",\"181\":\"v-341b4530#项目中eslint是如何配置的-怎么平衡大家的抗拒心理\",\"182\":\"v-341b4530#你有开发过自己的脚手架吗-解决了项目的什么问题\",\"183\":\"v-341b4530#综合聊一下你会前端工程化的理解\",\"184\":\"v-341b4530#请你描述下目前的monorepo的方案有哪些-各自的优缺点是什么\",\"185\":\"v-1d56822b\",\"186\":\"v-1d56822b#loader-概念\",\"187\":\"v-1d56822b#loader-执行顺序\",\"188\":\"v-1d56822b#开发一个-loader\",\"189\":\"v-1d56822b#_1-最简单的-loader\",\"190\":\"v-1d56822b#_2-loader-接受的参数\",\"191\":\"v-1d56822b#loader-分类\",\"192\":\"v-1d56822b#_1-同步-loader\",\"193\":\"v-1d56822b#_2-异步-loader\",\"194\":\"v-1d56822b#_3-raw-loader\",\"195\":\"v-1d56822b#_4-pitching-loader\",\"196\":\"v-1d56822b#loader-api\",\"197\":\"v-1d56822b#手写-clean-log-loader\",\"198\":\"v-1d56822b#手写-banner-loader\",\"199\":\"v-1d56822b#手写-babel-loader\",\"200\":\"v-1d56822b#手写-file-loader\",\"201\":\"v-1d56822b#手写-style-loader\",\"202\":\"v-66ca194b\",\"203\":\"v-66ca194b#plugin-的作用\",\"204\":\"v-66ca194b#plugin-工作原理\",\"205\":\"v-66ca194b#webpack-内部的钩子\",\"206\":\"v-66ca194b#什么是钩子\",\"207\":\"v-66ca194b#tapable\",\"208\":\"v-66ca194b#plugin-构建对象\",\"209\":\"v-66ca194b#compiler\",\"210\":\"v-66ca194b#compilation\",\"211\":\"v-66ca194b#生命周期简图\",\"212\":\"v-66ca194b#开发一个插件\",\"213\":\"v-66ca194b#最简单的插件\",\"214\":\"v-66ca194b#注册-hook\",\"215\":\"v-66ca194b#启动调试\",\"216\":\"v-66ca194b#bannerwebpackplugin\",\"217\":\"v-66ca194b#cleanwebpackplugin\",\"218\":\"v-66ca194b#analyzewebpackplugin\",\"219\":\"v-66ca194b#inlinechunkwebpackplugin\",\"220\":\"v-6ceac9bb\",\"221\":\"v-6ceac9bb#提取-css-成单独文件\",\"222\":\"v-6ceac9bb#_1-下载包\",\"223\":\"v-6ceac9bb#_2-配置\",\"224\":\"v-6ceac9bb#_3-运行指令\",\"225\":\"v-6ceac9bb#css-兼容性处理\",\"226\":\"v-6ceac9bb#_1-下载包-1\",\"227\":\"v-6ceac9bb#_2-配置-1\",\"228\":\"v-6ceac9bb#_3-控制兼容性\",\"229\":\"v-6ceac9bb#_4-合并配置\",\"230\":\"v-6ceac9bb#_5-运行指令\",\"231\":\"v-6ceac9bb#css-压缩\",\"232\":\"v-6ceac9bb#_1-下载包-2\",\"233\":\"v-6ceac9bb#_2-配置-2\",\"234\":\"v-6ceac9bb#_3-运行指令-1\",\"235\":\"v-6ceac9bb#例子\",\"236\":\"v-731ef7e3\",\"237\":\"v-0558690d\",\"238\":\"v-0558690d#_1-配置\",\"239\":\"v-0558690d#_2-修改-index-html\",\"240\":\"v-0558690d#_3-运行指令\",\"241\":\"v-0558690d#例子\",\"242\":\"v-7d5dadbc\",\"243\":\"v-7d5dadbc#为什么需要打包工具\",\"244\":\"v-7d5dadbc#有哪些打包工具\",\"245\":\"v-36a47557\",\"246\":\"v-36a47557#功能介绍\",\"247\":\"v-36a47557#开始使用\",\"248\":\"v-36a47557#_1-资源目录\",\"249\":\"v-36a47557#_2-创建文件\",\"250\":\"v-36a47557#_3-下载依赖\",\"251\":\"v-36a47557#_4-启用-webpack\",\"252\":\"v-36a47557#_5-观察输出文件\",\"253\":\"v-36a47557#例子\",\"254\":\"v-36a47557#小结\",\"255\":\"v-560e9a83\",\"256\":\"v-560e9a83#_5-大核心概念\",\"257\":\"v-560e9a83#准备-webpack-配置文件\",\"258\":\"v-560e9a83#修改配置文件\",\"259\":\"v-560e9a83#例子\",\"260\":\"v-560e9a83#小结\",\"261\":\"v-00d7caf9\",\"262\":\"v-00d7caf9#_1-下载包\",\"263\":\"v-00d7caf9#_2-配置\",\"264\":\"v-00d7caf9#_3-修改-index-html\",\"265\":\"v-00d7caf9#_4-运行指令\",\"266\":\"v-728a8037\",\"267\":\"v-728a8037#eslint\",\"268\":\"v-728a8037#_1-配置文件\",\"269\":\"v-728a8037#_2-具体配置\",\"270\":\"v-728a8037#_3-在-webpack-中使用\",\"271\":\"v-728a8037#_4-vscode-eslint-插件\",\"272\":\"v-728a8037#babel\",\"273\":\"v-728a8037#_1-配置文件-1\",\"274\":\"v-728a8037#_2-具体配置-1\",\"275\":\"v-728a8037#_3-在-webpack-中使用-1\",\"276\":\"v-69d84ce9\",\"277\":\"v-69d84ce9#_1-配置\",\"278\":\"v-69d84ce9#_2-运行指令\",\"279\":\"v-5ba534f0\",\"280\":\"v-5ba534f0#_1-配置\",\"281\":\"v-5ba534f0#_2-添加图片资源\",\"282\":\"v-5ba534f0#_3-使用图片资源\",\"283\":\"v-5ba534f0#_4-运行指令\",\"284\":\"v-5ba534f0#_5-输出资源情况\",\"285\":\"v-5ba534f0#_6-对图片资源进行优化\",\"286\":\"v-5ba534f0#例子\",\"287\":\"v-53902a3b\",\"288\":\"v-53902a3b#_1-下载字体图标文件\",\"289\":\"v-53902a3b#_2-添加字体图标资源\",\"290\":\"v-53902a3b#_3-配置\",\"291\":\"v-53902a3b#_4-运行指令\",\"292\":\"v-db7c99b0\",\"293\":\"v-db7c99b0#介绍\",\"294\":\"v-db7c99b0#处理-css-资源\",\"295\":\"v-db7c99b0#_1-下载包\",\"296\":\"v-db7c99b0#_2-功能介绍\",\"297\":\"v-db7c99b0#_3-配置\",\"298\":\"v-db7c99b0#_4-添加-css-资源\",\"299\":\"v-db7c99b0#_5-运行指令\",\"300\":\"v-db7c99b0#处理-less-资源\",\"301\":\"v-db7c99b0#_1-下载包-1\",\"302\":\"v-db7c99b0#_2-功能介绍-1\",\"303\":\"v-db7c99b0#_3-配置-1\",\"304\":\"v-db7c99b0#_4-添加-less-资源\",\"305\":\"v-db7c99b0#_5-运行指令-1\",\"306\":\"v-db7c99b0#处理-sass-和-scss-资源\",\"307\":\"v-db7c99b0#_1-下载包-2\",\"308\":\"v-db7c99b0#_2-功能介绍-2\",\"309\":\"v-db7c99b0#_3-配置-2\",\"310\":\"v-db7c99b0#_4-添加-sass-资源\",\"311\":\"v-db7c99b0#_5-运行指令-2\",\"312\":\"v-db7c99b0#处理-styl-资源\",\"313\":\"v-db7c99b0#_1-下载包-3\",\"314\":\"v-db7c99b0#_2-功能介绍-3\",\"315\":\"v-db7c99b0#_3-配置-3\",\"316\":\"v-db7c99b0#_4-添加-styl-资源\",\"317\":\"v-db7c99b0#_5-运行指令-3\",\"318\":\"v-db7c99b0#例子\",\"319\":\"v-94758f78\",\"320\":\"v-94758f78#_1-下载包\",\"321\":\"v-94758f78#_2-配置\",\"322\":\"v-94758f78#_3-运行指令\",\"323\":\"v-94758f78#例子\",\"324\":\"v-7fdbcde0\",\"325\":\"v-1be42eb0\",\"326\":\"v-619bb801\",\"327\":\"v-619bb801#生产模式准备\",\"328\":\"v-619bb801#_1-文件目录\",\"329\":\"v-619bb801#_2-修改-webpack-dev-js\",\"330\":\"v-619bb801#_3-修改-webpack-prod-js\",\"331\":\"v-619bb801#_4-配置运行指令\",\"332\":\"v-619bb801#例子\",\"333\":\"v-4f8e5d4e\",\"334\":\"v-4f8e5d4e#_1-配置\",\"335\":\"v-4f8e5d4e#_2-运行指令\",\"336\":\"v-3c181cc8\",\"337\":\"v-3c181cc8#开发模式配置\",\"338\":\"v-3c181cc8#生产模式配置\",\"339\":\"v-3c181cc8#其他配置\",\"340\":\"v-3c181cc8#合并开发和生产配置\",\"341\":\"v-3c181cc8#优化配置\",\"342\":\"v-13a76696\",\"343\":\"v-13a76696#开发模式配置\",\"344\":\"v-13a76696#生产模式配置\",\"345\":\"v-13a76696#其他配置\",\"346\":\"v-13a76696#合并开发和生产配置\",\"347\":\"v-13a76696#优化配置\",\"348\":\"v-075d8c56\",\"349\":\"v-075d8c56#提升开发体验\",\"350\":\"v-075d8c56#sourcemap\",\"351\":\"v-075d8c56#为什么\",\"352\":\"v-075d8c56#是什么\",\"353\":\"v-075d8c56#怎么用\",\"354\":\"v-075d8c56#提升打包构建速度\",\"355\":\"v-075d8c56#hotmodulereplacement-热模块替换\",\"356\":\"v-075d8c56#为什么-1\",\"357\":\"v-075d8c56#是什么-1\",\"358\":\"v-075d8c56#怎么用-1\",\"359\":\"v-075d8c56#oneof\",\"360\":\"v-075d8c56#为什么-2\",\"361\":\"v-075d8c56#是什么-2\",\"362\":\"v-075d8c56#怎么用-2\",\"363\":\"v-075d8c56#include-exclude\",\"364\":\"v-075d8c56#为什么-3\",\"365\":\"v-075d8c56#是什么-3\",\"366\":\"v-075d8c56#怎么用-3\",\"367\":\"v-075d8c56#cache\",\"368\":\"v-075d8c56#为什么-4\",\"369\":\"v-075d8c56#是什么-4\",\"370\":\"v-075d8c56#怎么用-4\",\"371\":\"v-075d8c56#thread\",\"372\":\"v-075d8c56#为什么-5\",\"373\":\"v-075d8c56#是什么-5\",\"374\":\"v-075d8c56#怎么用-5\",\"375\":\"v-075d8c56#减少代码体积\",\"376\":\"v-075d8c56#tree-shaking\",\"377\":\"v-075d8c56#为什么-6\",\"378\":\"v-075d8c56#是什么-6\",\"379\":\"v-075d8c56#怎么用-6\",\"380\":\"v-075d8c56#babel\",\"381\":\"v-075d8c56#为什么-7\",\"382\":\"v-075d8c56#是什么-7\",\"383\":\"v-075d8c56#怎么用-7\",\"384\":\"v-075d8c56#image-minimizer\",\"385\":\"v-075d8c56#为什么-8\",\"386\":\"v-075d8c56#是什么-8\",\"387\":\"v-075d8c56#怎么用-8\",\"388\":\"v-075d8c56#优化代码运行性能\",\"389\":\"v-075d8c56#code-split\",\"390\":\"v-075d8c56#为什么-9\",\"391\":\"v-075d8c56#是什么-9\",\"392\":\"v-075d8c56#怎么用-9\",\"393\":\"v-075d8c56#_1-多入口\",\"394\":\"v-075d8c56#_2-提取重复代码\",\"395\":\"v-075d8c56#_3-按需加载-动态导入\",\"396\":\"v-075d8c56#_4-单入口\",\"397\":\"v-075d8c56#_5-更新配置\",\"398\":\"v-075d8c56#_6-给动态导入文件取名称\",\"399\":\"v-06b83d56\",\"400\":\"v-75cb8dd2\",\"401\":\"v-75cb8dd2#code-split\",\"402\":\"v-75cb8dd2#为什么\",\"403\":\"v-75cb8dd2#是什么\",\"404\":\"v-75cb8dd2#怎么用\",\"405\":\"v-75cb8dd2#_1-多入口\",\"406\":\"v-75cb8dd2#_2-提取重复代码\",\"407\":\"v-75cb8dd2#_3-按需加载-动态导入\",\"408\":\"v-75cb8dd2#_4-单入口\",\"409\":\"v-75cb8dd2#_5-更新配置\",\"410\":\"v-75cb8dd2#_6-给动态导入文件取名称\",\"411\":\"v-75cb8dd2#preload-prefetch\",\"412\":\"v-75cb8dd2#为什么-1\",\"413\":\"v-75cb8dd2#是什么-1\",\"414\":\"v-75cb8dd2#怎么用-1\",\"415\":\"v-75cb8dd2#network-cache\",\"416\":\"v-75cb8dd2#为什么-2\",\"417\":\"v-75cb8dd2#是什么-2\",\"418\":\"v-75cb8dd2#怎么用-2\",\"419\":\"v-75cb8dd2#core-js\",\"420\":\"v-75cb8dd2#为什么-3\",\"421\":\"v-75cb8dd2#是什么-3\",\"422\":\"v-75cb8dd2#怎么用-3\",\"423\":\"v-75cb8dd2#pwa\",\"424\":\"v-75cb8dd2#为什么-4\",\"425\":\"v-75cb8dd2#是什么-4\",\"426\":\"v-75cb8dd2#怎么用-4\",\"427\":\"v-75cb8dd2#例子\",\"428\":\"v-d420796c\",\"429\":\"v-d420796c#tree-shaking\",\"430\":\"v-d420796c#为什么\",\"431\":\"v-d420796c#是什么\",\"432\":\"v-d420796c#怎么用\",\"433\":\"v-d420796c#babel\",\"434\":\"v-d420796c#为什么-1\",\"435\":\"v-d420796c#是什么-1\",\"436\":\"v-d420796c#怎么用-1\",\"437\":\"v-d420796c#image-minimizer\",\"438\":\"v-d420796c#为什么-2\",\"439\":\"v-d420796c#是什么-2\",\"440\":\"v-d420796c#怎么用-2\",\"441\":\"v-d420796c#例子\",\"442\":\"v-22829807\",\"443\":\"v-4eeef966\",\"444\":\"v-4eeef966#sourcemap\",\"445\":\"v-4eeef966#为什么\",\"446\":\"v-4eeef966#是什么\",\"447\":\"v-4eeef966#怎么用\",\"448\":\"v-2644968e\",\"449\":\"v-2644968e#hotmodulereplacement\",\"450\":\"v-2644968e#为什么\",\"451\":\"v-2644968e#是什么\",\"452\":\"v-2644968e#怎么用\",\"453\":\"v-2644968e#oneof\",\"454\":\"v-2644968e#为什么-1\",\"455\":\"v-2644968e#是什么-1\",\"456\":\"v-2644968e#怎么用-1\",\"457\":\"v-2644968e#include-exclude\",\"458\":\"v-2644968e#为什么-2\",\"459\":\"v-2644968e#是什么-2\",\"460\":\"v-2644968e#怎么用-2\",\"461\":\"v-2644968e#cache\",\"462\":\"v-2644968e#为什么-3\",\"463\":\"v-2644968e#是什么-3\",\"464\":\"v-2644968e#怎么用-3\",\"465\":\"v-2644968e#thead\",\"466\":\"v-2644968e#为什么-4\",\"467\":\"v-2644968e#是什么-4\",\"468\":\"v-2644968e#怎么用-4\",\"469\":\"v-6a3c29b2\",\"470\":\"v-6bf10251\",\"471\":\"v-6da5daf0\",\"472\":\"v-6f5ab38f\",\"473\":\"v-dc3b2a6e\",\"474\":\"v-36c3b434\",\"475\":\"v-340c1e5c\",\"476\":\"v-a686174a\",\"477\":\"v-2d64492a\",\"478\":\"v-8d441e84\",\"479\":\"v-65f7d682\",\"480\":\"v-0ec5603f\",\"481\":\"v-7fde09ea\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[1,96],\"2\":[1,113],\"3\":[1,72],\"4\":[1,64],\"5\":[1,8],\"6\":[2,50],\"7\":[2,31],\"8\":[2],\"9\":[2,2],\"10\":[1],\"11\":[1,1],\"12\":[2,42],\"13\":[1],\"14\":[1],\"15\":[1,15],\"16\":[1,3],\"17\":[1,43],\"18\":[1,4],\"19\":[1,6],\"20\":[1],\"21\":[1,13],\"22\":[1],\"23\":[1,12],\"24\":[1],\"25\":[1,112],\"26\":[1,12],\"27\":[1],\"28\":[1,61],\"29\":[3,22],\"30\":[1],\"31\":[3,25],\"32\":[1,11],\"33\":[1,40],\"34\":[1,54],\"35\":[1,18],\"36\":[1,30],\"37\":[1,37],\"38\":[1,18],\"39\":[1,81],\"40\":[1,38],\"41\":[1,4],\"42\":[1,7],\"43\":[1],\"44\":[1,13],\"45\":[1],\"46\":[1,18],\"47\":[4,35],\"48\":[3,53],\"49\":[3,58],\"50\":[3,56],\"51\":[3,78],\"52\":[4,44],\"53\":[3,48],\"54\":[3,38],\"55\":[3,37],\"56\":[3,86],\"57\":[3,34],\"58\":[3,53],\"59\":[3,59],\"60\":[3,28],\"61\":[3,55],\"62\":[3,48],\"63\":[3,5],\"64\":[1],\"65\":[3,25],\"66\":[3,109],\"67\":[3,20],\"68\":[2],\"69\":[2,30],\"70\":[4,27],\"71\":[4,25],\"72\":[4,31],\"73\":[3,56],\"74\":[4,46],\"75\":[4,55],\"76\":[3,48],\"77\":[3,50],\"78\":[4,44],\"79\":[3,66],\"80\":[3,47],\"81\":[3,2],\"82\":[3,23],\"83\":[3,46],\"84\":[3,29],\"85\":[4,46],\"86\":[3,80],\"87\":[3,28],\"88\":[3,47],\"89\":[1],\"90\":[2,127],\"91\":[1,19],\"92\":[2,74],\"93\":[1,10],\"94\":[1,4],\"95\":[1],\"96\":[1,1],\"97\":[1,1],\"98\":[1,1],\"99\":[3,10],\"100\":[5,35],\"101\":[5,29],\"102\":[1,22],\"103\":[1],\"104\":[3,1],\"105\":[3,11],\"106\":[2,36],\"107\":[4,19],\"108\":[2,5],\"109\":[2,94],\"110\":[1,1],\"111\":[1,8],\"112\":[1],\"113\":[6,11],\"114\":[7],\"115\":[1,10],\"116\":[4,40],\"117\":[1,76],\"118\":[1],\"119\":[1,74],\"120\":[1,72],\"121\":[1,48],\"122\":[1,75],\"123\":[1,55],\"124\":[1,45],\"125\":[1,68],\"126\":[1,7],\"127\":[1],\"128\":[1,1],\"129\":[1,6],\"130\":[1,6],\"131\":[2,43],\"132\":[3,6],\"133\":[1,15],\"134\":[1,71],\"135\":[1,11],\"136\":[1,60],\"137\":[6],\"138\":[6],\"139\":[1],\"140\":[3,7],\"141\":[1,71],\"142\":[1,2],\"143\":[1,3],\"144\":[1,1],\"145\":[1,13],\"146\":[1,7],\"147\":[1,1],\"148\":[1],\"149\":[1,1],\"150\":[1,1],\"151\":[1],\"152\":[1],\"153\":[1,26],\"154\":[1,37],\"155\":[1,33],\"156\":[1],\"157\":[1,56],\"158\":[1,68],\"159\":[1,287],\"160\":[1,23],\"161\":[1],\"162\":[1],\"163\":[3],\"164\":[2],\"165\":[2],\"166\":[2],\"167\":[1],\"168\":[1],\"169\":[4],\"170\":[2],\"171\":[1],\"172\":[1],\"173\":[1],\"174\":[2],\"175\":[2],\"176\":[2],\"177\":[2],\"178\":[1],\"179\":[3],\"180\":[2],\"181\":[2],\"182\":[3],\"183\":[1],\"184\":[3],\"185\":[2],\"186\":[2,5],\"187\":[2,60],\"188\":[2],\"189\":[3,17],\"190\":[3,7],\"191\":[2],\"192\":[3,24],\"193\":[3,29],\"194\":[3,24],\"195\":[3,31],\"196\":[2,37],\"197\":[4,21],\"198\":[3,42],\"199\":[3,48],\"200\":[3,51],\"201\":[3,103],\"202\":[2],\"203\":[2,7],\"204\":[2,32],\"205\":[2],\"206\":[1,11],\"207\":[1,47],\"208\":[2],\"209\":[1,43],\"210\":[1,38],\"211\":[1,2],\"212\":[1],\"213\":[1,26],\"214\":[2,67],\"215\":[1,92],\"216\":[1,64],\"217\":[1,80],\"218\":[1,55],\"219\":[1,78],\"220\":[2],\"221\":[3,17],\"222\":[2,8],\"223\":[2,111],\"224\":[2,4],\"225\":[2],\"226\":[2,8],\"227\":[2,117],\"228\":[2,27],\"229\":[2,124],\"230\":[2,4],\"231\":[2],\"232\":[2,8],\"233\":[2,127],\"234\":[2,4],\"235\":[1,2],\"236\":[2,6],\"237\":[1],\"238\":[2,65],\"239\":[4,53],\"240\":[2,17],\"241\":[1,2],\"242\":[1],\"243\":[2,22],\"244\":[2,9],\"245\":[1,10],\"246\":[1,13],\"247\":[1],\"248\":[2,16],\"249\":[2,26],\"250\":[2,22],\"251\":[3,21],\"252\":[2,7],\"253\":[1,2],\"254\":[1,11],\"255\":[1,6],\"256\":[2,29],\"257\":[3,24],\"258\":[1,40],\"259\":[1,2],\"260\":[1,12],\"261\":[3],\"262\":[2,7],\"263\":[2,98],\"264\":[4,58],\"265\":[2,8],\"266\":[3,34],\"267\":[1,20],\"268\":[2,15],\"269\":[2,103],\"270\":[4,128],\"271\":[4,22],\"272\":[1,7],\"273\":[2,15],\"274\":[2,28],\"275\":[4,124],\"276\":[1,3],\"277\":[2,73],\"278\":[2,6],\"279\":[1,17],\"280\":[2,44],\"281\":[2,8],\"282\":[2,24],\"283\":[2,6],\"284\":[2,18],\"285\":[2,67],\"286\":[1,2],\"287\":[1],\"288\":[2,3],\"289\":[2,88],\"290\":[2,82],\"291\":[2,6],\"292\":[1,9],\"293\":[1,15],\"294\":[3],\"295\":[2,8],\"296\":[2,16],\"297\":[2,31],\"298\":[4,75],\"299\":[2,6],\"300\":[3],\"301\":[2,6],\"302\":[2,7],\"303\":[2,33],\"304\":[4,70],\"305\":[2,6],\"306\":[5],\"307\":[2,7],\"308\":[2,9],\"309\":[2,37],\"310\":[4,76],\"311\":[2,6],\"312\":[3],\"313\":[2,6],\"314\":[2,7],\"315\":[2,39],\"316\":[4,85],\"317\":[2,6],\"318\":[1,2],\"319\":[2,3],\"320\":[2,7],\"321\":[2,108],\"322\":[2,14],\"323\":[1,2],\"324\":[1,20],\"325\":[1,33],\"326\":[1,7],\"327\":[1,1],\"328\":[2,32],\"329\":[5,116],\"330\":[5,110],\"331\":[2,23],\"332\":[1,2],\"333\":[1],\"334\":[2,70],\"335\":[2,5],\"336\":[2],\"337\":[1,153],\"338\":[1,159],\"339\":[1,105],\"340\":[1,228],\"341\":[1,224],\"342\":[2],\"343\":[1,153],\"344\":[1,164],\"345\":[1,105],\"346\":[1,187],\"347\":[1,230],\"348\":[1,7],\"349\":[1],\"350\":[1],\"351\":[2,121],\"352\":[1,15],\"353\":[1,28],\"354\":[1],\"355\":[2],\"356\":[1,9],\"357\":[1,8],\"358\":[1,66],\"359\":[1],\"360\":[1,9],\"361\":[1,4],\"362\":[1,117],\"363\":[2],\"364\":[1,12],\"365\":[1,9],\"366\":[1,123],\"367\":[1],\"368\":[1,13],\"369\":[1,7],\"370\":[1,130],\"371\":[1],\"372\":[1,20],\"373\":[1,9],\"374\":[1,175],\"375\":[1],\"376\":[2],\"377\":[1,7],\"378\":[1,11],\"379\":[1,4],\"380\":[1],\"381\":[1,10],\"382\":[1,11],\"383\":[1,170],\"384\":[2],\"385\":[1,10],\"386\":[1,5],\"387\":[1,221],\"388\":[1],\"389\":[2],\"390\":[1,14],\"391\":[1,12],\"392\":[1,3],\"393\":[2,77],\"394\":[2,140],\"395\":[3,82],\"396\":[2,107],\"397\":[2,194],\"398\":[2,259],\"399\":[1,12],\"400\":[1],\"401\":[2],\"402\":[1,14],\"403\":[1,12],\"404\":[1,3],\"405\":[2,77],\"406\":[2,140],\"407\":[3,82],\"408\":[2,107],\"409\":[2,194],\"410\":[2,260],\"411\":[2],\"412\":[1,19],\"413\":[1,30],\"414\":[1,212],\"415\":[2],\"416\":[1,16],\"417\":[1,31],\"418\":[1,254],\"419\":[2],\"420\":[1,28],\"421\":[1,14],\"422\":[1,117],\"423\":[1],\"424\":[1,8],\"425\":[1,23],\"426\":[1,288],\"427\":[1,3],\"428\":[1],\"429\":[2],\"430\":[1,7],\"431\":[1,11],\"432\":[1,4],\"433\":[1],\"434\":[1,10],\"435\":[1,11],\"436\":[1,170],\"437\":[2],\"438\":[1,10],\"439\":[1,5],\"440\":[1,224],\"441\":[1,2],\"442\":[1,89],\"443\":[1],\"444\":[1],\"445\":[1,121],\"446\":[1,15],\"447\":[1,28],\"448\":[1],\"449\":[1],\"450\":[1,9],\"451\":[1,8],\"452\":[1,66],\"453\":[1],\"454\":[1,9],\"455\":[1,4],\"456\":[1,117],\"457\":[2],\"458\":[1,12],\"459\":[1,9],\"460\":[1,120],\"461\":[1],\"462\":[1,13],\"463\":[1,7],\"464\":[1,130],\"465\":[1],\"466\":[1,20],\"467\":[1,9],\"468\":[1,175],\"469\":[1,43],\"470\":[1,50],\"471\":[1,47],\"472\":[1,101],\"473\":[1],\"474\":[1],\"475\":[1],\"476\":[1],\"477\":[1],\"478\":[1],\"479\":[1],\"480\":[1],\"481\":[1]},\"averageFieldLength\":[1.7385892116182573,44.092654013320434],\"storedFields\":{\"0\":{\"h\":\"HTTP\"},\"1\":{\"h\":\"当我们输入网址后发生了什么\",\"t\":[\"当你在浏览器中输入一个网址并按下回车键时，发生了以下一系列的步骤，通常包括：\",\"DNS解析（Domain Name System）：\",\"浏览器首先会检查输入的网址，如果它是一个域名（如www.example.com），则需要将域名解析为对应的 IP 地址。这个过程通过 DNS 解析完成，浏览器会向本地 DNS 服务器发送请求，获取对应域名的 IP 地址。\",\"建立TCP连接：\",\"一旦浏览器获得了目标服务器的 IP 地址，它就会尝试与服务器建立 TCP 连接。这是通过三次握手过程完成的，确保客户端和服务器都能够正常通信。\",\"发起HTTP请求：\",\"浏览器通过已建立的 TCP 连接向服务器发送一个 HTTP 请求。这个请求包含了你想要获取的资源的信息，比如网页的 HTML 内容、样式表、JavaScript 文件等。\",\"服务器处理请求：\",\"服务器接收到浏览器发送的 HTTP 请求后，会根据请求的内容进行处理。这可能涉及到从数据库中检索数据、运行服务器端的脚本等操作。\",\"服务器返回HTTP响应：\",\"服务器根据处理结果生成一个 HTTP 响应，其中包含了请求资源的信息。这个响应包括一个状态码（表示请求成功、重定向、错误等）、响应头（包含元信息，如内容类型、日期等）、以及响应体（实际的数据，如HTML文件的内容）。\",\"浏览器接收响应：\",\"浏览器接收到来自服务器的 HTTP 响应后，它会检查状态码。如果状态码表示成功（通常是2xx），浏览器会继续处理响应，否则可能会展示错误页面或者执行相应的错误处理。\",\"渲染页面：\",\"如果响应是一个 HTML 页面，浏览器会开始解析 HTML、构建 DOM（文档对象模型）和 CSSSheets，然后将它们组合起来形成一个渲染列表。接着，浏览器根据渲染树展示页面内容。\",\"关闭连接：\",\"一旦页面被完全加载，浏览器可能会关闭与服务器的连接，除非这个连接需要保持活动状态以获取其他资源（例如图片、样式表等）。\",\"这是一个简化的描述，实际上涉及到许多优化和复杂的步骤，比如缓存、HTTP/2 多路复用等。整个过程称为浏览器的“网络请求生命周期”，而上述步骤构成了一次常规的网页加载过程。\"]},\"2\":{\"h\":\"HTTP协议详解\",\"t\":[\"HTTP（Hypertext Transfer Protocol）是一种用于在网络上传输超文本数据的协议。它是一个无状态、应用层的协议，通常基于TCP协议，用于在客户端和服务器之间传输信息。以下是HTTP协议的一些关键特点和详解：\",\"请求-响应模型：\",\"HTTP是一个请求-响应协议。客户端发送HTTP请求到服务器，服务器收到请求后返回HTTP响应。请求和响应都由多行文本组成，包含有关请求或响应的信息。\",\"无状态（Stateless）:\",\"HTTP协议是无状态的，每个请求都是独立的，服务器不会记录之前的请求信息。这使得每个请求都是相互独立的，但也导致了一些在处理复杂事务时的挑战。\",\"URI（Uniform Resource Identifier）:\",\"URI是一种标识资源的方式。在HTTP中，URL（Uniform Resource Locator）是URI的一种具体形式，用于指定资源的位置。\",\"方法（Methods）:\",\"HTTP定义了一些请求方法，最常见的是： \",\"GET： 从服务器获取资源。\",\"POST： 向服务器提交数据，用于创建新资源。\",\"PUT： 更新服务器上的资源。\",\"DELETE： 请求服务器删除指定的资源。\",\"HEAD： 与GET类似，但服务器只返回首部，不返回实体主体。\",\"状态码（Status Codes）:\",\"HTTP响应包含一个状态码，表示服务器对请求的处理结果。常见的状态码包括： \",\"200 OK： 请求成功。\",\"404 Not Found： 资源未找到。\",\"500 Internal Server Error： 服务器内部错误。\",\"报文结构：\",\"HTTP报文分为请求报文和响应报文。每个报文都包含三个部分： \",\"起始行（Start Line）： 包含方法（请求报文）或状态码（响应报文）。\",\"首部字段（Headers）： 包含一系列键值对，用于描述报文的属性。\",\"实体主体（Body）： 包含请求或响应的实际数据。\",\"连接管理：\",\"HTTP/1.1引入了持久连接（Keep-Alive），允许在单个连接上发送多个请求和响应，减少了每次请求的连接建立和关闭的开销。\",\"Cookie 和 Session：\",\"HTTP通过Cookie和Session机制支持状态保持。服务器可以通过Set-Cookie头将Cookie发送给客户端，客户端将Cookie存储并在后续请求中发送回服务器。\",\"安全性：\",\"HTTPS是基于HTTP的安全协议，通过使用SSL/TLS加密通信，确保数据在传输过程中的机密性和完整性。\",\"HTTP是互联网上最基本、最重要的协议之一，它为客户端和服务器之间的通信提供了标准化的方式。随着Web的发展，HTTP的版本也在不断更新，新的特性和优化被引入以适应不断变化的网络环境。\"]},\"3\":{\"h\":\"Cookie和Session的区别\",\"t\":[\"Cookie 和 Session 都是用于在客户端和服务器之间保持状态的机制，但它们有一些关键的区别：\",\"存储位置：\",\"Cookie： 存储在客户端（浏览器）中。Cookie 是服务器发送给客户端并存储在客户端的小型文本文件，通常包含有关用户的信息。\",\"Session： 存储在服务器端。Session 数据通常存储在服务器的内存中或数据库中，每个用户都有一个唯一的会话标识符，用于检索相关的会话数据。\",\"安全性：\",\"Cookie： 相对不安全。Cookie 存储在客户端，因此可以被用户查看和编辑。为了增加安全性，可以使用安全标志和HttpOnly标志。\",\"Session： 相对安全。因为 Session 数据存储在服务器上，用户无法直接访问或修改会话数据。\",\"容量：\",\"Cookie： 存储的数据有限，通常在4KB左右。过多的 Cookie 可能会影响请求性能。\",\"Session： 存储的数据相对较大，受服务器内存和配置的限制。\",\"过期时间：\",\"Cookie： 可以设置过期时间，可以是会话级别（浏览器关闭时过期）或具有固定的过期日期。\",\"Session： 通常在用户关闭浏览器或一定时间内不活动时过期，但具体过期规则由服务器管理。\",\"跨域：\",\"Cookie： 遵循同源策略，有限制跨域访问。\",\"Session： 通常由服务器生成并存储在服务器上，与域无关，可以在多个域之间共享。\",\"使用场景：\",\"Cookie： 适合存储小型且不敏感的数据，如用户偏好设置、跟踪用户行为等。\",\"Session： 适合存储敏感信息，如用户登录状态、购物车内容等。\",\"传输方式：\",\"Cookie： 会随着 HTTP 请求一起发送到服务器。每次请求都会带上相应的 Cookie。\",\"Session： 通常通过 Cookie 中的会话标识符来关联用户与服务器端存储的会话数据。\",\"综合考虑，Cookie和Session通常一起使用。用户登录后，服务器生成一个唯一的会话标识符，将其存储在一个 Cookie 中，同时在服务器端创建一个与该标识符相关联的 Session。这样，通过 Cookie 中的标识符，服务器可以识别用户，并从 Session 中检索相关的数据。这种结合使用的方式兼顾了安全性和性能。\"]},\"4\":{\"h\":\"为什么会有这样的区别\",\"t\":[\"Cookie 和 Session 之间的区别主要是由于它们的设计目标和实现机制不同，以及在 web 应用程序中的不同用途。以下是导致它们区别的一些原因：\",\"存储位置：\",\"Cookie： 设计用于在客户端存储小型的用户数据。它是通过在浏览器中存储一个小型的文本文件来实现的，使得客户端可以在用户的本地设备上持久保存一些信息。\",\"Session： 由于它的数据存储在服务器上，因此可以更安全地存储敏感信息，并且无法被客户端直接访问。\",\"安全性：\",\"Cookie： 存储在客户端，因此对于用户来说相对不安全。虽然可以通过一些手段（如设置安全标志和 HttpOnly 标志）增加安全性，但用户仍然可以查看和编辑 Cookie。\",\"Session： 存储在服务器上，用户无法直接访问或修改 Session 数据，因此相对更安全。\",\"容量：\",\"Cookie： 容量相对较小，通常在4KB左右。这是因为每个 HTTP 请求都会携带 Cookie 数据，而过大的 Cookie 数据可能会影响请求性能。\",\"Session： 存储在服务器上，可以存储相对较大的数据，受服务器内存和配置的限制。\",\"过期时间：\",\"Cookie： 可以设置过期时间，可以是会话级别（浏览器关闭时过期）或具有固定的过期日期。\",\"Session： 通常在用户关闭浏览器或一定时间内不活动时过期，具体过期规则由服务器管理。\",\"跨域：\",\"Cookie： 遵循同源策略，有限制跨域访问。Cookie 是与域名关联的。\",\"Session： 通常由服务器生成并存储在服务器上，与域无关，可以在多个域之间共享。\",\"使用场景：\",\"Cookie： 适合存储小型且不敏感的数据，如用户偏好设置、跟踪用户行为等。\",\"Session： 适合存储敏感信息，如用户登录状态、购物车内容等。\",\"这些差异主要反映了设计决策和权衡。Cookie 和 Session 在实现用户身份验证、状态保持和数据传递等方面都有各自的优势，开发者根据具体需求选择使用其中的一种或结合使用。\"]},\"5\":{\"h\":\"HTTP缓存机制\",\"t\":[\"HTTP缓存机制是一种通过在客户端和服务器之间存储已请求资源的副本来提高性能、减少网络带宽使用的技术。缓存机制允许浏览器在再次请求相同资源时，直接使用本地缓存而不是向服务器重新请求。这可以降低网络延迟和减轻服务器负载。\",\"HTTP缓存机制主要涉及两个方面：客户端缓存和服务器缓存。\"]},\"6\":{\"h\":\"客户端缓存：\",\"t\":[\"Expires 头：\",\"服务器在响应中发送 Expires 头，指定资源的过期时间。浏览器在此过期时间之前可以直接使用本地缓存。\",\"Expires: Wed, 21 Oct 2023 07:28:00 GMT \",\"Cache-Control 头：\",\"Cache-Control 头提供了更为灵活的缓存控制选项，可以指定缓存的最大时长、是否允许缓存代理等。\",\"Cache-Control: max-age=3600, must-revalidate \",\"max-age 指定了资源被认为是新鲜的最大时间（秒），must-revalidate 指示客户端必须在使用过期资源之前重新验证。\",\"Last-Modified 和 If-Modified-Since 头：\",\"服务器通过 Last-Modified 头指示资源的最后修改时间。客户端在后续请求中可以通过 If-Modified-Since 头将上次获取资源的时间发送给服务器，如果资源在此时间后没有发生变化，服务器返回 304 Not Modified，客户端使用本地缓存。\",\"Last-Modified: Wed, 21 Oct 2023 07:28:00 GMT \",\"ETag 和 If-None-Match 头：\",\"ETag 是服务器生成的资源唯一标识符。客户端在后续请求中可以通过 If-None-Match 头将上次获取资源时收到的 ETag 发送给服务器，如果资源的 ETag 没有发生变化，服务器返回 304 Not Modified，客户端使用本地缓存。\",\"ETag: \\\"abc123\\\" \"]},\"7\":{\"h\":\"服务器缓存：\",\"t\":[\"Cache-Control 头：\",\"服务器通过 Cache-Control 头来指定在客户端和代理服务器中的缓存行为。\",\"Cache-Control: public, max-age=3600 \",\"public 表示响应可以被任何缓存存储，包括客户端和代理服务器。\",\"Pragma 头：\",\"Pragma: no-cache 是一个过时的头部，它通常用于禁用客户端缓存。\",\"Vary 头：\",\"Vary 头决定了缓存的变体，即哪些请求头的改变会影响缓存的有效性。\",\"Vary: Accept-Encoding, User-Agent \",\"上述例子表示缓存的有效性受到请求头中的 Accept-Encoding 和 User-Agent 的影响。\",\"Pragma 头：\",\"Pragma: no-cache 是一个过时的头部，它通常用于禁用客户端缓存。\",\"HTTP缓存机制的合理使用可以显著提升Web应用的性能，减轻服务器负载，降低网络带宽的使用。不同的场景可能需要使用不同的缓存策略，开发者需要根据具体情况选择合适的缓存配置。\"]},\"8\":{\"h\":\"了解TCP/IP协议栈\"},\"9\":{\"h\":\"ISO/OSI七层网络模型\",\"t\":[\"tcp慢：确认重传机制\"]},\"10\":{\"h\":\"immer\"},\"11\":{\"h\":\"网址\",\"t\":[\"immer\"]},\"12\":{\"h\":\"实现useImmer hook\",\"t\":[\"import { produce, Draft, freeze } from 'immer'; import { useCallback, useState } from 'react'; export type DraftFunction<S> = (draft: Draft<S>) => void; export type Updater<S> = (arg: S | DraftFunction<S>) => void; export type ImmerHook<S> = [S, Updater<S>]; export function useImmer<S = unknown>(initialValue: S | (() => S)): ImmerHook<S>; export function useImmer<T>(initialValue: T): any { const [val, updateValue] = useState(() => freeze(typeof initialValue === 'function' ? initialValue() : initialValue, true), ); return [ val, useCallback((updater: Updater<T>) => { if (typeof updater === 'function') { updateValue(produce(updater)); } else { updateValue(freeze(updater, true)); } }, []) ] } \",\"immer可以阻止无意义的渲染。\"]},\"13\":{\"h\":\"react性能优化\"},\"14\":{\"h\":\"react18的优化\"},\"15\":{\"h\":\"createRoot\",\"t\":[\"const root = ReactDOM.createRoot(document.getElementById('root')); root.render( <React.StrictMode> <App /> </React.StrictMode> ); \"]},\"16\":{\"h\":\"unmount\",\"t\":[\"root.unmount(); \"]},\"17\":{\"h\":\"useTransition\",\"t\":[\"import { useTransition, useState } from \\\"react\\\"; function Demo() { const [isPending, startTransition] = useTransition(); const [count, setCount] = useState(0); const handleClick = () => { startTransition(() => { setCount(c => c + 1) }) } return ( <div className=\\\"App\\\"> <h2> Count: {count} <span> {isPending ? \\\"loading...\\\" : null} </span> </h2> <button onClick={handleClick}>click me</button> </div> ); } export default Demo; \",\"当不需要isPending时，可直接引入startTransition\",\"import { startTransition } from \\\"react\\\"; \"]},\"18\":{\"h\":\"useDeferredValue\",\"t\":[\"不紧急的值可以用useDeferredValue延迟渲染\",\"useDeferredValue(title) \"]},\"19\":{\"h\":\"useId\",\"t\":[\"生成一格组件内部的id\",\"const id = useId() \"]},\"20\":{\"h\":\"useSyncExternalStore\"},\"21\":{\"h\":\"useInsertionEffect\",\"t\":[\"useInsertionEffect 是为 CSS-in-JS 库的作者特意打造的。除非你正在使用 CSS-in-JS 库并且需要注入样式，否则你应该使用 useEffect 或者 useLayoutEffect。\"]},\"22\":{\"h\":\"SSR\"},\"23\":{\"h\":\"状态管理库\",\"t\":[\"jotai: https://jotai.org/\",\"原子状态\",\"zustand\",\"xstate\",\"适用于复杂的项目，比如游戏\",\"valtio\",\"valtio-yjs\",\"react-query\"]},\"24\":{\"h\":\"组件库\"},\"25\":{\"h\":\"storybook\",\"t\":[\"网站：https://storybook.js.org/ 安装： 以react为例\",\"先安装react\",\"pnpm init pnpm i react react-dom pnpm i @types/react @types/react-dom typescripts -D \",\"安装storybook\",\"pnpm dlx storybook@latest init \",\"关闭自动上报给组件库官方\",\"import type { StorybookConfig } from \\\"@storybook/react-webpack5\\\"; const config: StorybookConfig = { stories: [ \\\"../stories/**/*.mdx\\\", \\\"../stories/**/*.stories.@(js|jsx|mjs|ts|tsx)\\\", ], addons: [ \\\"@storybook/addon-links\\\", \\\"@storybook/addon-essentials\\\", \\\"@storybook/addon-onboarding\\\", \\\"@storybook/addon-interactions\\\", ], framework: { name: \\\"@storybook/react-webpack5\\\", options: {}, }, docs: { autodocs: \\\"tag\\\", }, core: { disableTelemetry: true } }; export default config; \",\"安装postcss\",\"PostCSS是一个基于JavaScript的CSS处理器，它利用JavaScript的强大编程能力对CSS代码进行转换，从而使CSS具有更多的功能和更高的可扩展性。PostCSS可以用来为CSS属性添加特定于浏览器厂商的前缀、支持未来CSS语法、模块化、代码压缩和自动补全等。它可以通过插件扩展，支持各种各样的CSS处理任务，如自动补全、语法高亮、选择器折叠等。\",\"总的来说，PostCSS是一个功能强大且灵活的CSS处理工具，可以帮助开发者更轻松地编写和维护CSS代码。\",\"pnpm i @storybook/addon-postcss -D \",\"导入postcss\",\"import type { StorybookConfig } from \\\"@storybook/react-webpack5\\\"; const config: StorybookConfig = { stories: [ \\\"../stories/**/*.mdx\\\", \\\"../stories/**/*.stories.@(js|jsx|mjs|ts|tsx)\\\", ], addons: [ \\\"@storybook/addon-links\\\", \\\"@storybook/addon-essentials\\\", \\\"@storybook/addon-onboarding\\\", \\\"@storybook/addon-interactions\\\", { name: '@storybook/addon-postcss', options: { postcssLoaderOptions: { implementation: require('postcss'), }, }, }, ], framework: { name: \\\"@storybook/react-webpack5\\\", options: {}, }, docs: { autodocs: \\\"tag\\\", }, core: { disableTelemetry: true } }; export default config; \",\"安装tailwindcss\",\"pnpm install -D tailwindcss postcss autoprefixer \",\"生成tailwind.config.js\",\"pnpm dlx tailwindcss init \",\"/** @type {import('tailwindcss').Config} */ module.exports = { content: [ './stories/**/*.@(js|jsx|ts|tsx|mdx|css)' ], theme: { extend: {}, }, plugins: [], } \",\"创建postcss.config.js\",\"module.exports = { plugins: { tailwindcss: {}, autoprefixer: {}, } } \",\"创建tailwind css入口文件\",\"在assets文件夹下创建index.css\",\"@tailwind base; @tailwind components; @tailwind utilities; \",\"在项目中引入 .storybook/preview.ts\",\"import type { Preview } from \\\"@storybook/react\\\"; import '../stories/assets/index.css'; const preview: Preview = { parameters: { actions: { argTypesRegex: \\\"^on[A-Z].*\\\" }, controls: { matchers: { color: /(background|color)$/i, date: /Date$/i, }, }, }, }; export default preview; \",\"安装classnames\",\"pnpm i classnames \",\"tailwindcss\"]},\"26\":{\"h\":\"私仓\",\"t\":[\"verdaccio\",\"lerna(rush、turbo) + pnpm\",\"tanstack.com 大数据表格虚拟滚动\",\"bestofjs.org\\n技术选型网站\"]},\"27\":{\"h\":\"vue\"},\"28\":{\"h\":\"MVVM\",\"t\":[\"MVVM 是一种软件架构模式，用于设计和组织应用程序的代码。它包括三个主要组件：Model（模型）、View（视图）和ViewModel（视图模型）。MVVM 的目标是分离用户界面（UI）的开发和业务逻辑的开发，并提供更好的可维护性和可测试性。\",\"下面是 MVVM 中各个组件的主要职责：\",\"Model（模型）： 模型代表应用程序中的数据和业务逻辑。它负责管理数据的状态和行为，并提供一种访问和修改数据的方式。在前端开发中，模型通常表示应用程序的数据结构，以及对数据进行操作的方法。\",\"View（视图）： 视图是用户界面的表示，负责呈现数据以供用户查看和操作。视图通常是由模板或页面组成，它反映了模型的状态，并向用户展示相关信息。在前端开发中，视图通常是用户界面的 HTML 结构、样式和布局。\",\"ViewModel（视图模型）： 视图模型是连接视图和模型的桥梁，它负责处理用户界面的逻辑和状态。视图模型从模型中获取数据，并将其转换为视图可以理解和展示的格式。它还负责处理用户输入、用户操作和视图的状态管理。在前端开发中，视图模型通常是由 JavaScript 框架（如Vue.js、React、Angular等）提供的，用于管理视图的状态和逻辑。\",\"MVVM 的核心思想是通过视图模型将视图和模型分离，使得视图的变化不直接影响模型，而是通过视图模型来间接完成。这种分离有助于提高代码的可维护性，同时也提供了更好的测试和扩展性。MVVM 在前端开发中得到广泛应用，尤其在使用现代 JavaScript 框架构建单页面应用（SPA）时。\",\"模型及数据结构，数据发生变化触发视图更新，视图发生操作触发数据更新。\"]},\"29\":{\"h\":\"Object.defineProperty()\",\"t\":[\"数组操作，会引起内存段里面的数据频繁发生改变。\",\"Observer -> 响应式数据\",\"watcher: 观察和衔接dep、Observer、render\",\"Dep: 收集的是watcher\",\"Derective\",\"vue2 模版编译是通过正则匹配的,\",\"vue3 模版编译是状态机\",\"vue3在线编译是有with的\",\"fiber\",\"chrome://tracing/\",\"懒代理\",\"AST语法树在线工具\",\"vue2原理\"]},\"30\":{\"h\":\"vue2原理\"},\"31\":{\"h\":\"Object.defineProperty()\",\"t\":[\"Object.defineProperty()可以监听对象的getter和setter。\",\"function observer(obj) { Object.keys(obj).forEach(key => { Object.defineProperty(obj, key, { get() { console.log(\\\"get key\\\", key); return key; }, set(value) { if (obj[key] === value) return; console.log(\\\"set key\\\", key, value); key = value; } }) }); } let obj = { a: \\\"1234\\\", b: \\\"bbb\\\" }; observer(obj); \"]},\"32\":{\"h\":\"为什么vue2中要重写数组的监听\",\"t\":[\"数组在内存中是连续的内存段，对象是分散的，添加、删除数组元素等操作会导致内存段中的数据频繁发生改变，频繁的触发getter和setter；\",\"Object.defineProperty()监听的是key，只监听一开始的key，对新增的key无法监听；\"]},\"33\":{\"h\":\"Observer\",\"t\":[\"把数据处理成响应式数据\",\"//vue实例、 text ，'hello world' function defineReactive(vm, key, val) { var dep = new Dep();//初始化依赖收集的过程 Object.defineProperty(vm, key, { get: function () { //1. 返回数据 //2. 收集依赖 //收集依赖 //当前使用这个key的属性的一个watcher if (Dep.target) { //watcher dep.addSub(Dep.target);//Dep.target==?watcher } return val; }, set: function (newVal) { if (newVal === val) return; val = newVal; dep.notify();//通知watcher } }) } /** obj:{text: 'hello world'} vm: vue实例 */ function observe(obj, vm) { Object.keys(obj).forEach(function (key) { //text defineReactive(vm, key, obj[key]); }) } \"]},\"34\":{\"h\":\"Watcher\",\"t\":[\"观察和衔接dep、Observer、render\",\"let uid = 0; //new Watcher(vm, node, name, 'nodeValue'); /** vue实例 ，{{text}}，text，'nodeValue'=>render */ function Watcher(vm, node, name, type) { Dep.target = this;//watcher this.name = name;//text this.id = ++uid; this.node = node;// this.vm = vm;//VM this.type = type;//'nodeValue' this.update();//执行Render==》使用到对应的name Dep.target = null; } // function queueWatcher(watcher){ // var id = watcher.id; // if(has[id]==null){ // } // } Watcher.prototype = { //去触发修改指令 update: function () { //触发render ==> 获取 this.get();// // if (!batcher) { // batcher = new Batcher(); // // console.log(this.node); // // this.node[this.type] = this.value; // } // batcher.push(this); // span.nodeValue = this.vm.text // node.nodeValue=this.value; this.node[this.type] = this.value; //{{text}}['nodeValue']= }, cb: function () { //nodeValue //input value console.log(\\\"dom update\\\"); this.node[this.type] = this.value; }, get: function () { // vm['text'] this.value = this.vm[this.name];//get触发 ，watcher ==>已经记录到电话本 } } \"]},\"35\":{\"h\":\"Dep\",\"t\":[\"收集依赖\",\"function Dep() { this.subs = [];//电话本 } Dep.prototype = { //往数组添加依赖 sub addSub: function (sub) { this.subs.push(sub); //watcher?? }, //通知 watcher update notify: function () { this.subs.forEach(function (sub) { sub.update(); }) } } \"]},\"36\":{\"h\":\"Directive\",\"t\":[\"v-if、v-bind等这些就是指令\",\"当我们在html中写代码时\",\"<div id=\\\"app\\\"> <input type=\\\"text\\\" id=\\\"a\\\" v-model=\\\"text\\\" /> {{text}} </div> \",\"会被编译成如下render函数（组件级），用于生成虚拟DOM，这个函数会返回一个vnode节点\",\"function render() { return with (this) { return _c('div', { staticClass: \\\"content\\\" }, [ _c('span', [_v(text？“”：“”)] ) ] ) } } \"]},\"37\":{\"h\":\"MVVM\",\"t\":[\"//vue构造函数 /** { el: 'app', data: { text: 'hello world' } } */ function Vue(options) { this.data = options.data;//{text: 'hello world'} 数据挂载到实例上面去 var data = this.data; observe(data, this); //监听数据 get、set （没有触发） var id = options.el; //app //模板 /** <input type=\\\"text\\\" id=\\\"a\\\" v-model=\\\"text\\\"> {{text}} */ var dom = new Compile(document.getElementById(id), this); //render // watcher document.getElementById(id).appendChild(dom); } \"]},\"38\":{\"h\":\"解释\",\"t\":[\"vue2原理\",\"一个render会包装成一个watcher，执行watcher的update，就会执行render，会触发getter，同时会添加到dep中，依赖收集完成后，数据返回，渲染完毕。\",\"数据发生变更，触发了setter的变化，触发dep的遍历，会遍历watcher，会触发update，触发dom diff，页面更新。\"]},\"39\":{\"h\":\"编译\",\"t\":[\"https://github.com/jamiebuilds/the-super-tiny-compiler\",\" /** <input type=\\\"text\\\" id=\\\"a\\\" v-model=\\\"text\\\"> {{text}} vue实例VM */ function Compile(node, vm) { if (node) { this.$frag = this.nodeToFragment(node, vm); return this.$frag; } } Compile.prototype = { /** <input type=\\\"text\\\" id=\\\"a\\\" v-model=\\\"text\\\"> {{text}} vue实例VM */ nodeToFragment: function (node, vm) { var self = this; var frag = document.createDocumentFragment();//创建文档片段，不会真实操作dom，存在于内存中 var child; /** <input type=\\\"text\\\" id=\\\"a\\\" v-model=\\\"text\\\"> {{text}} **/ while (child = node.firstChild) { self.compileElement(child, vm);// <input type=\\\"text\\\" id=\\\"a\\\" v-model=\\\"text\\\"> frag.append(child); } return frag; }, compileElement: function (node, vm) { var reg = /\\\\{\\\\{(.*)\\\\}\\\\}/; //{{text}} //判断元素节点 if (node.nodeType === 1) { //<input type=\\\"text\\\" id=\\\"a\\\" v-model=\\\"text\\\" vlaue='hello world''> var attr = node.attributes; // 解析属性 for (var i = 0; i < attr.length; i++) { if (attr[i].nodeName == 'v-model') { var name = attr[i].nodeValue;//text // node.addEventListener('input', function (e) { vm[name] = e.target.value; }); new Watcher(vm, node, name, 'value'); } }; } //{{text}} nodeValue //判断文本节点 if (node.nodeType === 3) { if (reg.test(node.nodeValue)) { var name = RegExp.$1;//text //render name = name.trim(); // node.nodeValue = vm[name]; //vue 1 // 不同的指令 不同的修改render new Watcher(vm, node, name, 'nodeValue'); } } }, } \"]},\"40\":{\"h\":\"Batcher\",\"t\":[\"/** * 批处理构造函数 * @constructor */ function Batcher() { this.reset(); } Batcher.prototype.reset = function () { this.has = {};// this.queue = [];// this.waiting = false; }; Batcher.prototype.push = function (job) { let id = job.id;//watcher if (!this.has[id]) { console.log(batcher); this.queue.push(job); this.has[id] = true; if (!this.waiting) {//没有等 this.waiting = true; if (\\\"Promise\\\" in window) { // requestAnimationFrame Promise.resolve().then(() => { this.flush(); }) } else { setTimeout(() => { this.flush(); }, 0); } } } }; Batcher.prototype.flush = function () { //所有维护的watcher队列， //watcher this.queue.forEach((job) => { job.cb(); }); this.reset(); }; \"]},\"41\":{\"h\":\"web3\",\"t\":[\"查看css排行\\nstate of css\"]},\"42\":{\"h\":\"truffle\",\"t\":[\"如果合约中有修改，需要重新部署合约，执行\",\"truffle migrate --reset \"]},\"43\":{\"h\":\"走进智能合约的世界\"},\"44\":{\"h\":\"solidity学习网站\",\"t\":[\"官网：https://www.wtf.academy/\",\"github：https://github.com/AmazingAng/WTF-Solidity\",\"ethers: https://github.com/WTFAcademy/WTF-Ethers\"]},\"45\":{\"h\":\"solidity语法\"},\"46\":{\"h\":\"基础部分\",\"t\":[\"类似前端的document\",\"// SPDX-License-Identifier: GPL-3.0 \",\"编译器的版本\",\"pragma solidity >=0.7.0 <0.9.0; \",\"查看本地编译器的版本\",\"solcjs --version \"]},\"47\":{\"h\":\"1.hello solidity.sol\",\"t\":[\"// SPDX-License-Identifier: GPL-3.0 pragma solidity >=0.7.0 <0.9.0; import \\\"hardhat/console.sol\\\"; contract HelloWorld { // 状态，类似前端的变量 string public Msg; constructor() { // 不能输出中文 console.log('Hello Solidity'); Msg = \\\"Hello Solidity\\\"; } } \",\"提示\",\"Hardhat对solidity做了扩充，比如console，另外，solidity也对合约进行审计。\"]},\"48\":{\"h\":\"2.数据类型.sol\",\"t\":[\"/** * 1.string utf-8编码的字符串 \\\"a\\\" == \\\"a\\\" * 2.bool * 3.uint 无符号整数 负数 uint256 2的8次幂 0-255 * uint8，uint16，uint24……uint256，int8，int16，int24……int256，bytes1，bytes2，bytes3……bytes32， * 4.byte 字节类型 1个字节 0x1a * 5.bytes 字节数组 * 6.int 有符号整数 * 7.address 代表了用户地址 * 8.payable 这个函数可以花钱 这个用户可以花他的钱 * 9.常量 const * <A> as ... payable(msg.owner) */ \"]},\"49\":{\"h\":\"3.状态变量.sol\",\"t\":[\"// 1.状态变量 // 1.1.存储状态变量 // 1.2.内存状态变量 // 1.3.常量状态变量 // 1.4.视图状态变量 // 1.5.公共状态变量 // 1.6.私有状态变量 // 1.7.内部状态变量 // 1.8.外部状态变量 // SPDX-License-Identifier: GPL-3.0 pragma solidity >=0.7.0 <0.9.0; contract hello { string public Msg; uint256 private age; uint256 public difficulty; bytes4 constant fid = 0xfa913621; constructor() { Msg = \\\"Hello Solitidy\\\"; age = 18; difficulty = block.difficulty; } function getDoubleAge() public view returns (uint256) { uint256 dage = age * 3; return dage; } } \",\"提示\",\"block是全局变量\",\"函数中的view关键字只对当前的状态读取，不进行任何修改，即视图函数\"]},\"50\":{\"h\":\"4.全局变量.sol\",\"t\":[\"// SPDX-License-Identifier: GPL-3.0 pragma solidity >=0.7.0 <0.9.0; contract HelloWorld { address public Msg; bytes public Msg2; constructor() { Msg = block.coinbase; // - block.difficulty (uint):当前块的难度系数 // - block.gaslimit (uint):当前块gas的上限 // - block.number (uint):当前块编号 // - block.blockhash (function(uint) returns (bytes32)):函数，返回指定块的哈希值，已经被内建函数blockhash所代替 // - block.timestamp (uint):当前块的时间戳 // 用户和你之间的消息的传递 Msg2 = msg.data; // - msg.gas (uint):剩余的gas量 // - msg.sender (address):消息的发送方(调用者) // - msg.sig (bytes4):calldata的前四个字节(即函数标识符) // - msg.value (uint):所发送的消息中的Wei （以太坊激励体系内最小的虚拟数字货币单位）数量 } } \"]},\"51\":{\"h\":\"5.函数和函数修饰符.sol\",\"t\":[\"// function func_name(paramlist...) modifiers returns (returnlist...) // - public 最大的访问权限，子类可以继承、可以访问，当前类能访问 // - private 只有该合约可以调用 仅限内部访问，子类不能继承、不能访问 // - internal 内部函数 内部正常访问，外部无法访问。子类可以继承、可以访问，当前类可以访问 // - external 外部函数。内部不能访问。子类可以继承、可以访问，当前类不能访问 // - view 对状态变量只读，这里的状态变量还包含区块链的内建对象数据、时间戳等 // - pure 既不修改，也不读取状态变量的值，纯函数 // - const 合约不修改状态变量的值，但是可以读取状态变量的值 // - payable 设计以太币的转移 （资金控制类的） // - 自定义修饰符 支持自定义修饰符号 自定义控制类 // 顺序 public < external < internal < private。 // SPDX-License-Identifier: GPL-3.0 pragma solidity >=0.7.0 <0.9.0; contract func_demo { // for循环的写法 function getSum() public pure returns (uint256) { uint256 sum = 0; //for循环 for (uint256 i = 1; i <= 100; i++) { sum += i; //累加求和 } return sum; } // while循环的写法 function getSum2() public pure returns (uint256) { uint256 sum = 1; uint256 i = 0; //for循环 while (i <= 100) { sum += i; //累加求和 i++; } return sum; } } \"]},\"52\":{\"h\":\"5-1.修饰符.sol\",\"t\":[\"// SPDX-License-Identifier: GPL-3.0 pragma solidity >=0.7.0 <0.9.0; import \\\"./libs/Test.sol\\\"; contract DoTest is Test { uint256[20] a; uint256 public xx; constructor() { a[10] = 3; } function test_1() external returns (uint256) { xx = test(a); return xx; } function test_2() public returns (uint256) { xx = this.test2(a); // <-- use this. return xx; } function test_3() external returns (uint256) { xx = test3(a); return xx; } function test_4() external returns (uint256) { xx = test4(a); // <-- compile error return xx; } } \"]},\"53\":{\"h\":\"6.数组.sol\",\"t\":[\"// SPDX-License-Identifier: GPL-3.0 pragma solidity >=0.7.0 <0.9.0; contract array_demo { //定长数组 T[N] string[5] public names; //动态数组 uint256[] public ages; constructor() { names[0] = \\\"yideng\\\"; //定长数组不允许push // names.push(\\\"yideng2\\\"); //动态数组不允许不存在的下标 // ages[0] = 110; ages.push(111); } function setNames(string memory name, uint256 index) public { names[index] = name; } function getLength() external view returns (uint256, uint256) { return (names.length, ages.length); } } \",\"提示\",\"对于变长的数据必须写memory\"]},\"54\":{\"h\":\"7.mapping.sol\",\"t\":[\"// SPDX-License-Identifier: GPL-3.0 pragma solidity >=0.7.0 <0.9.0; contract map_demo { mapping(address => string) addr_names; constructor() { //msg.sender部署合约的人 owner addr_names[msg.sender] = \\\"laoyuan\\\"; } function setNames(string memory _name) public { addr_names[msg.sender] = _name; } function getNames() public view returns (string memory) { return addr_names[msg.sender]; } } \"]},\"55\":{\"h\":\"8.自定义结构.sol\",\"t\":[\"// SPDX-License-Identifier: GPL-3.0 pragma solidity >=0.7.0 <0.9.0; struct User { string name; uint8 age; string sex; } contract struct_demo { User user; User[] users; function setUser( string memory _name, uint8 _age, string memory _sex ) public { // user.name = _name; // user.age = _age; // user.sex = _sex; user = User(_name, _age, _sex); users.push(user); } function getUser() public view returns (User memory) { return user; } function findPerson(uint256 _index) public view returns (User memory) { return users[_index]; } } \"]},\"56\":{\"h\":\"9.事物控制与异常.sol\",\"t\":[\"/** * 1.revert 事物回滚 会消耗gas * 2.error 消耗gas最低 2-1 error既可以告知用户抛出异常的原因，又能省gas。 * 3.assert 错误判断 会消耗光gas assert(bool,cond_expr); 3-1 一般不对外 内部变量判断 pure函数 用于检测系统级别的错误 代码层面的错误 函数结尾或者函数头部 入参和必要条件检测 * 4.require(bool cond_expr, string msg); 退还gas 4-1 跟用户打交道的 require(input_var>100); 4-2 合约掉合约 require(合约地址!=address(0)); */ // SPDX-License-Identifier: GPL-3.0 pragma solidity >=0.7.0 <0.9.0; import \\\"hardhat/console.sol\\\"; error TransferNotOwner(uint256 count); // 自定义error contract struct_demo { User user; constructor() { user.name = \\\"laoyuan\\\"; } function setUser( string memory _name, uint8 _age, string memory _sex ) public { // 执行不了，得硬编码 // if(_name !== user.name){ // user.name = _name; // } // require( // keccak256(abi.encodePacked(user.name)) != // keccak256(abi.encodePacked(_name)), // \\\"user send name is not allowed\\\" // ); if ( keccak256(abi.encodePacked(user.name)) == keccak256(abi.encodePacked(_name)) ) { revert TransferNotOwner(_age); // revert`sss`; } user.name = _name; user.age = _age; user.sex = _sex; } } \",\"提示\",\"不能直接比较字符串，必须是sha256，在以太坊上使用的是keccak256\"]},\"57\":{\"h\":\"10.自定义修饰符.sol\",\"t\":[\"// SPDX-License-Identifier: GPL-3.0 pragma solidity >=0.7.0 <0.9.0; contract modifier_demo { address public admin; uint256 public amount; constructor() { admin = msg.sender; amount = 101; } modifier onlyAdmin() { require(msg.sender == admin, \\\"only admin\\\"); _; } function setCount(uint256 _amount) public onlyAdmin { amount = _amount; } } \",\"提示\",\"modifier修饰符\"]},\"58\":{\"h\":\"11.storage与memory.sol\",\"t\":[\"/** 1.对于临时变量，编译器会自动选择memory(按值传递)或storage(引用址)。变长数据类型二选一 2.如果返回数据类型长度是变长的 需要memory修饰一下，如string、byte、数组自定义结构的 3.storage（引用址） c++指针 4.memory修饰的临时变量相当于右值的一个拷贝，对其进行的修改不会影响到本尊。 */ // SPDX-License-Identifier: GPL-3.0 pragma solidity >=0.7.0 <0.9.0; struct User { string name; uint8 age; string sex; } contract storage_demo { User adminUser; function setUser(string memory _name, uint8 _age, string memory _sex) public { adminUser.name = _name; adminUser.age = _age; adminUser.sex = _sex; } function getUser() public view returns (User memory) { return adminUser; } function setAge1(uint8 _age) public view { User memory user = adminUser; user.age = _age; } function setAge2(uint8 _age) public { User storage user = adminUser; user.age = _age; } } \"]},\"59\":{\"h\":\"12.pure和if等.sol\",\"t\":[\"// SPDX-License-Identifier: GPL-3.0 pragma solidity >=0.7.0 <0.9.0; contract random_demo { function getRandom() public view returns (uint256) { bytes32 hashA = keccak256(abi.encode(block.timestamp, msg.sender, block.number, 'yideng')); return uint256(hashA); } function isEqual(string memory a, string memory b) public pure returns (bool) { // 判断是不是空 bytes memory aa = bytes(a); bytes memory bb = bytes(b); if (aa.length == 0 || bb.length == 0) return false; if (aa.length != bb.length) { return false; } for (uint256 i = 0;i < aa.length; i++) { if (aa[i] == bb[i]) return false; } return true; } } \",\"提示\",\"if终止不了合约，如果要终止合约需要用到assert\"]},\"60\":{\"h\":\"13.interface.sol\",\"t\":[\"// SPDX-License-Identifier: GPL-3.0 pragma solidity >=0.7.0 <0.9.0; interface animalEat { function eat() external returns(uint256); } contract AA is animalEat { function eat() public pure override returns (uint256) { return 1; } } \"]},\"61\":{\"h\":\"14.payable.sol\",\"t\":[\"// SPDX-License-Identifier: GPL-3.0 pragma solidity >=0.7.0 <0.9.0; contract color_demo { address owner; function getBalance() public view returns(uint256) { return address(this).balance; } constructor() { // 部署合约的人 owner = msg.sender; } // 存钱 function deposit() public payable { require(msg.value > 0, \\\"must be greater than 0\\\"); } // 取钱 function withdraw(uint256 amount) public payable { // 必须是本人 require(msg.sender == owner, 'only owner can withdraw'); // 小于当前账户余额 require(amount <= address(this).balance, 'not enough balance'); // 调用合约的人 payable(msg.sender).transfer(amount); } } \"]},\"62\":{\"h\":\"15.事件.sol\",\"t\":[\"// SPDX-License-Identifier: GPL-3.0 pragma solidity >=0.7.0 <0.9.0; contract Events { mapping(address => uint256) public _balances; // EVM 日志的抽象 Ether.js交互 // 带有indexed属性的这个状态是存储在一个 topics // 0 索引 // { // topics: [ // 0: 函数方法的签名 // 1: indexed // 2: to // 3: 最后indexed // ] // } event Transfer(address indexed _form, address indexed _to, uint256 _value); function _transfer(address from, address to, uint256 amount) external { // 转账地址转一些基础的代币 _balances[from] = 1000000; _balances[from] -= amount; _balances[to] += amount; emit Transfer(from, to, amount); } } \"]},\"63\":{\"h\":\"16.other.sol\",\"t\":[\"/** 1.Solidity是一个专为EVM虚拟机运行而设计的高级语言，它是一个静态的、面向对象的语言。 */ \"]},\"64\":{\"h\":\"提升部分\"},\"65\":{\"h\":\"1.函数的重载.sol\",\"t\":[\"// SPDX-License-Identifier: GPL-3.0 pragma solidity >=0.7.0 <0.9.0; contract hello { function saySomething() public pure returns (string memory) { return 'hello world'; } function saySomething(string memory something) public pure returns (string memory) { return something; } } \"]},\"66\":{\"h\":\"2.库合约.sol\",\"t\":[\"// SPDX-License-Identifier: GPL-3.0 pragma solidity >=0.7.0 <0.9.0; /** 省GAS 好用的寒暑假的集合 lodash 大神的函数库 1.不能存状态变量 2.不能继承或被继承 3.不能payable 不能接收eth 4.不可以被销毁 */ library Strings { bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\"; /** * @dev Converts a `uint256` to its ASCII `string` decimal representation. */ function toString(uint256 value) public pure returns (string memory) { // Inspired by OraclizeAPI's implementation - MIT licence // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol if (value == 0) { return \\\"0\\\"; } uint256 temp = value; uint256 digits; while (temp != 0) { digits++; temp /= 10; } bytes memory buffer = new bytes(digits); while (value != 0) { digits -= 1; buffer[digits] = bytes1(uint8(48 + uint256(value % 10))); value /= 10; } return string(buffer); } /** * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation. */ function toHexString(uint256 value) public pure returns (string memory) { if (value == 0) { return \\\"0x00\\\"; } uint256 temp = value; uint256 length = 0; while (temp != 0) { length++; temp >>= 8; } return toHexString(value, length); } /** * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length. */ function toHexString(uint256 value, uint256 length) public pure returns (string memory) { bytes memory buffer = new bytes(2 * length + 2); buffer[0] = \\\"0\\\"; buffer[1] = \\\"x\\\"; for (uint256 i = 2 * length + 1; i > 1; --i) { buffer[i] = _HEX_SYMBOLS[value & 0xf]; value >>= 4; } require(value == 0, \\\"Strings: hex length insufficient\\\"); return string(buffer); } } contract hello { using Strings for uint256; uint256 public num = 123; function toString() public view returns (string memory) { return num.toString(); } function toHexString() public view returns (string memory) { return num.toHexString(); } } \"]},\"67\":{\"h\":\"3.import.sol\",\"t\":[\"// 引入node-modules // import \\\"hardhat/console.sol\\\"; // 通过网址引入 // import 'https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol'; // import {aa} from 'aa.sol'; \"]},\"68\":{\"h\":\"4.调用合约\"},\"69\":{\"h\":\"Yideng.sol\",\"t\":[\"// SPDX-License-Identifier: GPL-3.0 pragma solidity >=0.7.0 <0.9.0; import \\\"hardhat/console.sol\\\"; contract Laoyuan { event Log(string msg); function hello() public { console.log(\\\"1111\\\"); emit Log(\\\"yideng\\\"); } } \"]},\"70\":{\"h\":\"4-1.new调用.sol\",\"t\":[\"// SPDX-License-Identifier: GPL-3.0 pragma solidity >=0.7.0 <0.9.0; import { Laoyuan } from './Yideng.sol'; contract Import { Laoyuan yd = new Laoyuan(); function test() public { yd.hello(); } } \"]},\"71\":{\"h\":\"4-2.继承调用.sol\",\"t\":[\"// SPDX-License-Identifier: GPL-3.0 pragma solidity >=0.7.0 <0.9.0; import './Yideng.sol'; contract test is Laoyuan { function callParentSuper() public { super.hello(); } } \"]},\"72\":{\"h\":\"4-3.合约地址的调用.sol\",\"t\":[\"// SPDX-License-Identifier: GPL-3.0 pragma solidity >=0.7.0 <0.9.0; interface IYideng { function setX(uint256 x) external; function getX() external view returns (uint256); } contract CallContract { function callSetX(address _Address, uint256 x) external { IYideng yideng = IYideng(_Address); yideng.setX(x); } function callGetX(IYideng _Address) external view returns (uint256 x) { x = _Address.getX(); } } \"]},\"73\":{\"h\":\"4-4.call.sol\",\"t\":[\"// SPDX-License-Identifier: MIT pragma solidity ^0.8.4; contract Call { // (bool,data) = 目标合约地址.call{gas:xxx,value:钱}(二进制编码); // 二进制编码 = abi.encodeWithSignature(\\\"setX(uint256)\\\", 10,XX) // (bool,data) = 目标合约地址.call{value:发送数额, gas:gas数额}(abi.encodeWithSignature(\\\"setX(uint256)\\\", 10,XX)); event Response(bool success, bytes data); function callSetX(address payable _addr, uint256 x) public { // (bool success, bytes memory data) = _addr.call{value: 0, gas: 1000000}( // abi.encodeWithSignature(\\\"setX(uint256)\\\", x) // ); (bool success, bytes memory data) = _addr.call( abi.encodeWithSignature(\\\"setX(uint256)\\\", x) ); require(success, \\\"call failed\\\"); emit Response(success, data); } function callGetX(address _addr) external returns (uint256) { (bool success, bytes memory data) = _addr.call( abi.encodePacked(bytes4(keccak256(\\\"getX()\\\"))) ); require(success, \\\"call failed\\\"); return abi.decode(data, (uint256)); } } \"]},\"74\":{\"h\":\"4-5.staticcall.sol\",\"t\":[\"// SPDX-License-Identifier: MIT pragma solidity ^0.8.0; contract SoldityTest { function callHello(address addr) external view returns (string memory) { (bool success, bytes memory data) = addr.staticcall( abi.encodeWithSignature(\\\"hello()\\\") ); require(success, \\\"call failed\\\"); return abi.decode(data, (string)); } } \",\"提示\",\"staticcall只能调用值，不能写\",\"call中\",\"当前合约的msg.sender只能是你本人， 别的合约的msg.sender只能是合约地址 \",\"delegatecall 代理call\",\"当前合约的msg.sender只能是你本人， 别的合约的msg.sender也是你 \"]},\"75\":{\"h\":\"4-6.delegatecall.sol\",\"t\":[\"// SPDX-License-Identifier: MIT pragma solidity ^0.8.4; // delegatecall和call类似，都是低级函数 // call: B call C, 语境为 C (msg.sender = B, C中的状态变量受影响) // delegatecall: B delegatecall C, 语境为B (msg.sender = A, B中的状态变量受影响) contract B { uint256 public num; address public sender; event Response(bool success, bytes data); // 通过call来调用C的setVars()函数，将改变合约C里的状态变量 function callSetVars(address _addr, uint256 _num) external payable { (bool success, bytes memory data) = _addr.call( abi.encodeWithSignature(\\\"setVars(uint256)\\\", _num) ); require(success, \\\"call failed\\\"); emit Response(success, data); } // 通过delegatecall来调用C的setVars()函数，将改变合约B里的状态变量 function delegatecallSetVars(address _addr, uint256 _num) external payable { (bool success, bytes memory data) = _addr.delegatecall( abi.encodeWithSignature(\\\"setVars(uint256)\\\", _num) ); require(success, \\\"call failed\\\"); emit Response(success, data); } } \",\"提示\",\"delegatecall不能修改目标合约的值\"]},\"76\":{\"h\":\"5.approve.sol\",\"t\":[\"// SPDX-License-Identifier: GPL-3.0 pragma solidity >=0.7.0 <0.9.0; import \\\"@openzeppelin/contract/token/ERC20/ERC20.sol\\\"; contract exampleContract { mapping(address => uint256) public balanceOf; mapping(address => mapping(address => uint256)) public allowance; ERC20 USDTToken = ERC20(\\\"0xdac17f958d2ee523a2206206994597c13d831ec7\\\"); function approve(uint256 _amount) { USDTToken.approve(address(this), _amount); } function approve(address _spender, uint256 _value) public returns (bool) { allowance[msg.sender][_spender] = _value; return true; } } \",\"提示\",\"approve是一个规则，当你买东西时需要把你的余额授权给平台。 注意：小心某些平台会把余额填满，别人会把钱全部转走。\"]},\"77\":{\"h\":\"6.燃烧代币.sol\",\"t\":[\"// SPDX-License-Identifier: GPL-3.0 pragma solidity >=0.7.0 <0.9.0; contract USDTContract { uint256 public totalSupply; // 发行量 mapping(address => uint256) public balanceOf; event Burn(address indexed from, uint256 value); // 正如其名, 这个是烧币的.. ,用于把创建者的 token 烧掉 function burn(uint256 _value) public returns (bool success) { require(balanceOf[msg.sender] >= _value); // 必须要有这么多 balanceOf[msg.sender] -= _value; totalSupply -= _value; emit Burn(msg.sender, _value); return true; } function burn() public view { //合约转账 黑洞合约 } } \"]},\"78\":{\"h\":\"7. 接收ETH receive和fallback.sol\",\"t\":[\"/* 触发fallback() 还是 receive()? 接收ETH | msg.data是空？ / \\\\ 是 否 / \\\\ receive()存在? fallback() / \\\\ 是 否 / \\\\ receive() fallback */ // SPDX-License-Identifier: GPL-3.0 pragma solidity >=0.7.0 <0.9.0; contract Fallback { event receivedCalled(address Sender, uint256 Vallue); event fallbackCalled(address Sender, uint256 Value, bytes Data); receive() external payable { //不要去写 业务太复杂执行时间长 emit receivedCalled(msg.sender, msg.value); } fallback() external payable { emit fallbackCalled(msg.sender, msg.value, msg.data); } } \"]},\"79\":{\"h\":\"8.发送eth.sol\",\"t\":[\"// SPDX-License-Identifier: MIT pragma solidity ^0.8.4; // 3种方法发送ETH // transfer: 2300 gas, revert // send: 2300 gas, return bool // call: all gas, return (bool, data) contract SendETH { // 构造函数，payable使得部署的时候可以转eth进去 constructor() payable {} // receive方法，接收eth时被触发 receive() external payable {} // 用transfer()发送ETH function transferETH(address payable _to, uint256 amount) external payable { _to.transfer(amount); } // send()发送ETH function sendETH(address payable _to, uint256 amount) external payable { // 处理下send的返回值，如果失败，revert交易并发送error bool success = _to.send(amount); if (!success) { revert SendFailed(); } } // call()发送ETH function callETH(address payable _to, uint256 amount) external payable { // 处理下call的返回值，如果失败，revert交易并发送error (bool success, ) = _to.call{value: amount}(\\\"\\\"); if (!success) { revert CallFailed(); } } } contract ReceiveETH { // 收到eth事件，记录amount和gas event Log(uint256 amount, uint256 gas); // receive方法，接收eth时被触发 receive() external payable { emit Log(msg.value, gasleft()); } // 返回合约ETH余额 function getBalance() public view returns (uint256) { return address(this).balance; } } \"]},\"80\":{\"h\":\"9.合约内部创建合约.sol\",\"t\":[\"// SPDX-License-Identifier: MIT pragma solidity ^0.8.4; contract Pair { address public factory; address public token0; address public token1; constructor() payable { factory = msg.sender; } function initialize(address _tokenA, address _tokenB) external { require(msg.sender == factory, \\\"UniswapV2: FORBIDDEN\\\"); // sufficient check token0 = _tokenA; token1 = _tokenB; } } contract PairFactory { //通过token0和token1的地址，获取到对应的pair合约地址 mapping(address => mapping(address => address)) public getPair; //所有的pair合约地址 address[] public allPairs; function createPair( address _tokenA, address _tokenB ) external returns (address pairAddress) { Pair pair = new Pair(); pair.initialize(_tokenA, _tokenB); pairAddress = address(pair); allPairs.push(pairAddress); getPair[_tokenA][_tokenB] = pairAddress; getPair[_tokenB][_tokenA] = pairAddress; } } \"]},\"81\":{\"h\":\"10.Create2.sol\",\"t\":[\"todo \"]},\"82\":{\"h\":\"11. 删除合约.sol\",\"t\":[\"// SPDX-License-Identifier: MIT pragma solidity ^0.8.4; contract DeleteContract { //析构函数，销毁合约时被调用 function deleteContract() external { // 调用selfdestruct销毁合约，并把剩余的ETH转给msg.sender selfdestruct(payable(msg.sender)); } } \"]},\"83\":{\"h\":\"12.ABI.sol\",\"t\":[\"//Application Binary Interface //ABI是一种JSON格式的接口描述语言，用于描述智能合约中的公共方法和事件 /** * 1.ABI编码 abi.encode, abi.encodePacked, abi.encodeWithSignature, abi.encodeWithSelector * 2.ABI解码 abi.decode */ // 数据是必须编码成字节码才能和智能合约交互！！！！ //0xd6abfc7b000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000043078414100000000000000000000000000000000000000000000000000000000 contract ABIEncode { uint256 x = 10; address addr = 0x7A58c0Be72BE218B41C608b7Fe7C5bB630736C71; string name = \\\"0xAA\\\"; uint256[2] array = [5, 6]; function encode() public view returns (bytes memory result) { result = abi.encode(x, addr, name, array); } // 一堆东西打包到一块 function encodePacked() public view returns (bytes memory result) { result = abi.encodePacked(x, addr, name, array); } // 对函数签名进行打包 function encodeWithSignature() public view returns (bytes memory result) { result = abi.encodeWithSignature( \\\"foo(uint256,address,string,uint256[2])\\\", x, addr, name, array ); } function encodeWithSelector() public view returns (bytes memory result) { result = abi.encodeWithSelector( //函数选择器 //0xd6abfc7b000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000043078414100000000000000000000000000000000000000000000000000000000 bytes4(keccak256(\\\"foo(uint256,address,string,uint256[2])\\\")), x, addr, name, array ); } } \"]},\"84\":{\"h\":\"13.hash.sol\",\"t\":[\"// SPDX-License-Identifier: MIT pragma solidity ^0.8.4; contract Hash { function hash( uint256 _num, string memory _string, address _addr ) public pure returns (bytes32) { //sha256 return keccak256(abi.encodePacked(_num, _string, _addr)); } } \"]},\"85\":{\"h\":\"14.函数选择器（selector）.sol\",\"t\":[\"// SPDX-License-Identifier: MIT pragma solidity ^0.8.4; contract Selector { event Log(bytes data); // 输入参数 to: 0x2c44b726ADF1963cA47Af88B284C06f30380fC78 function mint(address /*to*/) external { emit Log(msg.data); } // 输出selector // \\\"mint(address)\\\"： 0x6a627842 function mintSelector() external pure returns (bytes4 mSelector) { return bytes4(keccak256(\\\"mint(address)\\\")); } // 使用selector来调用函数 function callWithSignature() external returns (bool, bytes memory) { // 只需要利用`abi.encodeWithSelector`将`mint`函数的`selector`和参数打包编码 (bool success, bytes memory data) = address(this).call( abi.encodeWithSelector( 0x6a627842, \\\"0x2c44b726ADF1963cA47Af88B284C06f30380fC78\\\" ) ); return (success, data); } } \"]},\"86\":{\"h\":\"15.TryCatch.sol\",\"t\":[\"// SPDX-License-Identifier: MIT pragma solidity ^0.8.4; contract OnlyEven{ constructor(uint a){ require(a != 0, \\\"invalid number\\\"); assert(a != 1); } function onlyEven(uint256 b) external pure returns(bool success){ // 输入奇数时revert require(b % 2 == 0, \\\"Ups! Reverting\\\"); success = true; } } contract TryCatch { // 成功event event SuccessEvent(); // 失败event event CatchEvent(string message); event CatchByte(bytes data); // 声明OnlyEven合约变量 OnlyEven even; constructor() { even = new OnlyEven(2); } // 在external call中使用try-catch // execute(0)会成功并释放`SuccessEvent` // execute(1)会失败并释放`CatchEvent` function execute(uint amount) external returns (bool success) { try even.onlyEven(amount) returns(bool _success){ // call成功的情况下 emit SuccessEvent(); return _success; } catch Error(string memory reason){ // call不成功的情况下 emit CatchEvent(reason); } } // 在创建新合约中使用try-catch （合约创建被视为external call） // executeNew(0)会失败并释放`CatchEvent` // executeNew(1)会失败并释放`CatchByte` // executeNew(2)会成功并释放`SuccessEvent` function executeNew(uint a) external returns (bool success) { try new OnlyEven(a) returns(OnlyEven _even){ // call成功的情况下 emit SuccessEvent(); success = _even.onlyEven(a); } catch Error(string memory reason) { // catch revert(\\\"reasonString\\\") 和 require(false, \\\"reasonString\\\") emit CatchEvent(reason); } catch (bytes memory reason) { // catch失败的assert assert失败的错误类型是Panic(uint256) 不是Error(string)类型 故会进入该分支 emit CatchByte(reason); } } } \"]},\"87\":{\"h\":\"16.assembly.sol\",\"t\":[\"// SPDX-License-Identifier: MIT pragma solidity ^0.8.4; contract Hello { function addAssembly(uint256 x, uint256 y) external pure { assembly { let result := add(x, y) mstore(0x00, result) return(0x00, 0x20) } } } \"]},\"88\":{\"h\":\"17.calldata.sol\",\"t\":[\"// SPDX-License-Identifier: MIT pragma solidity ^0.8.4; //EVM不能修calldata contract C { address[] owners; function addOwners(address[] calldata _newOwners) public { // We pass _newOwners on as a calldata array. checkUnique(_newOwners); for (uint256 i = 0; i < _newOwners.length; i++) owners.push(_newOwners[i]); } /// 内部函数可以遍历 calldata 的数组，而不用再复制到内存了。 function checkUnique(address[] calldata _newOwners) internal pure { // address[] memory a = _newOwners; for (uint256 i = 0; i < _newOwners.length; i++) for (uint256 j = i + 1; i < _newOwners.length; j++) require(_newOwners[i] != _newOwners[i]); } } \"]},\"89\":{\"h\":\"应用部分\"},\"90\":{\"h\":\"红包合约.sol\",\"t\":[\"// SPDX-License-Identifier: GPL-3.0 pragma solidity >=0.7.0 <0.9.0; contract RedPacket { //定义一个发红包的主体 address payable public yideng; //红包的金额 uint256 public totalAmount; //红包的数量 uint256 public count; //是否是等额红包 bool isEqual; //临时变量 uint256 public temp = 0; // 是否被领取过了 mapping(address => bool) isGrabbed; constructor(uint256 c, bool _isEqual) payable { require(msg.value > 0, \\\"amount must be greater than 0\\\"); //部署合约的人就是发红包的人 yideng = payable(msg.sender); count = c; isEqual = _isEqual; totalAmount = msg.value; } //展示一下钱包的余额 function getBalance() public view returns (uint256) { return address(this).balance; } function grabRedPacket() public { require(count > 0, \\\"red packet is empty\\\"); require(totalAmount > 0, \\\"red packet is empty\\\"); require(!isGrabbed[msg.sender], \\\"you have grabbed red packet\\\"); //已经抢过这个红包了 isGrabbed[msg.sender] = true; if (count == 1) { temp = totalAmount / 1000000000000000000; payable(msg.sender).transfer(totalAmount); } else { if (isEqual) { uint256 amount = totalAmount / count; totalAmount -= amount; payable(msg.sender).transfer(amount); } else { //如果不是一个等额红包 计算一个10以内的随机数 uint256 random = (uint256( keccak256( abi.encodePacked( msg.sender, yideng, count, totalAmount, block.timestamp ) ) ) % 8) + 1; uint256 amount = (totalAmount * random) / 10; payable(msg.sender).transfer(amount); totalAmount -= amount; } } count--; } } #### 数据上链.js \",\"// 字符串转16进制 function str2hex(str) { if (str === '') { return ''; } var arr = []; arr.push('0x'); for (var i = 0; i < str.length; i++) { arr.push(str.charCodeAt(i).toString(16)); } return arr.join(''); }\",\"// console.log(str2hex('test data'));\",\"// 16进制转字符串 function hex2str(hex) { var trimedStr = hex.trim(); var rawStr = trimedStr.substr(0, 2).toLowerCase() === '0x' ? trimedStr.substr(2) : trimedStr; var len = rawStr.length; if (len % 2 !== 0) { alert('Illegal Format ASCII Code!'); return ''; } var curCharCode; var resultStr = []; for (var i = 0; i < len; i = i + 2) { curCharCode = parseInt(rawStr.substr(i, 2), 16); resultStr.push(String.fromCharCode(curCharCode)); } return resultStr.join(''); }\",\"console.log(hex2str('0x746573742064617461'));\"]},\"91\":{\"h\":\"合约的两个重要网站\",\"t\":[\"chainlink 预言机 Chainlink Nodes 去中心化节点\",\"thegraph 访问全球的区块链数据 可对链上数据进行查询 https://thegraph.com/docs/zh/\",\"https://www.openzeppelin.com/\",\"安装：npm openzeppelin 查看 ERC20.sol\"]},\"92\":{\"h\":\"ERC20.sol\",\"t\":[\"// SPDX-License-Identifier: MIT // OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol) pragma solidity >=0.7.0 <0.9.0; /** * @dev ERC20合约接口 */ interface IERC20 { /** * 释放条件：当value单位的货币从账户from转移到账户to时，触发此事件 * Note that `value` may be zero. */ event Transfer(address indexed from, address indexed to, uint256 value); /** * 释放条件：当owner账户授权spender账户可以从自己的账户转移value单位的货币时，触发此事件 */ event Approval( address indexed owner, address indexed spender, uint256 value ); /** * @dev 返回代币的总供给 一共mint 1万个 yideng token */ function totalSupply() external view returns (uint256); /** * @dev 返回账户accout所持有的代币数量 余额 */ function balanceOf(address account) external view returns (uint256); /** * @dev 转账amount个代币到账户to * 如果成功了 返回true */ function transfer(address to, uint256 value) external returns (bool); /** * @dev 返回账户owner授权给spender账户可以从自己的账户转移的代币数量 */ function allowance( address owner, address spender ) external view returns (uint256); /** * @dev 返回owner账户授权给spender账户额度 默认是0 * 当approve或transferFrom被调用时候 allowance发生变化 */ function approve(address spender, uint256 value) external returns (bool); /** * @dev 通过授权机制 从from账户到to账户转移amount个代币 转移的这部分钱会扣除allowance */ function transferFrom( address from, address to, uint256 value ) external returns (bool); } \"]},\"93\":{\"h\":\"合约IDE\",\"t\":[\"https://remix.ethereum.org/\",\"compilation details可以帮助我们生成abi \",\"deploy 浅蓝色按钮不要钱 黄色按钮花gas 红色按钮花账户中的钱和gas\"]},\"94\":{\"h\":\"查询合约地址是否开源\",\"t\":[\"https://etherscan.io/\"]},\"95\":{\"h\":\"其他网站\"},\"96\":{\"h\":\"npm排名\",\"t\":[\"npmtrends\"]},\"97\":{\"h\":\"流行的js项目\",\"t\":[\"bestofjs\"]},\"98\":{\"h\":\"一个基于react的个人博客网站\",\"t\":[\"docusaurus\"]},\"99\":{\"h\":\"CSR vs SSR\",\"t\":[\"CSR（Client-Side Rendering）和 SSR（Server-Side Rendering）是两种不同的前端渲染方式，它们分别指的是在浏览器端和服务器端进行页面渲染的方法。\"]},\"100\":{\"h\":\"CSR（Client-Side Rendering）\",\"t\":[\"工作方式： 在 CSR 中，页面的初始 HTML 由服务器生成并发送给浏览器，然后浏览器下载并执行 JavaScript 代码。JavaScript 代码执行后，它负责请求数据，并在浏览器中构建和渲染页面。\",\"优点：\",\"快速导航： 一旦初始页面加载完成，后续导航可以更快，因为只需加载和渲染数据，而不需要重新获取整个 HTML 页面。\",\"灵活性： 客户端渲染使得构建富交互性应用更为容易。\",\"缺点：\",\"首次加载慢： 用户首次访问时，需要等待下载和执行 JavaScript 代码，可能导致较长的首次加载时间。\",\"SEO 难度： 对搜索引擎来说，初次渲染的 HTML 中可能没有包含所有内容，可能对搜索引擎优化（SEO）造成一定挑战。\"]},\"101\":{\"h\":\"SSR（Server-Side Rendering）\",\"t\":[\"工作方式： 在 SSR 中，服务器负责生成完整的 HTML 页面，包括初始数据。当用户发起请求时，服务器返回已经渲染好的 HTML，浏览器收到后直接渲染页面。\",\"优点：\",\"快速首次加载： 用户首次访问时，服务器已经生成了完整的 HTML，因此首次加载时间较短。\",\"SEO 友好： 由于搜索引擎可以直接获取到完整的 HTML 内容，SSR 对搜索引擎更友好。\",\"缺点：\",\"导航时的性能： 后续导航可能会稍慢，因为每次导航都需要向服务器请求完整的 HTML 页面。\",\"服务器压力： 对于高流量的应用，服务器需要处理更多的页面渲染请求。\"]},\"102\":{\"h\":\"混合渲染\",\"t\":[\"有时，开发者还会使用混合渲染的方法，即在首次加载时使用 SSR，然后在后续导航时切换为 CSR。这种方法结合了两者的优点，被称为 Universal 或 Isomorphic JavaScript。\",\"选择 CSR 还是 SSR 取决于项目的需求、性能要求以及开发者的偏好。一些框架（如Next.js和Nuxt.js）提供了一种简化配置并支持两种渲染方式的方式。\"]},\"103\":{\"h\":\"前端架构指南\"},\"104\":{\"h\":\"tailwindcss - atomic css\",\"t\":[\"css框架排名\"]},\"105\":{\"h\":\"1. 支持JIT 即时编译\",\"t\":[\"<div class=\\\"bg-[100px]\\\"></div> \",\"编译为\",\".w-100 { width: 100px; } \"]},\"106\":{\"h\":\"2. 初始化tailwind\",\"t\":[\"npm install -D tailwindcss npx tailwindcss init \",\"在 tailwind.config.js 配置文件中添加所有模板文件的路径。\",\"/** @type {import('tailwindcss').Config} */ module.exports = { content: [\\\"./src/**/*.{html,tsx}\\\"], theme: { extend: {}, }, plugins: [], } \",\"提示\",\"现代css统称css next, 没有css4、css5了 css next: https://preset-env.cssdb.org/\"]},\"107\":{\"h\":\"3.创建postcss.config.js\",\"t\":[\"pnpm add postcss-preset-env -D \",\"postcss.config.js\",\"module.exports = { plugins: [ [ 'postcss-preset-env', { // Options features: { 'nesting-rules': { noIsPseudoSelector: false, }, }, }, ], ] } \"]},\"108\":{\"h\":\"4.引入tailwindcss样式\",\"t\":[\"@tailwind base; @tailwind components; @tailwind utilities; \"]},\"109\":{\"h\":\"5.修改webpack编译css\",\"t\":[\"安装\",\"pnpm i css-loader postcss-loader mini-css-extract-plugi -D \",\"配置webpack.config.js\",\"const { resolve } = require('path'); const merge = require('webpack-merge'); const argv = require('yargs-parser')(process.argv.slice(2)); const _mode = argv.mode || 'development'; const _mergeConfig = require(`./config/webpack.${_mode}.js`); const Dotenv = require('dotenv-webpack'); const _modeflag = _mode === 'production' ? true : false; const MiniCssExtractPlugin = require(\\\"mini-css-extract-plugin\\\"); const webpackBaseConfig = { entry: { main: resolve('src/index.tsx'), }, output: { path: resolve(process.cwd(), 'dist'), }, resolve: { alias: { '@pages': resolve('src/pages'), '@states': resolve('src/states'), '@hooks': resolve('src/hooks'), '@components': resolve('src/components'), '@abis': resolve('src/abis') }, extensions: ['.js', '.ts', '.tsx', '.jsx', '.css'] }, module: { rules: [ { test: /\\\\.(js|jsx|ts|tsx)$/, use: { loader: 'swc-loader', } }, { test: /\\\\.(eot|woff|woff2|ttf|png|jpg|svg)$/i, type: 'asset/resource', }, { test: /\\\\.css$/i, include: [resolve(__dirname, \\\"src\\\")], use: [ MiniCssExtractPlugin.loader, { loader: 'css-loader', options: { importLoaders: 1 } }, \\\"postcss-loader\\\" ], } ] }, plugins: [ new MiniCssExtractPlugin({ filename: _modeflag ? 'styles/[name].[contenthash:5].css' : 'styles/[name].css', chunkFilename: _modeflag ? 'styles/[name].[contenthash:5].css' : 'styles/[name].css', ignoreOrder: false }), new Dotenv() ] } module.exports = merge.default(webpackBaseConfig, _mergeConfig); \",\"postcss.config.js\",\"module.exports = { plugins: { tailwindcss: {}, 'postcss-preset-env': { features: { 'nesting-rules': { noIsPseudoSelector: false, }, }, }, } } \"]},\"110\":{\"h\":\"mui\",\"t\":[\"mui官网\"]},\"111\":{\"h\":\"安装\",\"t\":[\"pnpm add @mui/material @emotion/react @emotion/styled \"]},\"112\":{\"h\":\"安装依赖\"},\"113\":{\"h\":\"@soda/friendly-errors-webpack-plugin\",\"t\":[\"pnpm add @soda/friendly-errors-webpack-plugin -D \",\"提示\",\"friendly-errors-webpack-plugin是webpack4用的，webpack5用@soda/friendly-errors-webpack-plugin\"]},\"114\":{\"h\":\"@welldone-software/why-did-you-render\"},\"115\":{\"h\":\"安装\",\"t\":[\"pnpm add @welldone-software/why-did-you-render -D \"]},\"116\":{\"h\":\"什么是why-did-you-render\",\"t\":[\"why-did-you-render 是一个用于 React 应用程序的开发工具，它可以帮助开发者识别为什么组件重新渲染（re-render）的工具。在 React 中，组件重新渲染可能导致性能问题，因此了解哪些组件在不必要的情况下重新渲染是很有价值的。\",\"主要功能包括：\",\"检测不必要的重新渲染： why-did-you-render 可以帮助你追踪哪些组件在不必要的情况下重新渲染。这对于优化 React 应用程序的性能非常有帮助，尤其是在组件层次较深或者组件包含大量数据的情况下。\",\"标记重新渲染原因： 当组件重新渲染时，why-did-you-render 可以输出一些信息，帮助你理解为何触发了重新渲染。这样可以更容易地定位并解决性能问题。\",\"配置灵活： 你可以选择对哪些组件启用 why-did-you-render，以便更有针对性地进行性能调试。这对于大型项目中逐步优化的场景非常有用。\",\"请注意，why-did-you-render 主要用于开发环境，并且不应该在生产环境中使用，因为它会引入一些额外的开销，可能会影响性能。\",\"使用 why-did-you-render 可以提供有关 React 组件性能的详细信息，帮助你优化应用程序，确保它在渲染时保持高效。\"]},\"117\":{\"h\":\"使用\",\"t\":[\"新建wdyr.tsx\",\"import React from 'react'; if (process.env.NODE_ENV === 'development') { const whyDidYouRender = require('@welldone-software/why-did-you-render'); whyDidYouRender(React, { trackAllPureComponents: true, }); } \",\"在index.tsx中引用\",\"import { createRoot } from 'react-dom/client'; import { BrowserRouter } from 'react-router-dom'; import Home from '@components/Test'; import './style.css'; import './wdyr'; const container = document.getElementById(\\\"app\\\")!; const root = createRoot(container); root.render( <BrowserRouter> <Home /> </BrowserRouter> ); \",\"在组件中开启\",\"import Button from '@mui/material/Button'; import { useState } from 'react'; export default function ButtonUsage() { console.log('函数执行'); const [data, setData] = useState({a:1}); const handleClick = () => { setData({a:1}) } return ( <Button variant=\\\"contained\\\" onClick={handleClick}> Hello world {data.a} </Button> ); } ButtonUsage.whyDidYouRender = true; \",\"打印日志如下：\",\"打印渲染信息\"]},\"118\":{\"h\":\"函数式编程\"},\"119\":{\"h\":\"函数式编程思维\",\"t\":[\"函数式编程（Functional Programming，简称FP）是一种编程范式，它将计算视为数学函数的计算，避免使用可变状态和可变数据。函数式编程强调使用纯函数（Pure Functions）和不可变数据（Immutable Data），并且避免副作用（Side Effects）。\",\"以下是函数式编程的一些主要概念和特点：\",\"纯函数（Pure Functions）： 纯函数是没有副作用的函数，其输出仅由输入决定，不依赖于系统状态或外部变量。相同的输入始终产生相同的输出，这使得纯函数更容易理解、测试和并发执行。\",\"不可变数据（Immutable Data）： 函数式编程强调数据的不可变性，即一旦数据被创建，就不能被修改。这可以通过创建新的数据副本而不是直接修改现有数据来实现。不可变性有助于避免副作用，并简化代码的推理和理解。\",\"高阶函数（Higher-Order Functions）： 函数可以作为参数传递给其他函数，也可以作为返回值。这种能力使得函数可以更灵活地组合和复用。\",\"递归（Recursion）： 函数式编程鼓励使用递归而不是循环。递归是一种自身调用的技术，用于解决问题并遍历数据结构。\",\"不可变性集合（Immutable Collections）： 函数式编程语言通常提供一些不可变的数据结构，如不可变列表、不可变集合等，以支持函数式编程的理念。\",\"Lambda 表达式（Lambda Expressions）： Lambda 表达式是一种匿名函数，可以在需要函数的地方定义和使用它，而不必显式地声明一个命名函数。\",\"惰性求值（Lazy Evaluation）： 函数式编程语言通常支持惰性求值，即只在需要时才计算表达式的值。这有助于提高性能和避免不必要的计算。\",\"模式匹配（Pattern Matching）： 模式匹配是一种在数据结构中查找模式并执行相应操作的技术。它在函数式编程中被广泛使用。\",\"函数式编程的一个优点是它有助于编写清晰、简洁和可维护的代码。它也能更容易地进行并行化和异步编程，因为纯函数没有共享的状态。一些函数式编程语言包括Haskell、Scala、Clojure和部分支持的编程语言，如JavaScript和Python。\",\"prepack\"]},\"120\":{\"h\":\"函数柯里化\",\"t\":[\"柯里化（Currying）是函数式编程中的一种技术，它是将一个多参数的函数转换为一系列单参数函数的过程。这些单参数函数返回新的函数，每个新函数接受下一个参数，直到所有参数都被收集完毕，最后返回最终的结果。柯里化的名字来源于数学家 Haskell Curry。\",\"考虑一个普通的二元函数：\",\"function add(x, y) { return x + y; } console.log(add(2, 3)); // 输出 5 \",\"通过柯里化，我们可以将这个函数转换为一系列单参数函数：\",\"function curryAdd(x) { return function(y) { return x + y; }; } // 使用柯里化后的函数 const add2 = curryAdd(2); console.log(add2(3)); // 输出 5 \",\"在上面的例子中，curryAdd 是一个柯里化函数，它接受一个参数 x，返回一个函数，这个返回的函数接受参数 y，并返回 x + y 的结果。通过这种方式，我们可以逐步传递参数，形成一个链式调用的过程。\",\"柯里化的优势包括：\",\"参数复用： 可以通过部分应用（Partial Application）固定一部分参数，从而创建新的函数。在上面的例子中，add2 就是通过柯里化的方式部分应用了 add 函数。\",\"提高函数灵活性： 柯里化使得函数更加灵活，可以更容易地适应不同的调用方式和场景。\",\"函数组合： 柯里化是实现函数组合的一种方式，可以将多个函数组合在一起，形成新的函数。\",\"在一些函数式编程语言中，柯里化是一种自然而然的编程风格，并且一些库和框架提供了方便的柯里化函数。在 JavaScript 中，由于它是一门多范式的语言，你可以手动实现柯里化，也可以使用一些库来简化这个过程。例如，在 Lodash 中，有一个 curry 函数可以用于柯里化。\"]},\"121\":{\"h\":\"函数的反柯里化\",\"t\":[\"反柯里化（Uncurrying）是柯里化的逆操作。在柯里化中，一个多参数的函数被转化为一系列单参数的函数，而反柯里化则是将一系列单参数的函数转化为一个多参数的函数。\",\"下面是一个简单的 JavaScript 示例来说明反柯里化：\",\"// 柯里化的例子 function curryAdd(x) { return function(y) { return x + y; }; } // 反柯里化的实现 function uncurryAdd(curriedAdd) { return function(x, y) { return curriedAdd(x)(y); }; } // 使用反柯里化后的函数 const uncurriedAdd = uncurryAdd(curryAdd); console.log(uncurriedAdd(2, 3)); // 输出 5 \",\"在这个例子中，curryAdd 是一个柯里化的函数，而 uncurryAdd 是一个用于反柯里化的函数。uncurriedAdd 接受两个参数，然后通过调用 curriedAdd 的方式返回结果。\",\"反柯里化的目的通常是为了在函数式编程中更方便地使用那些本来是多参数的函数，尤其是在与某些 API 或库进行交互时。某些情况下，反柯里化也能够提高代码的可读性和易用性。\",\"需要注意的是，并非所有函数都能被良好地反柯里化。有时候，函数的参数和返回值的结构可能不够一致，这就会导致反柯里化不够直观或者不可行。\"]},\"122\":{\"h\":\"高阶函数\",\"t\":[\"高阶函数是指接受一个或多个函数作为参数，并/或者返回一个新函数的函数。在函数式编程中，高阶函数是一种强大的抽象工具，它们能够接受其他函数作为参数，使得代码更加灵活、模块化和可复用。\",\"以下是一些常见的高阶函数的例子：\",\"map： 接受一个函数和一个列表，并对列表中的每个元素应用该函数，返回一个新的列表。例如，JavaScript 中的 Array.map。\",\"const numbers = [1, 2, 3, 4, 5]; const squaredNumbers = numbers.map(x => x * x); // squaredNumbers 现在是 [1, 4, 9, 16, 25] \",\"filter： 接受一个函数和一个列表，并返回一个新的列表，其中包含满足给定函数条件的元素。例如，JavaScript 中的 Array.filter。\",\"const numbers = [1, 2, 3, 4, 5]; const evenNumbers = numbers.filter(x => x % 2 === 0); // evenNumbers 现在是 [2, 4] \",\"reduce： 接受一个函数、一个初始值和一个列表，将列表中的元素逐个应用到函数上，累积结果。例如，JavaScript 中的 Array.reduce。\",\"const numbers = [1, 2, 3, 4, 5]; const sum = numbers.reduce((acc, x) => acc + x, 0); // sum 现在是 15 \",\"函数作为参数： 高阶函数可以接受其他函数作为参数，例如，JavaScript 中的 setTimeout 函数。\",\"function delayedGreeting(callback) { setTimeout(() => { callback('Hello, World!'); }, 1000); } delayedGreeting(message => { console.log(message); // 1秒后输出 \\\"Hello, World!\\\" }); \",\"函数作为返回值： 高阶函数也可以返回一个新的函数，例如，JavaScript 中的柯里化函数。\",\"function multiplyBy(x) { return function(y) { return x * y; }; } const double = multiplyBy(2); console.log(double(5)); // 输出 10 \",\"高阶函数的使用有助于提高代码的可读性、简洁性和复用性。它们是函数式编程风格的核心概念，也在许多编程语言中得到广泛应用。\"]},\"123\":{\"h\":\"尾调用优化\",\"t\":[\"尾调用优化（Tail Call Optimization，简称TCO）是一种编译器优化技术，它优化了函数的尾调用，以减少函数调用的栈空间占用。尾调用是指一个函数的最后一个操作是调用另一个函数。\",\"在没有尾调用优化的情况下，每次函数调用都会在调用栈上创建一个新的帧（stack frame），这可能导致栈溢出，特别是对于递归调用层次很深的函数。尾调用优化通过复用当前函数的栈帧，而不是创建新的帧，从而减少了栈空间的使用。\",\"一个满足尾调用优化条件的函数必须满足两个条件：\",\"函数的最后一个操作必须是对另一个函数的调用。\",\"调用的结果必须直接返回，而不经过其他的操作。\",\"以下是一个满足尾调用优化条件的例子：\",\"function factorial(n, acc = 1) { if (n <= 1) { return acc; } // 尾调用 return factorial(n - 1, n * acc); } // 尾调用优化后，不会产生栈溢出 console.log(factorial(5)); // 输出 120 \",\"在一些支持尾调用优化的编程语言中，编译器可以检测到这种尾调用的情况，并进行优化。然而，并非所有的编程语言都支持尾调用优化，例如，JavaScript 的尾调用优化支持度较低。\",\"在实际编程中，可以通过使用迭代而不是递归来避免栈溢出问题，因为迭代通常更容易被优化。一些函数式编程语言，如Scheme，通常对尾调用提供了更好的支持。\"]},\"124\":{\"h\":\"尾递归\",\"t\":[\"尾递归是指在递归函数中，递归调用是函数的最后一步操作。尾递归是一种特殊的递归形式，具有尾调用的特性，使得编译器或解释器可以对其进行优化，减少栈空间的使用，从而避免栈溢出。\",\"以下是一个尾递归的例子，计算阶乘：\",\"// 尾递归的阶乘函数 function factorialTailRecursive(n, acc = 1) { if (n <= 1) { return acc; } // 尾递归调用 return factorialTailRecursive(n - 1, n * acc); } // 使用尾递归计算阶乘，不会产生栈溢出 console.log(factorialTailRecursive(5)); // 输出 120 \",\"在上面的例子中，递归调用 factorialTailRecursive 是函数的最后一步，它满足尾递归的条件。这样的尾递归函数可以被一些编程语言的编译器或解释器进行尾调用优化，将其转化为迭代形式，避免了栈的不断增长。\",\"需要注意的是，并非所有编程语言和所有情况都能够进行尾调用优化。在一些支持尾调用优化的语言中，如Scheme，尾递归是一种通常推荐的写法，而在一些不支持尾调用优化的语言中，可能需要使用迭代或其他方法来避免栈溢出问题。JavaScript 目前对尾调用的优化支持较低，不同的引擎和环境可能有不同的行为。\"]},\"125\":{\"h\":\"闭包\",\"t\":[\"闭包（Closure）是指在一个函数内部定义的函数，能够访问到其外部函数的变量，即使在外部函数执行结束后，内部函数仍然能够访问并保持对外部函数作用域的引用。闭包在很多编程语言中都是一种强大的概念，它使得函数成为一等公民，并提供了一种保存状态的机制。\",\"在理解闭包之前，让我们先看一个简单的例子：\",\"function outerFunction() { let outerVariable = 'I am from outer!'; function innerFunction() { console.log(outerVariable); } return innerFunction; } const closureFunction = outerFunction(); closureFunction(); // 输出 \\\"I am from outer!\\\" \",\"在这个例子中，innerFunction 是一个闭包。当 outerFunction 被调用时，它创建了 outerVariable 变量，并定义了 innerFunction，然后将 innerFunction 返回。当我们调用 outerFunction 后，它返回的是 innerFunction，并且我们将其赋值给 closureFunction。最后，我们调用 closureFunction，它仍然能够访问和引用 outerVariable，即使 outerFunction 已经执行完毕。\",\"闭包具有以下特点：\",\"访问外部函数的变量： 内部函数可以访问外部函数的变量，即使外部函数已经执行完毕。\",\"保存状态： 由于闭包可以访问外部函数的变量，它可以保存这些变量的状态，使得这些变量的值得以保留。\",\"作为函数返回值： 通常，闭包被用作函数的返回值，以便在外部函数执行后仍然能够访问外部作用域中的变量。\",\"闭包在很多情况下都是非常有用的，例如，用于封装私有变量、实现柯里化、创建回调函数等。在 JavaScript 中，由于函数是一等公民，闭包是一种常见且强大的编程模式。\"]},\"126\":{\"h\":\"实践网站\",\"t\":[\"https://lodash.com/\",\"https://github.com/gcanti/fp-ts\"]},\"127\":{\"h\":\"测试\"},\"128\":{\"h\":\"单元测试\",\"t\":[\"jest\"]},\"129\":{\"h\":\"安装\",\"t\":[\"pnpm add --save-dev jest \"]},\"130\":{\"h\":\"类型检查\",\"t\":[\"pnpm add @types/jest -D \"]},\"131\":{\"h\":\"jest-stare\",\"t\":[\"pnpm add jest-stare -D \",\"jest-stare 是一个用于生成 Jest 测试报告的工具。它提供了一个美观的、可定制的 HTML 报告，以便更清晰地查看 Jest 测试运行的结果。以下是一些关键特点和用法：\",\"生成详细的 HTML 报告： jest-stare 生成一个详细的 HTML 报告，其中包含有关测试运行的各种信息，如测试用例、通过和失败的测试、测试覆盖率等。\",\"可定制的报告： 报告的外观和内容是可定制的，你可以配置不同的主题和样式，以满足你的项目需求。\",\"支持 Jest 插件： jest-stare 支持与 Jest 插件集成，可以通过配置文件或命令行选项轻松启用或禁用特定的插件。\",\"易于集成： 安装 jest-stare 后，你可以通过运行命令行命令或在 npm 脚本中配置 jest-stare，从而轻松集成到 Jest 测试运行中。\",\"历史记录： jest-stare 会保留历史记录，允许你跟踪测试运行的变化。这有助于在代码库的不同提交之间进行比较。\"]},\"132\":{\"h\":\"需要用@swc/jest编译\",\"t\":[\"pnpm add @swc/jest -D \"]},\"133\":{\"h\":\"majestic\",\"t\":[\"可视化的单元测试\",\"pnpm add majestic -D \",\"在package.json scripts中配置\",\"\\\"test:ui\\\": \\\"majestic\\\", \",\"执行，会启动如下项目，点击run，可执行单个单元测试\",\"单元测试\"]},\"134\":{\"h\":\"E2E测试\",\"t\":[\"E2E 测试（端到端测试）是一种软件测试方法，它的目标是测试整个应用程序的流程，从用户界面一端到另一端，以确保应用程序在真实用户使用的环境中能够正常运行。E2E 测试模拟用户的实际使用场景，测试应用程序的交互、功能和性能。\",\"以下是一些关键特点和目标，E2E 测试通常涵盖了：\",\"整体测试： E2E 测试覆盖了整个应用程序或系统，而不仅仅是单个组件或模块。它关注用户在应用程序中的完整流程，包括导航、输入、点击等。\",\"用户行为模拟： E2E 测试尝试模拟用户的实际行为。测试脚本会模拟用户在浏览器中的交互，如点击链接、填写表单、提交表单等。\",\"多端测试： E2E 测试可以在多种浏览器、不同设备和操作系统上运行，以确保应用程序在各种环境中的兼容性。\",\"性能测试： 一些 E2E 测试工具允许开发人员评估应用程序的性能，包括加载时间、响应时间等。\",\"自动化： E2E 测试通常是自动化的，测试脚本通过编程语言或测试工具自动执行。这有助于提高测试效率，尤其是在应用程序进行频繁更改时。\",\"提前发现问题： 由于 E2E 测试覆盖了整个应用程序，因此它有助于在将应用程序交付给最终用户之前发现潜在的问题，如功能错误、界面问题等。\",\"一些流行的 E2E 测试工具包括：\",\"Selenium： 一个用于自动化浏览器操作的开源工具，支持多种编程语言。\",\"Cypress： 一个用于现代 web 应用程序测试的 JavaScript 测试框架，具有直观的 API 和实时重新加载功能。\",\"Playwright： 一个由 Microsoft 推出的开源工具，支持多种浏览器，提供强大的自动化功能。 通过E2E 测试，开发团队可以更有信心地发布他们的应用程序，因为这种测试方法能够检测到用户可能遇到的各种问题，从而提高应用程序的质量和稳定性。\",\"rize: 无头浏览器的端到端测试\"]},\"135\":{\"h\":\"cypress\",\"t\":[\"npm install cypress --save-dev \",\"pnpm add @chainsafe/dappeteer -D \"]},\"136\":{\"h\":\"一个ui测试库\",\"t\":[\"BackstopJS github\",\"BackstopJS 是一个用于网站可视化回归测试（Visual Regression Testing）的工具。它的主要功能是捕捉网站的屏幕截图，并在将来的测试中与基准屏幕截图进行比较，以便检测任何视觉上的变化。\",\"以下是 BackstopJS 的一些关键特性和用法：\",\"可视化回归测试： BackstopJS 通过比较屏幕截图来执行可视化回归测试。这有助于检测页面样式、布局或内容发生的变化，尤其在进行代码更改、更新或优化时。\",\"基准截图： 在测试开始之前，你需要运行 BackstopJS 来捕捉基准屏幕截图，这些截图将用作未来测试的比较基准。这通常是在项目初期或确认页面样式稳定的时候进行的。\",\"配置文件： BackstopJS 使用一个配置文件，其中定义了测试场景、视口大小、比较设置等。你可以根据项目需求进行配置，以满足特定的测试场景。\",\"命令行工具： BackstopJS 提供了命令行工具，使其易于集成到自动化构建流程中。你可以通过命令行运行测试，并生成测试结果报告。\",\"报告和可视化： BackstopJS 生成详细的测试报告，展示页面的每个视图和检测到的差异。这有助于开发人员快速定位并解决视觉问题。\",\"支持测试回归： 可以使用 BackstopJS 进行测试回归，以确保在进行代码更改后没有引入新的视觉问题。\",\"使用 BackstopJS 的一般流程包括：\",\"安装 BackstopJS 到你的项目中。\",\"运行 backstop init 初始化配置文件。\",\"运行 backstop reference 捕捉基准屏幕截图。\",\"运行 backstop test 执行可视化回归测试。 通过使用 BackstopJS，开发人员可以更容易地进行视觉回归测试，确保网站在进行代码更改后仍然保持预期的外观和布局。\"]},\"137\":{\"h\":\"https://typicode.github.io/husky/\"},\"138\":{\"h\":\"https://www.travis-ci.com/\"},\"139\":{\"h\":\"状态管理\"},\"140\":{\"h\":\"安装jotai - atomic state\",\"t\":[\"组件内状态 jotai官网\",\"pnpm add jotai jotai-immer \"]},\"141\":{\"h\":\"什么是状态撕裂\",\"t\":[\"\\\"状态撕裂\\\"通常指的是在异步操作中，由于状态更新不同步而导致的问题。这个问题通常在 React 或其他前端框架中经常遇到。\",\"在前端应用中，当进行异步操作（如网络请求、定时器等）并尝试更新组件的状态时，可能会遇到以下情况：\",\"状态更新时机不同步： 异步操作完成后，尝试更新组件状态，但此时组件可能已经被卸载或处于其他不同步的状态。\",\"闭包问题： 在异步回调函数中，可能会涉及到闭包，导致回调函数中的状态访问的是旧的状态而不是最新的状态。\",\"这种不同步导致的问题称为\\\"状态撕裂\\\"，可能会导致一系列的错误，如界面显示不一致、数据不准确等。\",\"解决\\\"状态撕裂\\\"的一些常见方法包括：\",\"使用 useEffect 的清理函数： 在 useEffect 中进行异步操作时，确保在清理函数中取消异步操作或清理相关资源。这样可以避免在组件已经卸载后仍然尝试更新状态。\",\"useEffect(() => { // 异步操作 const fetchData = async () => { try { const data = await fetchDataFromServer(); setData(data); } catch (error) { console.error(error); } }; fetchData(); // 清理函数 return () => { // 取消异步操作或清理资源 }; }, []); \",\"使用 async/await： 如果使用异步函数，确保使用 async/await 语法，以便更清晰地处理异步操作和状态更新。\",\"const fetchDataAndUpdateState = async () => { try { const data = await fetchDataFromServer(); setData(data); } catch (error) { console.error(error); } }; fetchDataAndUpdateState(); \",\"使用 useRef 进行状态检查： 使用 useRef 来保存状态的引用，并在异步操作中检查引用是否仍然是最新的状态。\",\"const isMounted = useRef(true); useEffect(() => { return () => { isMounted.current = false; }; }, []); const fetchDataAndUpdateState = async () => { try { const data = await fetchDataFromServer(); if (isMounted.current) { setData(data); } } catch (error) { console.error(error); } }; fetchDataAndUpdateState(); \",\"这些方法有助于减少在异步操作中发生状态撕裂的可能性，确保状态更新的同步性和准确性。\",\"提示\",\"jotai为了解决状态撕裂的问题，强行执行组件两次，以保证状态的更新\"]},\"142\":{\"h\":\"zustand\",\"t\":[\"组件外状态 zustand官网\"]},\"143\":{\"h\":\"xstate\",\"t\":[\"状态机 xstate官网\",\"支持对之前项目状态的迁移\"]},\"144\":{\"h\":\"私仓\",\"t\":[\"官网\"]},\"145\":{\"h\":\"安装\",\"t\":[\"pnpm install -g verdaccio pm2 pnpm adduser --register http://localhost:4873/ --scope=@yd \"]},\"146\":{\"h\":\"lerna\",\"t\":[\"pnpm i lerna -D npx lerna init \"]},\"147\":{\"h\":\"turborepo\",\"t\":[\"turborepo\"]},\"148\":{\"h\":\"搭建组件库\"},\"149\":{\"h\":\"storyBook\",\"t\":[\"storyBook\"]},\"150\":{\"h\":\"cva\",\"t\":[\"cva\"]},\"151\":{\"h\":\"自定义SSR\"},\"152\":{\"h\":\"排序\"},\"153\":{\"h\":\"归并排序\",\"t\":[\"var mergeSort = function (arr) { if (arr.length < 2) return arr; let middle = Math.floor(arr.length / 2); let left = arr.slice(0, middle); let right = arr.slice(middle, arr.length); return merge(mergeSort(left), mergeSort(right)); }; function merge(left, right) { let result = []; while (left.length && right.length) { if (left[0] <= right[0]) { result.push(left.shift()); } else { result.push(right.shift()); } } while(left.length) { result.push(left.shift()); } while(right.length) { result.push(right.shift()); } return result; } \"]},\"154\":{\"h\":\"快排\",\"t\":[\"var quickSort = function (arr) { if(arr.length <= 1) return arr; let pivotIndex = Math.floor(arr.length / 2); let pivot = arr.splice(pivotIndex, 1)[0]; let left = []; let right = []; for (let i=0;i<arr.length;i++) { if (arr[i] <=pivot) { left.push(arr[i]); } else { right.push(arr[i]); } } return quickSort(left).concat([pivot], quickSort(right)); }; \",\"时间复杂度最好是O(nlogn)，最差是O(n^2)\",\"空间复杂度最好是O(logn)，最差是O(n)\"]},\"155\":{\"h\":\"顺序搜索\",\"t\":[\"var sequentialSearch = function (arr, target) { for (let i=0;i<arr.length;i++) { if (arr[i] === target) return i; } return -1; }; let arr = [1, 2, 3, 4, 5, 6, 7, 8, 9]; console.log(sequentialSearch(arr, 5)); // 输出: 4 console.log(sequentialSearch(arr, 10)); // 输出: -1 \",\"时间复杂度最好是O(1)，最差是O(n)\"]},\"156\":{\"h\":\"webpack核心原理\"},\"157\":{\"h\":\"prepack\",\"t\":[\"prepack\",\"Prepack 是一个由 Facebook 开发的 JavaScript 优化工具，主要用于改善 JavaScript 代码的性能和加载速度。它通过在构建阶段对 JavaScript 代码进行预处理，以生成更为高效、精简的代码捆绑包。以下是 Prepack 的主要功能和目标：\",\"性能优化： Prepack 通过对 JavaScript 代码进行预处理和优化，生成更高效的代码，从而提高应用程序的运行性能。这意味着在用户浏览器中执行时，代码将更快地加载和执行。\",\"减小捆绑包大小： 通过死代码消除和其他优化技术，Prepack 能够减小 JavaScript 捆绑包的大小。这对于前端应用程序来说尤其重要，因为减小文件大小可以减少加载时间，提高用户体验。\",\"预处理阶段的优化： Prepack 在构建阶段执行，而不是在运行时。这意味着它可以执行更多的计算和优化，而不用担心运行时性能开销。预处理优化可以减轻客户端设备的负担，提高页面加载速度。\",\"序列化的 JavaScript 代码： Prepack 生成的输出是一个序列化的 JavaScript 代码，可以直接发送到客户端。这有助于减少在客户端上的解析和编译时间，提高加载速度。\",\"与现有工具兼容： Prepack 被设计为与现有的 JavaScript 工具和工作流程兼容，使开发人员能够轻松地集成到他们的项目中，而无需重大调整。\",\"总体而言，Prepack 的好处在于通过在构建阶段对 JavaScript 代码进行深度优化，提高应用程序的性能和用户体验。然而，使用之前，开发人员应该仔细考虑其是否适用于特定项目，并确保了解其潜在的影响和限制。\"]},\"158\":{\"h\":\"解析webpack同步加载文件构建代码\",\"t\":[\"index.js\",\"import {a} from \\\"./data\\\"; console.log(\\\"a: \\\", a); \",\"data.js\",\"export const a = \\\"yideng\\\"; \",\"webpack打包后的js如下：\",\"(() => { \\\"use strict\\\"; var __webpack_modules__ = ({ \\\"./src/data.js\\\": ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => { eval(\\\"__webpack_require__.r(__webpack_exports__);\\\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\\\n/* harmony export */ a: () => (/* binding */ a)\\\\n/* harmony export */ });\\\\nconst a = \\\\\\\"yideng\\\\\\\";\\\\n\\\\n//# sourceURL=webpack://yd-webpack/./src/data.js?\\\"); }), \\\"./src/index.js\\\": ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => { eval(\\\"__webpack_require__.r(__webpack_exports__);\\\\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data */ \\\\\\\"./src/data.js\\\\\\\");\\\\n\\\\n\\\\nconsole.log(\\\\\\\"a: \\\\\\\", _data__WEBPACK_IMPORTED_MODULE_0__.a);\\\\n\\\\n//# sourceURL=webpack://yd-webpack/./src/index.js?\\\"); }) }); var __webpack_module_cache__ = {}; function __webpack_require__(moduleId) { var cachedModule = __webpack_module_cache__[moduleId]; if (cachedModule !== undefined) { return cachedModule.exports; } var module = __webpack_module_cache__[moduleId] = { exports: {} }; __webpack_modules__[moduleId](module, module.exports, __webpack_require__); return module.exports; } (() => { __webpack_require__.d = (exports, definition) => { for (var key in definition) { if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) { Object.defineProperty(exports, key, { enumerable: true, get: definition[key] }); } } }; })(); (() => { __webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop)) })(); (() => { __webpack_require__.r = (exports) => { if (typeof Symbol !== 'undefined' && Symbol.toStringTag) { Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' }); } Object.defineProperty(exports, '__esModule', { value: true }); }; })(); var __webpack_exports__ = __webpack_require__(\\\"./src/index.js\\\"); })(); \"]},\"159\":{\"h\":\"解析webpack异步加载文件构建代码\",\"t\":[\"index.js\",\"import {a} from \\\"./data\\\"; console.log(\\\"a: \\\", a); \",\"data.js\",\"export const a = \\\"yideng\\\"; \",\"webpack打包后的js如下：\",\"通过JSONP将遍历webpackChunkyd_webpack，将异步加载内容installedChunks到__webpack_modules__中，这样就和同步一样了\",\"main.js\",\" (() => { var __webpack_modules__ = ({ \\\"./src/index.js\\\": ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => { eval(\\\"__webpack_require__.e(/*! import() */ \\\\\\\"src_data_js\\\\\\\").then(__webpack_require__.bind(__webpack_require__, /*! ./data.js */ \\\\\\\"./src/data.js\\\\\\\")).then(({a}) => {\\\\n console.log(\\\\\\\"data\\\\\\\", a);\\\\n})\\\\n\\\\n//# sourceURL=webpack://yd-webpack/./src/index.js?\\\"); }) }); var __webpack_module_cache__ = {}; function __webpack_require__(moduleId) { var cachedModule = __webpack_module_cache__[moduleId]; if (cachedModule !== undefined) { return cachedModule.exports; } var module = __webpack_module_cache__[moduleId] = { exports: {} }; __webpack_modules__[moduleId](module, module.exports, __webpack_require__); return module.exports; } // expose the modules object (__webpack_modules__) __webpack_require__.m = __webpack_modules__; /************************************************************************/ /* webpack/runtime/define property getters */ (() => { // define getter functions for harmony exports __webpack_require__.d = (exports, definition) => { for (var key in definition) { if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) { Object.defineProperty(exports, key, { enumerable: true, get: definition[key] }); } } }; })(); /* webpack/runtime/ensure chunk */ (() => { __webpack_require__.f = {}; // This file contains only the entry chunk. // The chunk loading function for additional chunks __webpack_require__.e = (chunkId) => { return Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => { __webpack_require__.f[key](chunkId, promises); return promises; }, [])); }; })(); /* webpack/runtime/get javascript chunk filename */ (() => { // This function allow to reference async chunks __webpack_require__.u = (chunkId) => { // return url for filenames based on template return \\\"\\\" + chunkId + \\\".js\\\"; }; })(); /* webpack/runtime/global */ (() => { __webpack_require__.g = (function () { if (typeof globalThis === 'object') return globalThis; try { return this || new Function('return this')(); } catch (e) { if (typeof window === 'object') return window; } })(); })(); /* webpack/runtime/hasOwnProperty shorthand */ (() => { __webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop)) })(); /* webpack/runtime/load script */ (() => { var inProgress = {}; var dataWebpackPrefix = \\\"yd-webpack:\\\"; // loadScript function to load a script via script tag __webpack_require__.l = (url, done, key, chunkId) => { if (inProgress[url]) { inProgress[url].push(done); return; } var script, needAttach; if (key !== undefined) { var scripts = document.getElementsByTagName(\\\"script\\\"); for (var i = 0; i < scripts.length; i++) { var s = scripts[i]; if (s.getAttribute(\\\"src\\\") == url || s.getAttribute(\\\"data-webpack\\\") == dataWebpackPrefix + key) { script = s; break; } } } if (!script) { needAttach = true; script = document.createElement('script'); script.charset = 'utf-8'; script.timeout = 120; if (__webpack_require__.nc) { script.setAttribute(\\\"nonce\\\", __webpack_require__.nc); } script.setAttribute(\\\"data-webpack\\\", dataWebpackPrefix + key); script.src = url; } inProgress[url] = [done]; var onScriptComplete = (prev, event) => { // avoid mem leaks in IE. script.onerror = script.onload = null; clearTimeout(timeout); var doneFns = inProgress[url]; delete inProgress[url]; script.parentNode && script.parentNode.removeChild(script); doneFns && doneFns.forEach((fn) => (fn(event))); if (prev) return prev(event); } var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000); script.onerror = onScriptComplete.bind(null, script.onerror); script.onload = onScriptComplete.bind(null, script.onload); needAttach && document.head.appendChild(script); }; })(); /* webpack/runtime/make namespace object */ (() => { // define __esModule on exports __webpack_require__.r = (exports) => { if (typeof Symbol !== 'undefined' && Symbol.toStringTag) { Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' }); } Object.defineProperty(exports, '__esModule', { value: true }); }; })(); /* webpack/runtime/publicPath */ (() => { var scriptUrl; if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \\\"\\\"; var document = __webpack_require__.g.document; if (!scriptUrl && document) { if (document.currentScript) scriptUrl = document.currentScript.src; if (!scriptUrl) { var scripts = document.getElementsByTagName(\\\"script\\\"); if (scripts.length) { var i = scripts.length - 1; while (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src; } } } // When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration // or pass an empty string (\\\"\\\") and set the __webpack_public_path__ variable from your code to use your own logic. if (!scriptUrl) throw new Error(\\\"Automatic publicPath is not supported in this browser\\\"); scriptUrl = scriptUrl.replace(/#.*$/, \\\"\\\").replace(/\\\\?.*$/, \\\"\\\").replace(/\\\\/[^\\\\/]+$/, \\\"/\\\"); __webpack_require__.p = scriptUrl; })(); /* webpack/runtime/jsonp chunk loading */ (() => { // no baseURI // object to store loaded and loading chunks // undefined = chunk not loaded, null = chunk preloaded/prefetched // [resolve, reject, Promise] = chunk loading, 0 = chunk loaded var installedChunks = { \\\"main\\\": 0 }; __webpack_require__.f.j = (chunkId, promises) => { // JSONP chunk loading for javascript var installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined; if (installedChunkData !== 0) { // 0 means \\\"already installed\\\". // a Promise means \\\"currently loading\\\". if (installedChunkData) { promises.push(installedChunkData[2]); } else { if (true) { // all chunks have JS // setup Promise in chunk cache var promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject])); promises.push(installedChunkData[2] = promise); // start chunk loading var url = __webpack_require__.p + __webpack_require__.u(chunkId); // create error before stack unwound to get useful stacktrace later var error = new Error(); var loadingEnded = (event) => { if (__webpack_require__.o(installedChunks, chunkId)) { installedChunkData = installedChunks[chunkId]; if (installedChunkData !== 0) installedChunks[chunkId] = undefined; if (installedChunkData) { var errorType = event && (event.type === 'load' ? 'missing' : event.type); var realSrc = event && event.target && event.target.src; error.message = 'Loading chunk ' + chunkId + ' failed.\\\\n(' + errorType + ': ' + realSrc + ')'; error.name = 'ChunkLoadError'; error.type = errorType; error.request = realSrc; installedChunkData[1](error); } } }; __webpack_require__.l(url, loadingEnded, \\\"chunk-\\\" + chunkId, chunkId); } } } }; // no prefetching // no preloaded // no HMR // no HMR manifest // no on chunks loaded // install a JSONP callback for chunk loading var webpackJsonpCallback = (parentChunkLoadingFunction, data) => { var [chunkIds, moreModules, runtime] = data; // add \\\"moreModules\\\" to the modules object, // then flag all \\\"chunkIds\\\" as loaded and fire callback var moduleId, chunkId, i = 0; if (chunkIds.some((id) => (installedChunks[id] !== 0))) { for (moduleId in moreModules) { if (__webpack_require__.o(moreModules, moduleId)) { __webpack_require__.m[moduleId] = moreModules[moduleId]; } } if (runtime) var result = runtime(__webpack_require__); } if (parentChunkLoadingFunction) parentChunkLoadingFunction(data); for (; i < chunkIds.length; i++) { chunkId = chunkIds[i]; if (__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) { installedChunks[chunkId][0](); } installedChunks[chunkId] = 0; } } var chunkLoadingGlobal = self[\\\"webpackChunkyd_webpack\\\"] = self[\\\"webpackChunkyd_webpack\\\"] || []; chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0)); chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal)); })(); var __webpack_exports__ = __webpack_require__(\\\"./src/index.js\\\"); })(); \",\"src_data_js.js\",\"把data的内容放在了的数组中\",\"\\\"use strict\\\"; (self[\\\"webpackChunkyd_webpack\\\"] = self[\\\"webpackChunkyd_webpack\\\"] || []).push([[\\\"src_data_js\\\"], { \\\"./src/data.js\\\": ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => { eval(\\\"__webpack_require__.r(__webpack_exports__);\\\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\\\n/* harmony export */ a: () => (/* binding */ a)\\\\n/* harmony export */ });\\\\nconst a = \\\\\\\"yideng\\\\\\\";\\\\n\\\\n//# sourceURL=webpack://yd-webpack/./src/data.js?\\\"); }) }]); \"]},\"160\":{\"h\":\"webpack原理\",\"t\":[\"Compiler是webpack的总调度器，Compiler创建以后，webpack实例生成，每一次文件更新都会生成一个新的Compilation，Complilation会生成Chunk，Parser开始解析依赖，分析出来后放到Module中，通过Module去调用loader，loader编译后，返回给Parser，Parser再吐给依赖，如果有模版，调用Template生成最终代码，如果没有模版，直接保存依赖的源文件。\",\"那怎么知道Parser分析完成了呢？\",\"Tapable，Tapable就是一个观察者，webpack之间所有的通信靠的就是Tapable，webpack留给外界的钩子，只要勾住，webpack运行到对应钩子的流程就会把所有插件统一执行。\",\"webpack原理流程图\"]},\"161\":{\"h\":\"高频考题\"},\"162\":{\"h\":\"提高webpack构建速度有哪些方案\"},\"163\":{\"h\":\"webpack源码核心模块有哪几个？分别是什么作用？\"},\"164\":{\"h\":\"如何保证各个loader按照预想的方式工作？\"},\"165\":{\"h\":\"是否写过loader？简述一下编写loader的思路\"},\"166\":{\"h\":\"是否写过plugin？简述一下编写plugin的思路\"},\"167\":{\"h\":\"详细描述babel原理\"},\"168\":{\"h\":\"详细描述swc原理\"},\"169\":{\"h\":\"使用swc-loader比使用babel-loader优势有哪些？\"},\"170\":{\"h\":\"vite的原理是什么？\"},\"171\":{\"h\":\"说一下webpack的热更新原理\"},\"172\":{\"h\":\"如何对bundle体积进行监控和分析\"},\"173\":{\"h\":\"你的项目工程化Sonar是如何配置的\"},\"174\":{\"h\":\"以一个vue项目为例，说一下Sonar的具体配置\"},\"175\":{\"h\":\"你的项目CI CD使用的是什么\"},\"176\":{\"h\":\"node_modules的包安全性问题如何解决\"},\"177\":{\"h\":\"Webpack SplitChunks是如何配置的\"},\"178\":{\"h\":\"Webpack文件监听原理是什么\"},\"179\":{\"h\":\"目前你了解的前端构建工具都有哪些？区别是什么？\"},\"180\":{\"h\":\"tree shaking的原理是什么\"},\"181\":{\"h\":\"项目中eslint是如何配置的？怎么平衡大家的抗拒心理\"},\"182\":{\"h\":\"你有开发过自己的脚手架吗？解决了项目的什么问题？\"},\"183\":{\"h\":\"综合聊一下你会前端工程化的理解\"},\"184\":{\"h\":\"请你描述下目前的MonoRepo的方案有哪些，各自的优缺点是什么？\"},\"185\":{\"h\":\"Loader 原理\"},\"186\":{\"h\":\"loader 概念\",\"t\":[\"帮助 webpack 将不同类型的文件转换为 webpack 可识别的模块。\"]},\"187\":{\"h\":\"loader 执行顺序\",\"t\":[\"分类\",\"pre： 前置 loader\",\"normal： 普通 loader\",\"inline： 内联 loader\",\"post： 后置 loader\",\"执行顺序\",\"4 类 loader 的执行优级为：pre > normal > inline > post 。\",\"相同优先级的 loader 执行顺序为：从右到左，从下到上。\",\"例如：\",\"// 此时loader执行顺序：loader3 - loader2 - loader1 module: { rules: [ { test: /\\\\.js$/, loader: \\\"loader1\\\", }, { test: /\\\\.js$/, loader: \\\"loader2\\\", }, { test: /\\\\.js$/, loader: \\\"loader3\\\", }, ], }, \",\"// 此时loader执行顺序：loader1 - loader2 - loader3 module: { rules: [ { enforce: \\\"pre\\\", test: /\\\\.js$/, loader: \\\"loader1\\\", }, { // 没有enforce就是normal test: /\\\\.js$/, loader: \\\"loader2\\\", }, { enforce: \\\"post\\\", test: /\\\\.js$/, loader: \\\"loader3\\\", }, ], }, \",\"使用 loader 的方式\",\"配置方式：在 webpack.config.js 文件中指定 loader。（pre、normal、post loader）\",\"内联方式：在每个 import 语句中显式指定 loader。（inline loader）\",\"inline loader\",\"用法：import Styles from 'style-loader!css-loader?modules!./styles.css';\",\"含义：\",\"使用 css-loader 和 style-loader 处理 styles.css 文件\",\"通过 ! 将资源中的 loader 分开\",\"inline loader 可以通过添加不同前缀，跳过其他类型 loader。\",\"! 跳过 normal loader。\",\"import Styles from '!style-loader!css-loader?modules!./styles.css';\",\"-! 跳过 pre 和 normal loader。\",\"import Styles from '-!style-loader!css-loader?modules!./styles.css';\",\"!! 跳过 pre、 normal 和 post loader。\",\"import Styles from '!!style-loader!css-loader?modules!./styles.css';\"]},\"188\":{\"h\":\"开发一个 loader\"},\"189\":{\"h\":\"1. 最简单的 loader\",\"t\":[\"// loaders/loader1.js module.exports = function loader1(content) { console.log(\\\"hello loader\\\"); return content; }; \",\"它接受要处理的源码作为参数，输出转换后的 js 代码。\"]},\"190\":{\"h\":\"2. loader 接受的参数\",\"t\":[\"content 源文件的内容\",\"map SourceMap 数据\",\"meta 数据，可以是任何内容\"]},\"191\":{\"h\":\"loader 分类\"},\"192\":{\"h\":\"1. 同步 loader\",\"t\":[\"module.exports = function (content, map, meta) { return content; }; \",\"this.callback 方法则更灵活，因为它允许传递多个参数，而不仅仅是 content。\",\"module.exports = function (content, map, meta) { // 传递map，让source-map不中断 // 传递meta，让下一个loader接收到其他参数 this.callback(null, content, map, meta); return; // 当调用 callback() 函数时，总是返回 undefined }; \"]},\"193\":{\"h\":\"2. 异步 loader\",\"t\":[\"module.exports = function (content, map, meta) { const callback = this.async(); // 进行异步操作 setTimeout(() => { callback(null, result, map, meta); }, 1000); }; \",\"由于同步计算过于耗时，在 Node.js 这样的单线程环境下进行此操作并不是好的方案，我们建议尽可能地使你的 loader 异步化。但如果计算量很小，同步 loader 也是可以的。\"]},\"194\":{\"h\":\"3. Raw Loader\",\"t\":[\"默认情况下，资源文件会被转化为 UTF-8 字符串，然后传给 loader。通过设置 raw 为 true，loader 可以接收原始的 Buffer。\",\"module.exports = function (content) { // content是一个Buffer数据 return content; }; module.exports.raw = true; // 开启 Raw Loader \"]},\"195\":{\"h\":\"4. Pitching Loader\",\"t\":[\"module.exports = function (content) { return content; }; module.exports.pitch = function (remainingRequest, precedingRequest, data) { console.log(\\\"do somethings\\\"); }; \",\"webpack 会先从左到右执行 loader 链中的每个 loader 上的 pitch 方法（如果有），然后再从右到左执行 loader 链中的每个 loader 上的普通 loader 方法。\",\"loader执行流程\",\"在这个过程中如果任何 pitch 有返回值，则 loader 链被阻断。webpack 会跳过后面所有的的 pitch 和 loader，直接进入上一个 loader 。\",\"loader执行流程\"]},\"196\":{\"h\":\"loader API\",\"t\":[\"方法名\",\"含义\",\"用法\",\"this.async\",\"异步回调 loader。返回 this.callback\",\"const callback = this.async()\",\"this.callback\",\"可以同步或者异步调用的并返回多个结果的函数\",\"this.callback(err, content, sourceMap?, meta?)\",\"this.getOptions(schema)\",\"获取 loader 的 options\",\"this.getOptions(schema)\",\"this.emitFile\",\"产生一个文件\",\"this.emitFile(name, content, sourceMap)\",\"this.utils.contextify\",\"返回一个相对路径\",\"this.utils.contextify(context, request)\",\"this.utils.absolutify\",\"返回一个绝对路径\",\"this.utils.absolutify(context, request)\",\"更多文档，请查阅 webpack 官方 loader api 文档\"]},\"197\":{\"h\":\"手写 clean-log-loader\",\"t\":[\"作用：用来清理 js 代码中的console.log\",\"// loaders/clean-log-loader.js module.exports = function cleanLogLoader(content) { // 将console.log替换为空 return content.replace(/console\\\\.log\\\\(.*\\\\);?/g, \\\"\\\"); }; \"]},\"198\":{\"h\":\"手写 banner-loader\",\"t\":[\"作用：给 js 代码添加文本注释\",\"loaders/banner-loader/index.js\",\"const schema = require(\\\"./schema.json\\\"); module.exports = function (content) { // 获取loader的options，同时对options内容进行校验 // schema是options的校验规则（符合 JSON schema 规则） const options = this.getOptions(schema); const prefix = ` /* * Author: ${options.author} */ `; return `${prefix} \\\\n ${content}`; }; \",\"loaders/banner-loader/schema.json\",\"{ \\\"type\\\": \\\"object\\\", \\\"properties\\\": { \\\"author\\\": { \\\"type\\\": \\\"string\\\" } }, \\\"additionalProperties\\\": false // 是否允许增加其他字段 } \"]},\"199\":{\"h\":\"手写 babel-loader\",\"t\":[\"作用：编译 js 代码，将 ES6+语法编译成 ES5-语法。\",\"下载依赖\",\"npm i @babel/core @babel/preset-env -D \",\"loaders/babel-loader/index.js\",\"const schema = require(\\\"./schema.json\\\"); const babel = require(\\\"@babel/core\\\"); module.exports = function (content) { const options = this.getOptions(schema); // 使用异步loader const callback = this.async(); // 使用babel对js代码进行编译 babel.transform(content, options, function (err, result) { callback(err, result.code); }); }; \",\"loaders/banner-loader/schema.json\",\"{ \\\"type\\\": \\\"object\\\", \\\"properties\\\": { \\\"presets\\\": { \\\"type\\\": \\\"array\\\" } }, \\\"additionalProperties\\\": true } \"]},\"200\":{\"h\":\"手写 file-loader\",\"t\":[\"作用：将文件原封不动输出出去\",\"下载包\",\"npm i loader-utils -D \",\"loaders/file-loader.js\",\"const loaderUtils = require(\\\"loader-utils\\\"); function fileLoader(content) { // 根据文件内容生产一个新的文件名称 const filename = loaderUtils.interpolateName(this, \\\"[hash].[ext]\\\", { content, }); // 输出文件 this.emitFile(filename, content); // 暴露出去，给js引用。 // 记得加上'' return `export default '${filename}'`; } // loader 解决的是二进制的内容 // 图片是 Buffer 数据 fileLoader.raw = true; module.exports = fileLoader; \",\"loader 配置\",\"{ test: /\\\\.(png|jpe?g|gif)$/, loader: \\\"./loaders/file-loader.js\\\", type: \\\"javascript/auto\\\", // 解决图片重复打包问题 }, \"]},\"201\":{\"h\":\"手写 style-loader\",\"t\":[\"作用：动态创建 style 标签，插入 js 中的样式代码，使样式生效。\",\"loaders/style-loader.js\",\"const styleLoader = () => {}; styleLoader.pitch = function (remainingRequest) { /* remainingRequest: C:\\\\Users\\\\86176\\\\Desktop\\\\source\\\\node_modules\\\\css-loader\\\\dist\\\\cjs.js!C:\\\\Users\\\\86176\\\\Desktop\\\\source\\\\src\\\\css\\\\index.css 这里是inline loader用法，代表后面还有一个css-loader等待处理 最终我们需要将remainingRequest中的路径转化成相对路径，webpack才能处理 希望得到：../../node_modules/css-loader/dist/cjs.js!./index.css 所以：需要将绝对路径转化成相对路径 要求： 1. 必须是相对路径 2. 相对路径必须以 ./ 或 ../ 开头 3. 相对路径的路径分隔符必须是 / ，不能是 \\\\ */ const relativeRequest = remainingRequest .split(\\\"!\\\") .map((part) => { // 将路径转化为相对路径 const relativePath = this.utils.contextify(this.context, part); return relativePath; }) .join(\\\"!\\\"); /* !!${relativeRequest} relativeRequest：../../node_modules/css-loader/dist/cjs.js!./index.css relativeRequest是inline loader用法，代表要处理的index.css资源, 使用css-loader处理 !!代表禁用所有配置的loader，只使用inline loader。（也就是外面我们style-loader和css-loader）,它们被禁用了，只是用我们指定的inline loader，也就是css-loader import style from \\\"!!${relativeRequest}\\\" 引入css-loader处理后的css文件 为什么需要css-loader处理css文件，不是我们直接读取css文件使用呢？ 因为可能存在@import导入css语法，这些语法就要通过css-loader解析才能变成一个css文件，否则我们引入的css资源会缺少 const styleEl = document.createElement('style') 动态创建style标签 styleEl.innerHTML = style 将style标签内容设置为处理后的css代码 document.head.appendChild(styleEl) 添加到head中生效 */ const script = ` import style from \\\"!!${relativeRequest}\\\" const styleEl = document.createElement('style') styleEl.innerHTML = style document.head.appendChild(styleEl) `; // style-loader是第一个loader, 由于return导致熔断，所以其他loader不执行了（不管是normal还是pitch） return script; }; module.exports = styleLoader; \"]},\"202\":{\"h\":\"Plugin 原理\"},\"203\":{\"h\":\"Plugin 的作用\",\"t\":[\"通过插件我们可以扩展 webpack，加入自定义的构建行为，使 webpack 可以执行更广泛的任务，拥有更强的构建能力。\"]},\"204\":{\"h\":\"Plugin 工作原理\",\"t\":[\"webpack 就像一条生产线，要经过一系列处理流程后才能将源文件转换成输出结果。 这条生产线上的每个处理流程的职责都是单一的，多个流程之间有存在依赖关系，只有完成当前处理后才能交给下一个流程去处理。 插件就像是一个插入到生产线中的一个功能，在特定的时机对生产线上的资源做处理。webpack 通过 Tapable 来组织这条复杂的生产线。 webpack 在运行过程中会广播事件，插件只需要监听它所关心的事件，就能加入到这条生产线中，去改变生产线的运作。 webpack 的事件流机制保证了插件的有序性，使得整个系统扩展性很好。 ——「深入浅出 Webpack」\",\"站在代码逻辑的角度就是：webpack 在编译代码过程中，会触发一系列 Tapable 钩子事件，插件所做的，就是找到相应的钩子，往上面挂上自己的任务，也就是注册事件，这样，当 webpack 构建的时候，插件注册的事件就会随着钩子的触发而执行了。\"]},\"205\":{\"h\":\"Webpack 内部的钩子\"},\"206\":{\"h\":\"什么是钩子\",\"t\":[\"钩子的本质就是：事件。为了方便我们直接介入和控制编译过程，webpack 把编译过程中触发的各类关键事件封装成事件接口暴露了出来。这些接口被很形象地称做：hooks（钩子）。开发插件，离不开这些钩子。\"]},\"207\":{\"h\":\"Tapable\",\"t\":[\"Tapable 为 webpack 提供了统一的插件接口（钩子）类型定义，它是 webpack 的核心功能库。webpack 中目前有十种 hooks，在 Tapable 源码中可以看到，他们是：\",\"// https://github.com/webpack/tapable/blob/master/lib/index.js exports.SyncHook = require(\\\"./SyncHook\\\"); exports.SyncBailHook = require(\\\"./SyncBailHook\\\"); exports.SyncWaterfallHook = require(\\\"./SyncWaterfallHook\\\"); exports.SyncLoopHook = require(\\\"./SyncLoopHook\\\"); exports.AsyncParallelHook = require(\\\"./AsyncParallelHook\\\"); exports.AsyncParallelBailHook = require(\\\"./AsyncParallelBailHook\\\"); exports.AsyncSeriesHook = require(\\\"./AsyncSeriesHook\\\"); exports.AsyncSeriesBailHook = require(\\\"./AsyncSeriesBailHook\\\"); exports.AsyncSeriesLoopHook = require(\\\"./AsyncSeriesLoopHook\\\"); exports.AsyncSeriesWaterfallHook = require(\\\"./AsyncSeriesWaterfallHook\\\"); exports.HookMap = require(\\\"./HookMap\\\"); exports.MultiHook = require(\\\"./MultiHook\\\"); \",\"Tapable 还统一暴露了三个方法给插件，用于注入不同类型的自定义构建行为：\",\"tap：可以注册同步钩子和异步钩子。\",\"tapAsync：回调方式注册异步钩子。\",\"tapPromise：Promise 方式注册异步钩子。\"]},\"208\":{\"h\":\"Plugin 构建对象\"},\"209\":{\"h\":\"Compiler\",\"t\":[\"compiler 对象中保存着完整的 Webpack 环境配置，每次启动 webpack 构建时它都是一个独一无二，仅仅会创建一次的对象。\",\"这个对象会在首次启动 Webpack 时创建，我们可以通过 compiler 对象上访问到 Webapck 的主环境配置，比如 loader 、 plugin 等等配置信息。\",\"它有以下主要属性：\",\"compiler.options 可以访问本次启动 webpack 时候所有的配置文件，包括但不限于 loaders 、 entry 、 output 、 plugin 等等完整配置信息。\",\"compiler.inputFileSystem 和 compiler.outputFileSystem 可以进行文件操作，相当于 Nodejs 中 fs。\",\"compiler.hooks 可以注册 tapable 的不同种类 Hook，从而可以在 compiler 生命周期中植入不同的逻辑。\",\"compiler hooks 文档\"]},\"210\":{\"h\":\"Compilation\",\"t\":[\"compilation 对象代表一次资源的构建，compilation 实例能够访问所有的模块和它们的依赖。\",\"一个 compilation 对象会对构建依赖图中所有模块，进行编译。 在编译阶段，模块会被加载(load)、封存(seal)、优化(optimize)、 分块(chunk)、哈希(hash)和重新创建(restore)。\",\"它有以下主要属性：\",\"compilation.modules 可以访问所有模块，打包的每一个文件都是一个模块。\",\"compilation.chunks chunk 即是多个 modules 组成而来的一个代码块。入口文件引入的资源组成一个 chunk，通过代码分割的模块又是另外的 chunk。\",\"compilation.assets 可以访问本次打包生成所有文件的结果。\",\"compilation.hooks 可以注册 tapable 的不同种类 Hook，用于在 compilation 编译模块阶段进行逻辑添加以及修改。\",\"compilation hooks 文档\"]},\"211\":{\"h\":\"生命周期简图\",\"t\":[\"Webpack 插件生命周期\"]},\"212\":{\"h\":\"开发一个插件\"},\"213\":{\"h\":\"最简单的插件\",\"t\":[\"plugins/test-plugin.js\",\"class TestPlugin { constructor() { console.log(\\\"TestPlugin constructor()\\\"); } // 1. webpack读取配置时，new TestPlugin() ，会执行插件 constructor 方法 // 2. webpack创建 compiler 对象 // 3. 遍历所有插件，调用插件的 apply 方法 apply(compiler) { console.log(\\\"TestPlugin apply()\\\"); } } module.exports = TestPlugin; \"]},\"214\":{\"h\":\"注册 hook\",\"t\":[\"class TestPlugin { constructor() { console.log(\\\"TestPlugin constructor()\\\"); } // 1. webpack读取配置时，new TestPlugin() ，会执行插件 constructor 方法 // 2. webpack创建 compiler 对象 // 3. 遍历所有插件，调用插件的 apply 方法 // 4. 执行剩下编译流程（触发各个hooks事件） apply(compiler) { console.log(\\\"TestPlugin apply()\\\"); // 从文档可知, compile hook 是 SyncHook, 也就是同步钩子, 只能用tap注册 compiler.hooks.compile.tap(\\\"TestPlugin\\\", (compilationParams) => { console.log(\\\"compiler.compile()\\\"); }); // 从文档可知, make 是 AsyncParallelHook, 也就是异步并行钩子, 特点就是异步任务同时执行 // 可以使用 tap、tapAsync、tapPromise 注册。 // 如果使用tap注册的话，进行异步操作是不会等待异步操作执行完成的。 compiler.hooks.make.tap(\\\"TestPlugin\\\", (compilation) => { setTimeout(() => { console.log(\\\"compiler.make() 111\\\"); }, 2000); }); // 使用tapAsync、tapPromise注册，进行异步操作会等异步操作做完再继续往下执行 compiler.hooks.make.tapAsync(\\\"TestPlugin\\\", (compilation, callback) => { setTimeout(() => { console.log(\\\"compiler.make() 222\\\"); // 必须调用 callback(); }, 1000); }); compiler.hooks.make.tapPromise(\\\"TestPlugin\\\", (compilation) => { console.log(\\\"compiler.make() 333\\\"); // 必须返回promise return new Promise((resolve) => { resolve(); }); }); // 从文档可知, emit 是 AsyncSeriesHook, 也就是异步串行钩子，特点就是异步任务顺序执行 compiler.hooks.emit.tapAsync(\\\"TestPlugin\\\", (compilation, callback) => { setTimeout(() => { console.log(\\\"compiler.emit() 111\\\"); callback(); }, 3000); }); compiler.hooks.emit.tapAsync(\\\"TestPlugin\\\", (compilation, callback) => { setTimeout(() => { console.log(\\\"compiler.emit() 222\\\"); callback(); }, 2000); }); compiler.hooks.emit.tapAsync(\\\"TestPlugin\\\", (compilation, callback) => { setTimeout(() => { console.log(\\\"compiler.emit() 333\\\"); callback(); }, 1000); }); } } module.exports = TestPlugin; \"]},\"215\":{\"h\":\"启动调试\",\"t\":[\"通过调试查看 compiler 和 compilation 对象数据情况。\",\"package.json 配置指令\",\"{ \\\"name\\\": \\\"source\\\", \\\"version\\\": \\\"1.0.0\\\", \\\"scripts\\\": { \\\"debug\\\": \\\"node --inspect-brk ./node_modules/webpack-cli/bin/cli.js\\\" }, \\\"keywords\\\": [], \\\"author\\\": \\\"xiongjian\\\", \\\"license\\\": \\\"ISC\\\", \\\"devDependencies\\\": { \\\"@babel/core\\\": \\\"^7.17.10\\\", \\\"@babel/preset-env\\\": \\\"^7.17.10\\\", \\\"css-loader\\\": \\\"^6.7.1\\\", \\\"loader-utils\\\": \\\"^3.2.0\\\", \\\"webpack\\\": \\\"^5.72.0\\\", \\\"webpack-cli\\\": \\\"^4.9.2\\\" } } \",\"运行指令\",\"npm run debug \",\"此时控制台输出以下内容：\",\"PS C:\\\\Users\\\\86176\\\\Desktop\\\\source> npm run debug > source@1.0.0 debug > node --inspect-brk ./node_modules/webpack-cli/bin/cli.js Debugger listening on ws://127.0.0.1:9229/629ea097-7b52-4011-93a7-02f83c75c797 For help, see: https://nodejs.org/en/docs/inspecto \",\"打开 Chrome 浏览器，F12 打开浏览器调试控制台。\",\"此时控制台会显示一个绿色的图标\",\"调试控制台\",\"点击绿色的图标进入调试模式。\",\"在需要调试代码处用 debugger 打断点，代码就会停止运行，从而调试查看数据情况。\"]},\"216\":{\"h\":\"BannerWebpackPlugin\",\"t\":[\"作用：给打包输出文件添加注释。\",\"开发思路:\",\"需要打包输出前添加注释：需要使用 compiler.hooks.emit 钩子, 它是打包输出前触发。\",\"如何获取打包输出的资源？compilation.assets 可以获取所有即将输出的资源文件。\",\"实现：\",\"// plugins/banner-webpack-plugin.js class BannerWebpackPlugin { constructor(options = {}) { this.options = options; } apply(compiler) { // 需要处理文件 const extensions = [\\\"js\\\", \\\"css\\\"]; // emit是异步串行钩子 compiler.hooks.emit.tapAsync(\\\"BannerWebpackPlugin\\\", (compilation, callback) => { // compilation.assets包含所有即将输出的资源 // 通过过滤只保留需要处理的文件 const assetPaths = Object.keys(compilation.assets).filter((path) => { const splitted = path.split(\\\".\\\"); return extensions.includes(splitted[splitted.length - 1]); }); assetPaths.forEach((assetPath) => { const asset = compilation.assets[assetPath]; const source = `/* * Author: ${this.options.author} */\\\\n${asset.source()}`; // 覆盖资源 compilation.assets[assetPath] = { // 资源内容 source() { return source; }, // 资源大小 size() { return source.length; }, }; }); callback(); }); } } module.exports = BannerWebpackPlugin; \"]},\"217\":{\"h\":\"CleanWebpackPlugin\",\"t\":[\"作用：在 webpack 打包输出前将上次打包内容清空。\",\"开发思路：\",\"如何在打包输出前执行？需要使用 compiler.hooks.emit 钩子, 它是打包输出前触发。\",\"如何清空上次打包内容？ \",\"获取打包输出目录：通过 compiler 对象。\",\"通过文件操作清空内容：通过 compiler.outputFileSystem 操作文件。\",\"实现：\",\"// plugins/clean-webpack-plugin.js class CleanWebpackPlugin { apply(compiler) { // 获取操作文件的对象 const fs = compiler.outputFileSystem; // emit是异步串行钩子 compiler.hooks.emit.tapAsync(\\\"CleanWebpackPlugin\\\", (compilation, callback) => { // 获取输出文件目录 const outputPath = compiler.options.output.path; // 删除目录所有文件 const err = this.removeFiles(fs, outputPath); // 执行成功err为undefined，执行失败err就是错误原因 callback(err); }); } removeFiles(fs, path) { try { // 读取当前目录下所有文件 const files = fs.readdirSync(path); // 遍历文件，删除 files.forEach((file) => { // 获取文件完整路径 const filePath = `${path}/${file}`; // 分析文件 const fileStat = fs.statSync(filePath); // 判断是否是文件夹 if (fileStat.isDirectory()) { // 是文件夹需要递归遍历删除下面所有文件 this.removeFiles(fs, filePath); } else { // 不是文件夹就是文件，直接删除 fs.unlinkSync(filePath); } }); // 最后删除当前目录 fs.rmdirSync(path); } catch (e) { // 将产生的错误返回出去 return e; } } } module.exports = CleanWebpackPlugin; \"]},\"218\":{\"h\":\"AnalyzeWebpackPlugin\",\"t\":[\"作用：分析 webpack 打包资源大小，并输出分析文件。\",\"开发思路:\",\"在哪做? compiler.hooks.emit, 它是在打包输出前触发，我们需要分析资源大小同时添加上分析后的 md 文件。\",\"实现：\",\"// plugins/analyze-webpack-plugin.js class AnalyzeWebpackPlugin { apply(compiler) { // emit是异步串行钩子 compiler.hooks.emit.tap(\\\"AnalyzeWebpackPlugin\\\", (compilation) => { // Object.entries将对象变成二维数组。二维数组中第一项值是key，第二项值是value const assets = Object.entries(compilation.assets); let source = \\\"# 分析打包资源大小 \\\\n| 名称 | 大小 |\\\\n| --- | --- |\\\"; assets.forEach(([filename, file]) => { source += `\\\\n| ${filename} | ${file.size()} |`; }); // 添加资源 compilation.assets[\\\"analyze.md\\\"] = { source() { return source; }, size() { return source.length; }, }; }); } } module.exports = AnalyzeWebpackPlugin; \"]},\"219\":{\"h\":\"InlineChunkWebpackPlugin\",\"t\":[\"作用：webpack 打包生成的 runtime 文件太小了，额外发送请求性能不好，所以需要将其内联到 js 中，从而减少请求数量。\",\"开发思路:\",\"我们需要借助 html-webpack-plugin 来实现 \",\"在 html-webpack-plugin 输出 index.html 前将内联 runtime 注入进去\",\"删除多余的 runtime 文件\",\"如何操作 html-webpack-plugin？官方文档\",\"实现：\",\"// plugins/inline-chunk-webpack-plugin.js const HtmlWebpackPlugin = require(\\\"safe-require\\\")(\\\"html-webpack-plugin\\\"); class InlineChunkWebpackPlugin { constructor(tests) { this.tests = tests; } apply(compiler) { compiler.hooks.compilation.tap(\\\"InlineChunkWebpackPlugin\\\", (compilation) => { const hooks = HtmlWebpackPlugin.getHooks(compilation); hooks.alterAssetTagGroups.tap(\\\"InlineChunkWebpackPlugin\\\", (assets) => { assets.headTags = this.getInlineTag(assets.headTags, compilation.assets); assets.bodyTags = this.getInlineTag(assets.bodyTags, compilation.assets); }); hooks.afterEmit.tap(\\\"InlineChunkHtmlPlugin\\\", () => { Object.keys(compilation.assets).forEach((assetName) => { if (this.tests.some((test) => assetName.match(test))) { delete compilation.assets[assetName]; } }); }); }); } getInlineTag(tags, assets) { return tags.map((tag) => { if (tag.tagName !== \\\"script\\\") return tag; const scriptName = tag.attributes.src; if (!this.tests.some((test) => scriptName.match(test))) return tag; return { tagName: \\\"script\\\", innerHTML: assets[scriptName].source(), closeTag: true }; }); } } module.exports = InlineChunkWebpackPlugin; \"]},\"220\":{\"h\":\"Css 处理\"},\"221\":{\"h\":\"提取 Css 成单独文件\",\"t\":[\"Css 文件目前被打包到 js 文件中，当 js 文件加载时，会创建一个 style 标签来生成样式\",\"这样对于网站来说，会出现闪屏现象，用户体验不好\",\"我们应该是单独的 Css 文件，通过 link 标签加载性能才好\"]},\"222\":{\"h\":\"1. 下载包\",\"t\":[\"npm i mini-css-extract-plugin -D \"]},\"223\":{\"h\":\"2. 配置\",\"t\":[\"webpack.prod.js\",\"const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); const MiniCssExtractPlugin = require(\\\"mini-css-extract-plugin\\\"); module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"../dist\\\"), // 生产模式需要输出 filename: \\\"static/js/main.js\\\", // 将 js 文件输出到 static/js 目录中 clean: true, }, module: { rules: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: [MiniCssExtractPlugin.loader, \\\"css-loader\\\"], }, { test: /\\\\.less$/, use: [MiniCssExtractPlugin.loader, \\\"css-loader\\\", \\\"less-loader\\\"], }, { test: /\\\\.s[ac]ss$/, use: [MiniCssExtractPlugin.loader, \\\"css-loader\\\", \\\"sass-loader\\\"], }, { test: /\\\\.styl$/, use: [MiniCssExtractPlugin.loader, \\\"css-loader\\\", \\\"stylus-loader\\\"], }, { test: /\\\\.(png|jpe?g|gif|webp)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, generator: { // 将图片文件输出到 static/imgs 目录中 // 将图片文件命名 [hash:8][ext][query] // [hash:8]: hash值取8位 // [ext]: 使用之前的文件扩展名 // [query]: 添加之前的query参数 filename: \\\"static/imgs/[hash:8][ext][query]\\\", }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", generator: { filename: \\\"static/media/[hash:8][ext][query]\\\", }, }, { test: /\\\\.js$/, exclude: /node_modules/, // 排除node_modules代码不编译 loader: \\\"babel-loader\\\", }, ], }, plugins: [ new ESLintWebpackPlugin({ // 指定检查文件的根目录 context: path.resolve(__dirname, \\\"../src\\\"), }), new HtmlWebpackPlugin({ // 以 public/index.html 为模板创建文件 // 新的html文件有两个特点：1. 内容和源文件一致 2. 自动引入打包生成的js等资源 template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), // 提取css成单独文件 new MiniCssExtractPlugin({ // 定义输出文件名和目录 filename: \\\"static/css/main.css\\\", }), ], // devServer: { // host: \\\"localhost\\\", // 启动服务器域名 // port: \\\"3000\\\", // 启动服务器端口号 // open: true, // 是否自动打开浏览器 // }, mode: \\\"production\\\", }; \"]},\"224\":{\"h\":\"3. 运行指令\",\"t\":[\"npm run build \"]},\"225\":{\"h\":\"Css 兼容性处理\"},\"226\":{\"h\":\"1. 下载包\",\"t\":[\"npm i postcss-loader postcss postcss-preset-env -D \"]},\"227\":{\"h\":\"2. 配置\",\"t\":[\"webpack.prod.js\",\"const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); const MiniCssExtractPlugin = require(\\\"mini-css-extract-plugin\\\"); module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"../dist\\\"), // 生产模式需要输出 filename: \\\"static/js/main.js\\\", // 将 js 文件输出到 static/js 目录中 clean: true, }, module: { rules: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: [ MiniCssExtractPlugin.loader, \\\"css-loader\\\", { loader: \\\"postcss-loader\\\", options: { postcssOptions: { plugins: [ \\\"postcss-preset-env\\\", // 能解决大多数样式兼容性问题 ], }, }, }, ], }, { test: /\\\\.less$/, use: [ MiniCssExtractPlugin.loader, \\\"css-loader\\\", { loader: \\\"postcss-loader\\\", options: { postcssOptions: { plugins: [ \\\"postcss-preset-env\\\", // 能解决大多数样式兼容性问题 ], }, }, }, \\\"less-loader\\\", ], }, { test: /\\\\.s[ac]ss$/, use: [ MiniCssExtractPlugin.loader, \\\"css-loader\\\", { loader: \\\"postcss-loader\\\", options: { postcssOptions: { plugins: [ \\\"postcss-preset-env\\\", // 能解决大多数样式兼容性问题 ], }, }, }, \\\"sass-loader\\\", ], }, { test: /\\\\.styl$/, use: [ MiniCssExtractPlugin.loader, \\\"css-loader\\\", { loader: \\\"postcss-loader\\\", options: { postcssOptions: { plugins: [ \\\"postcss-preset-env\\\", // 能解决大多数样式兼容性问题 ], }, }, }, \\\"stylus-loader\\\", ], }, { test: /\\\\.(png|jpe?g|gif|webp)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, generator: { // 将图片文件输出到 static/imgs 目录中 // 将图片文件命名 [hash:8][ext][query] // [hash:8]: hash值取8位 // [ext]: 使用之前的文件扩展名 // [query]: 添加之前的query参数 filename: \\\"static/imgs/[hash:8][ext][query]\\\", }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", generator: { filename: \\\"static/media/[hash:8][ext][query]\\\", }, }, { test: /\\\\.js$/, exclude: /node_modules/, // 排除node_modules代码不编译 loader: \\\"babel-loader\\\", }, ], }, plugins: [ new ESLintWebpackPlugin({ // 指定检查文件的根目录 context: path.resolve(__dirname, \\\"../src\\\"), }), new HtmlWebpackPlugin({ // 以 public/index.html 为模板创建文件 // 新的html文件有两个特点：1. 内容和源文件一致 2. 自动引入打包生成的js等资源 template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), // 提取css成单独文件 new MiniCssExtractPlugin({ // 定义输出文件名和目录 filename: \\\"static/css/main.css\\\", }), ], // devServer: { // host: \\\"localhost\\\", // 启动服务器域名 // port: \\\"3000\\\", // 启动服务器端口号 // open: true, // 是否自动打开浏览器 // }, mode: \\\"production\\\", }; \"]},\"228\":{\"h\":\"3. 控制兼容性\",\"t\":[\"我们可以在 package.json 文件中添加 browserslist 来控制样式的兼容性做到什么程度。\",\"{ // 其他省略 \\\"browserslist\\\": [\\\"ie >= 8\\\"] } \",\"想要知道更多的 browserslist 配置，查看browserslist 文档\",\"以上为了测试兼容性所以设置兼容浏览器 ie8 以上。\",\"实际开发中我们一般不考虑旧版本浏览器了，所以我们可以这样设置：\",\"{ // 其他省略 \\\"browserslist\\\": [\\\"last 2 version\\\", \\\"> 1%\\\", \\\"not dead\\\"] } \"]},\"229\":{\"h\":\"4. 合并配置\",\"t\":[\"webpack.prod.js\",\"const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); const MiniCssExtractPlugin = require(\\\"mini-css-extract-plugin\\\"); // 获取处理样式的Loaders const getStyleLoaders = (preProcessor) => { return [ MiniCssExtractPlugin.loader, \\\"css-loader\\\", { loader: \\\"postcss-loader\\\", options: { postcssOptions: { plugins: [ \\\"postcss-preset-env\\\", // 能解决大多数样式兼容性问题 ], }, }, }, preProcessor, ].filter(Boolean); }; module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"../dist\\\"), // 生产模式需要输出 filename: \\\"static/js/main.js\\\", // 将 js 文件输出到 static/js 目录中 clean: true, }, module: { rules: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: getStyleLoaders(), }, { test: /\\\\.less$/, use: getStyleLoaders(\\\"less-loader\\\"), }, { test: /\\\\.s[ac]ss$/, use: getStyleLoaders(\\\"sass-loader\\\"), }, { test: /\\\\.styl$/, use: getStyleLoaders(\\\"stylus-loader\\\"), }, { test: /\\\\.(png|jpe?g|gif|webp)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, generator: { // 将图片文件输出到 static/imgs 目录中 // 将图片文件命名 [hash:8][ext][query] // [hash:8]: hash值取8位 // [ext]: 使用之前的文件扩展名 // [query]: 添加之前的query参数 filename: \\\"static/imgs/[hash:8][ext][query]\\\", }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", generator: { filename: \\\"static/media/[hash:8][ext][query]\\\", }, }, { test: /\\\\.js$/, exclude: /node_modules/, // 排除node_modules代码不编译 loader: \\\"babel-loader\\\", }, ], }, plugins: [ new ESLintWebpackPlugin({ // 指定检查文件的根目录 context: path.resolve(__dirname, \\\"../src\\\"), }), new HtmlWebpackPlugin({ // 以 public/index.html 为模板创建文件 // 新的html文件有两个特点：1. 内容和源文件一致 2. 自动引入打包生成的js等资源 template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), // 提取css成单独文件 new MiniCssExtractPlugin({ // 定义输出文件名和目录 filename: \\\"static/css/main.css\\\", }), ], // devServer: { // host: \\\"localhost\\\", // 启动服务器域名 // port: \\\"3000\\\", // 启动服务器端口号 // open: true, // 是否自动打开浏览器 // }, mode: \\\"production\\\", }; \"]},\"230\":{\"h\":\"5. 运行指令\",\"t\":[\"npm run build \"]},\"231\":{\"h\":\"Css 压缩\"},\"232\":{\"h\":\"1. 下载包\",\"t\":[\"npm i css-minimizer-webpack-plugin -D \"]},\"233\":{\"h\":\"2. 配置\",\"t\":[\"webpack.prod.js\",\"const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); const MiniCssExtractPlugin = require(\\\"mini-css-extract-plugin\\\"); const CssMinimizerPlugin = require(\\\"css-minimizer-webpack-plugin\\\"); // 获取处理样式的Loaders const getStyleLoaders = (preProcessor) => { return [ MiniCssExtractPlugin.loader, \\\"css-loader\\\", { loader: \\\"postcss-loader\\\", options: { postcssOptions: { plugins: [ \\\"postcss-preset-env\\\", // 能解决大多数样式兼容性问题 ], }, }, }, preProcessor, ].filter(Boolean); }; module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"../dist\\\"), // 生产模式需要输出 filename: \\\"static/js/main.js\\\", // 将 js 文件输出到 static/js 目录中 clean: true, }, module: { rules: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: getStyleLoaders(), }, { test: /\\\\.less$/, use: getStyleLoaders(\\\"less-loader\\\"), }, { test: /\\\\.s[ac]ss$/, use: getStyleLoaders(\\\"sass-loader\\\"), }, { test: /\\\\.styl$/, use: getStyleLoaders(\\\"stylus-loader\\\"), }, { test: /\\\\.(png|jpe?g|gif|webp)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, generator: { // 将图片文件输出到 static/imgs 目录中 // 将图片文件命名 [hash:8][ext][query] // [hash:8]: hash值取8位 // [ext]: 使用之前的文件扩展名 // [query]: 添加之前的query参数 filename: \\\"static/imgs/[hash:8][ext][query]\\\", }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", generator: { filename: \\\"static/media/[hash:8][ext][query]\\\", }, }, { test: /\\\\.js$/, exclude: /node_modules/, // 排除node_modules代码不编译 loader: \\\"babel-loader\\\", }, ], }, plugins: [ new ESLintWebpackPlugin({ // 指定检查文件的根目录 context: path.resolve(__dirname, \\\"../src\\\"), }), new HtmlWebpackPlugin({ // 以 public/index.html 为模板创建文件 // 新的html文件有两个特点：1. 内容和源文件一致 2. 自动引入打包生成的js等资源 template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), // 提取css成单独文件 new MiniCssExtractPlugin({ // 定义输出文件名和目录 filename: \\\"static/css/main.css\\\", }), // css压缩 new CssMinimizerPlugin(), ], // devServer: { // host: \\\"localhost\\\", // 启动服务器域名 // port: \\\"3000\\\", // 启动服务器端口号 // open: true, // 是否自动打开浏览器 // }, mode: \\\"production\\\", }; \"]},\"234\":{\"h\":\"3. 运行指令\",\"t\":[\"npm run build \"]},\"235\":{\"h\":\"例子\",\"t\":[\"8.demo\"]},\"236\":{\"h\":\"html 压缩\",\"t\":[\"默认生产模式已经开启了：html 压缩和 js 压缩\",\"不需要额外进行配置\"]},\"237\":{\"h\":\"修改输出资源的名称和路径\"},\"238\":{\"h\":\"1. 配置\",\"t\":[\"const path = require(\\\"path\\\"); module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"dist\\\"), filename: \\\"static/js/main.js\\\", // 将 js 文件输出到 static/js 目录中 }, module: { rules: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: [\\\"style-loader\\\", \\\"css-loader\\\"], }, { test: /\\\\.less$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"less-loader\\\"], }, { test: /\\\\.s[ac]ss$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"sass-loader\\\"], }, { test: /\\\\.styl$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"stylus-loader\\\"], }, { test: /\\\\.(png|jpe?g|gif|webp)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, generator: { // 将图片文件输出到 static/imgs 目录中 // 将图片文件命名 [hash:8][ext][query] // [hash:8]: hash值取8位 // [ext]: 使用之前的文件扩展名 // [query]: 添加之前的query参数 filename: \\\"static/imgs/[hash:8][ext][query]\\\", }, }, ], }, plugins: [], mode: \\\"development\\\", }; \"]},\"239\":{\"h\":\"2. 修改 index.html\",\"t\":[\"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\" /> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\" /> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\" /> <title>webpack5</title> </head> <body> <h1>Hello Webpack5</h1> <div class=\\\"box1\\\"></div> <div class=\\\"box2\\\"></div> <div class=\\\"box3\\\"></div> <div class=\\\"box4\\\"></div> <div class=\\\"box5\\\"></div> <!-- 修改 js 资源路径 --> <script src=\\\"../dist/static/js/main.js\\\"></script> </body> </html> \"]},\"240\":{\"h\":\"3. 运行指令\",\"t\":[\"npx webpack \",\"此时输出文件目录：\",\"（注意：需要将上次打包生成的文件清空，再重新打包才有效果）\",\"├── dist └── static ├── imgs │ └── 7003350e.png └── js └── main.js \"]},\"241\":{\"h\":\"例子\",\"t\":[\"5.demo\"]},\"242\":{\"h\":\"前言\"},\"243\":{\"h\":\"为什么需要打包工具？\",\"t\":[\"开发时，我们会使用框架（React、Vue），ES6 模块化语法，Less/Sass 等 css 预处理器等语法进行开发。\",\"这样的代码要想在浏览器运行必须经过编译成浏览器能识别的 JS、Css 等语法，才能运行。\",\"所以我们需要打包工具帮我们做完这些事。\",\"除此之外，打包工具还能压缩代码、做兼容性处理、提升代码性能等。\"]},\"244\":{\"h\":\"有哪些打包工具？\",\"t\":[\"Grunt\",\"Gulp\",\"Parcel\",\"Webpack\",\"Rollup\",\"Vite\",\"...\",\"目前市面上最流量的是 Webpack，所以我们主要以 Webpack 来介绍使用打包工具\"]},\"245\":{\"h\":\"基本使用\",\"t\":[\"Webpack 是一个静态资源打包工具。\",\"它会以一个或多个文件作为打包的入口，将我们整个项目所有文件编译组合成一个或多个文件输出出去。\",\"输出的文件就是编译好的文件，就可以在浏览器段运行了。\",\"我们将 Webpack 输出的文件叫做 bundle。\"]},\"246\":{\"h\":\"功能介绍\",\"t\":[\"Webpack 本身功能是有限的:\",\"开发模式：仅能编译 JS 中的 ES Module 语法\",\"生产模式：能编译 JS 中的 ES Module 语法，还能压缩 JS 代码\"]},\"247\":{\"h\":\"开始使用\"},\"248\":{\"h\":\"1. 资源目录\",\"t\":[\"webpack_code # 项目根目录（所有指令必须在这个目录运行） └── src # 项目源码目录 ├── js # js文件目录 │ ├── count.js │ └── sum.js └── main.js # 项目主文件 \"]},\"249\":{\"h\":\"2. 创建文件\",\"t\":[\"count.js\",\"export default function count(x, y) { return x - y; } \",\"sum.js\",\"export default function sum(...args) { return args.reduce((p, c) => p + c, 0); } \",\"main.js\",\"import count from \\\"./js/count\\\"; import sum from \\\"./js/sum\\\"; console.log(count(2, 1)); console.log(sum(1, 2, 3, 4)); \"]},\"250\":{\"h\":\"3. 下载依赖\",\"t\":[\"打开终端，来到项目根目录。运行以下指令：\",\"初始化package.json\",\"npm init -y \",\"此时会生成一个基础的 package.json 文件。\",\"需要注意的是 package.json 中 name 字段不能叫做 webpack, 否则下一步会报错\",\"下载依赖\",\"npm i webpack webpack-cli -D \"]},\"251\":{\"h\":\"4. 启用 Webpack\",\"t\":[\"开发模式\",\"npx webpack ./src/main.js --mode=development \",\"生产模式\",\"npx webpack ./src/main.js --mode=production \",\"npx webpack: 是用来运行本地安装 Webpack 包的。\",\"./src/main.js: 指定 Webpack 从 main.js 文件开始打包，不但会打包 main.js，还会将其依赖也一起打包进来。\",\"--mode=xxx：指定模式（环境）。\"]},\"252\":{\"h\":\"5. 观察输出文件\",\"t\":[\"默认 Webpack 会将文件打包输出到 dist 目录下，我们查看 dist 目录下文件情况就好了\"]},\"253\":{\"h\":\"例子\",\"t\":[\"1.demo\"]},\"254\":{\"h\":\"小结\",\"t\":[\"Webpack 本身功能比较少，只能处理 js 资源，一旦遇到 css 等其他资源就会报错。\",\"所以我们学习 Webpack，就是主要学习如何处理其他资源。\"]},\"255\":{\"h\":\"基本配置\",\"t\":[\"在开始使用 Webpack 之前，我们需要对 Webpack 的配置有一定的认识。\"]},\"256\":{\"h\":\"5 大核心概念\",\"t\":[\"entry（入口）\",\"指示 Webpack 从哪个文件开始打包\",\"output（输出）\",\"指示 Webpack 打包完的文件输出到哪里去，如何命名等\",\"loader（加载器）\",\"webpack 本身只能处理 js、json 等资源，其他资源需要借助 loader，Webpack 才能解析\",\"plugins（插件）\",\"扩展 Webpack 的功能\",\"mode（模式）\",\"主要由两种模式：\",\"开发模式：development\",\"生产模式：production\"]},\"257\":{\"h\":\"准备 Webpack 配置文件\",\"t\":[\"在项目根目录下新建文件：webpack.config.js\",\"module.exports = { // 入口 entry: \\\"\\\", // 输出 output: {}, // 加载器 module: { rules: [], }, // 插件 plugins: [], // 模式 mode: \\\"\\\", }; \",\"Webpack 是基于 Node.js 运行的，所以采用 Common.js 模块化规范\"]},\"258\":{\"h\":\"修改配置文件\",\"t\":[\"配置文件\",\"// Node.js的核心模块，专门用来处理文件路径 const path = require(\\\"path\\\"); module.exports = { // 入口 // 相对路径和绝对路径都行 entry: \\\"./src/main.js\\\", // 输出 output: { // path: 文件输出目录，必须是绝对路径 // path.resolve()方法返回一个绝对路径 // __dirname 当前文件的文件夹绝对路径 path: path.resolve(__dirname, \\\"dist\\\"), // filename: 输出文件名 filename: \\\"main.js\\\", }, // 加载器 module: { rules: [], }, // 插件 plugins: [], // 模式 mode: \\\"development\\\", // 开发模式 }; \",\"运行指令\",\"npx webpack \",\"此时功能和之前一样，也不能处理样式资源\"]},\"259\":{\"h\":\"例子\",\"t\":[\"2.demo\"]},\"260\":{\"h\":\"小结\",\"t\":[\"Webpack 将来都通过 webpack.config.js 文件进行配置，来增强 Webpack 的功能\",\"我们后面会以两个模式来分别搭建 Webpack 的配置，先进行开发模式，再完成生产模式\"]},\"261\":{\"h\":\"处理 Html 资源\"},\"262\":{\"h\":\"1. 下载包\",\"t\":[\"npm i html-webpack-plugin -D \"]},\"263\":{\"h\":\"2. 配置\",\"t\":[\"webpack.config.js\",\"const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"dist\\\"), filename: \\\"static/js/main.js\\\", // 将 js 文件输出到 static/js 目录中 clean: true, // 自动将上次打包目录资源清空 }, module: { rules: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: [\\\"style-loader\\\", \\\"css-loader\\\"], }, { test: /\\\\.less$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"less-loader\\\"], }, { test: /\\\\.s[ac]ss$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"sass-loader\\\"], }, { test: /\\\\.styl$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"stylus-loader\\\"], }, { test: /\\\\.(png|jpe?g|gif|webp)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, generator: { // 将图片文件输出到 static/imgs 目录中 // 将图片文件命名 [hash:8][ext][query] // [hash:8]: hash值取8位 // [ext]: 使用之前的文件扩展名 // [query]: 添加之前的query参数 filename: \\\"static/imgs/[hash:8][ext][query]\\\", }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", generator: { filename: \\\"static/media/[hash:8][ext][query]\\\", }, }, { test: /\\\\.js$/, exclude: /node_modules/, // 排除node_modules代码不编译 loader: \\\"babel-loader\\\", }, ], }, plugins: [ new ESLintWebpackPlugin({ // 指定检查文件的根目录 context: path.resolve(__dirname, \\\"src\\\"), }), new HtmlWebpackPlugin({ // 以 public/index.html 为模板创建文件 // 新的html文件有两个特点：1. 内容和源文件一致 2. 自动引入打包生成的js等资源 template: path.resolve(__dirname, \\\"public/index.html\\\"), }), ], mode: \\\"development\\\", }; \"]},\"264\":{\"h\":\"3. 修改 index.html\",\"t\":[\"去掉引入的 js 文件，因为 HtmlWebpackPlugin 会自动引入\",\"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\" /> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\" /> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\" /> <title>webpack5</title> </head> <body> <h1>Hello Webpack5</h1> <div class=\\\"box1\\\"></div> <div class=\\\"box2\\\"></div> <div class=\\\"box3\\\"></div> <div class=\\\"box4\\\"></div> <div class=\\\"box5\\\"></div> <i class=\\\"iconfont icon-arrow-down\\\"></i> <i class=\\\"iconfont icon-ashbin\\\"></i> <i class=\\\"iconfont icon-browse\\\"></i> </body> </html> \"]},\"265\":{\"h\":\"4. 运行指令\",\"t\":[\"npx webpack \",\"此时 dist 目录就会输出一个 index.html 文件\"]},\"266\":{\"h\":\"处理 js 资源\",\"t\":[\"有人可能会问，js 资源 Webpack 不能已经处理了吗，为什么我们还要处理呢？\",\"原因是 Webpack 对 js 处理是有限的，只能编译 js 中 ES 模块化语法，不能编译其他语法，导致 js 不能在 IE 等浏览器运行，所以我们希望做一些兼容性处理。\",\"其次开发中，团队对代码格式是有严格要求的，我们不能由肉眼去检测代码格式，需要使用专业的工具来检测。\",\"针对 js 兼容性处理，我们使用 Babel 来完成\",\"针对代码格式，我们使用 Eslint 来完成\",\"我们先完成 Eslint，检测代码格式无误后，在由 Babel 做代码兼容性处理\"]},\"267\":{\"h\":\"Eslint\",\"t\":[\"可组装的 JavaScript 和 JSX 检查工具。\",\"这句话意思就是：它是用来检测 js 和 jsx 语法的工具，可以配置各项功能\",\"我们使用 Eslint，关键是写 Eslint 配置文件，里面写上各种 rules 规则，将来运行 Eslint 时就会以写的规则对代码进行检查\"]},\"268\":{\"h\":\"1. 配置文件\",\"t\":[\"配置文件由很多种写法：\",\".eslintrc.*：新建文件，位于项目根目录 \",\".eslintrc\",\".eslintrc.js\",\".eslintrc.json\",\"区别在于配置格式不一样\",\"package.json 中 eslintConfig：不需要创建文件，在原有文件基础上写\",\"ESLint 会查找和自动读取它们，所以以上配置文件只需要存在一个即可\"]},\"269\":{\"h\":\"2. 具体配置\",\"t\":[\"我们以 .eslintrc.js 配置文件为例：\",\"module.exports = { // 解析选项 parserOptions: {}, // 具体检查规则 rules: {}, // 继承其他规则 extends: [], // ... // 其他规则详见：https://eslint.bootcss.com/docs/user-guide/configuring }; \",\"parserOptions 解析选项\",\"parserOptions: { ecmaVersion: 6, // ES 语法版本 sourceType: \\\"module\\\", // ES 模块化 ecmaFeatures: { // ES 其他特性 jsx: true // 如果是 React 项目，就需要开启 jsx 语法 } } \",\"rules 具体规则\",\"\\\"off\\\" 或 0 - 关闭规则\",\"\\\"warn\\\" 或 1 - 开启规则，使用警告级别的错误：warn (不会导致程序退出)\",\"\\\"error\\\" 或 2 - 开启规则，使用错误级别的错误：error (当被触发的时候，程序会退出)\",\"rules: { semi: \\\"error\\\", // 禁止使用分号 'array-callback-return': 'warn', // 强制数组方法的回调函数中有 return 语句，否则警告 'default-case': [ 'warn', // 要求 switch 语句中有 default 分支，否则警告 { commentPattern: '^no default$' } // 允许在最后注释 no default, 就不会有警告了 ], eqeqeq: [ 'warn', // 强制使用 === 和 !==，否则警告 'smart' // https://eslint.bootcss.com/docs/rules/eqeqeq#smart 除了少数情况下不会有警告 ], } \",\"更多规则详见：规则文档\",\"extends 继承\",\"开发中一点点写 rules 规则太费劲了，所以有更好的办法，继承现有的规则。\",\"现有以下较为有名的规则：\",\"Eslint 官方的规则：eslint:recommended\",\"Vue Cli 官方的规则：plugin:vue/essential\",\"React Cli 官方的规则：react-app\",\"// 例如在React项目中，我们可以这样写配置 module.exports = { extends: [\\\"react-app\\\"], rules: { // 我们的规则会覆盖掉react-app的规则 // 所以想要修改规则直接改就是了 eqeqeq: [\\\"warn\\\", \\\"smart\\\"], }, }; \"]},\"270\":{\"h\":\"3. 在 Webpack 中使用\",\"t\":[\"下载包\",\"npm i eslint-webpack-plugin eslint -D \",\"定义 Eslint 配置文件\",\".eslintrc.js\",\"module.exports = { // 继承 Eslint 规则 extends: [\\\"eslint:recommended\\\"], env: { node: true, // 启用node中全局变量 browser: true, // 启用浏览器中全局变量 }, parserOptions: { ecmaVersion: 6, sourceType: \\\"module\\\", }, rules: { \\\"no-var\\\": 2, // 不能使用 var 定义变量 }, }; \",\"修改 js 文件代码\",\"main.js\",\"import count from \\\"./js/count\\\"; import sum from \\\"./js/sum\\\"; // 引入资源，Webpack才会对其打包 import \\\"./css/iconfont.css\\\"; import \\\"./css/index.css\\\"; import \\\"./less/index.less\\\"; import \\\"./sass/index.sass\\\"; import \\\"./sass/index.scss\\\"; import \\\"./styl/index.styl\\\"; var result1 = count(2, 1); console.log(result1); var result2 = sum(1, 2, 3, 4); console.log(result2); \",\"配置\",\"webpack.config.js\",\"const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"dist\\\"), filename: \\\"static/js/main.js\\\", // 将 js 文件输出到 static/js 目录中 clean: true, // 自动将上次打包目录资源清空 }, module: { rules: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: [\\\"style-loader\\\", \\\"css-loader\\\"], }, { test: /\\\\.less$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"less-loader\\\"], }, { test: /\\\\.s[ac]ss$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"sass-loader\\\"], }, { test: /\\\\.styl$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"stylus-loader\\\"], }, { test: /\\\\.(png|jpe?g|gif|webp)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, generator: { // 将图片文件输出到 static/imgs 目录中 // 将图片文件命名 [hash:8][ext][query] // [hash:8]: hash值取8位 // [ext]: 使用之前的文件扩展名 // [query]: 添加之前的query参数 filename: \\\"static/imgs/[hash:8][ext][query]\\\", }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", generator: { filename: \\\"static/media/[hash:8][ext][query]\\\", }, }, ], }, plugins: [ new ESLintWebpackPlugin({ // 指定检查文件的根目录 context: path.resolve(__dirname, \\\"src\\\"), }), ], mode: \\\"development\\\", }; \",\"运行指令\",\"npx webpack \",\"在控制台查看 Eslint 检查效果\"]},\"271\":{\"h\":\"4. VSCode Eslint 插件\",\"t\":[\"打开 VSCode，下载 Eslint 插件，即可不用编译就能看到错误，可以提前解决\",\"但是此时就会对项目所有文件默认进行 Eslint 检查了，我们 dist 目录下的打包后文件就会报错。但是我们只需要检查 src 下面的文件，不需要检查 dist 下面的文件。\",\"所以可以使用 Eslint 忽略文件解决。在项目根目录新建下面文件:\",\".eslintignore\",\"# 忽略dist目录下所有文件 dist \"]},\"272\":{\"h\":\"Babel\",\"t\":[\"JavaScript 编译器。\",\"主要用于将 ES6 语法编写的代码转换为向后兼容的 JavaScript 语法，以便能够运行在当前和旧版本的浏览器或其他环境中\"]},\"273\":{\"h\":\"1. 配置文件\",\"t\":[\"配置文件由很多种写法：\",\"babel.config.*：新建文件，位于项目根目录 \",\"babel.config.js\",\"babel.config.json\",\".babelrc.*：新建文件，位于项目根目录 \",\".babelrc\",\".babelrc.js\",\".babelrc.json\",\"package.json 中 babel：不需要创建文件，在原有文件基础上写\",\"Babel 会查找和自动读取它们，所以以上配置文件只需要存在一个即可\"]},\"274\":{\"h\":\"2. 具体配置\",\"t\":[\"我们以 babel.config.js 配置文件为例：\",\"module.exports = { // 预设 presets: [], }; \",\"presets 预设\",\"简单理解：就是一组 Babel 插件, 扩展 Babel 功能\",\"@babel/preset-env: 一个智能预设，允许您使用最新的 JavaScript。\",\"@babel/preset-react：一个用来编译 React jsx 语法的预设\",\"@babel/preset-typescript：一个用来编译 TypeScript 语法的预设\"]},\"275\":{\"h\":\"3. 在 Webpack 中使用\",\"t\":[\"下载包\",\"npm i babel-loader @babel/core @babel/preset-env -D \",\"定义 Babel 配置文件\",\"babel.config.js\",\"module.exports = { presets: [\\\"@babel/preset-env\\\"], }; \",\"修改 js 文件代码\",\"main.js\",\"import count from \\\"./js/count\\\"; import sum from \\\"./js/sum\\\"; // 引入资源，Webpack才会对其打包 import \\\"./css/iconfont.css\\\"; import \\\"./css/index.css\\\"; import \\\"./less/index.less\\\"; import \\\"./sass/index.sass\\\"; import \\\"./sass/index.scss\\\"; import \\\"./styl/index.styl\\\"; const result1 = count(2, 1); console.log(result1); const result2 = sum(1, 2, 3, 4); console.log(result2); \",\"配置\",\"webpack.config.js\",\"const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"dist\\\"), filename: \\\"static/js/main.js\\\", // 将 js 文件输出到 static/js 目录中 clean: true, // 自动将上次打包目录资源清空 }, module: { rules: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: [\\\"style-loader\\\", \\\"css-loader\\\"], }, { test: /\\\\.less$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"less-loader\\\"], }, { test: /\\\\.s[ac]ss$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"sass-loader\\\"], }, { test: /\\\\.styl$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"stylus-loader\\\"], }, { test: /\\\\.(png|jpe?g|gif|webp)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, generator: { // 将图片文件输出到 static/imgs 目录中 // 将图片文件命名 [hash:8][ext][query] // [hash:8]: hash值取8位 // [ext]: 使用之前的文件扩展名 // [query]: 添加之前的query参数 filename: \\\"static/imgs/[hash:8][ext][query]\\\", }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", generator: { filename: \\\"static/media/[hash:8][ext][query]\\\", }, }, { test: /\\\\.js$/, exclude: /node_modules/, // 排除node_modules代码不编译 loader: \\\"babel-loader\\\", }, ], }, plugins: [ new ESLintWebpackPlugin({ // 指定检查文件的根目录 context: path.resolve(__dirname, \\\"src\\\"), }), ], mode: \\\"development\\\", }; \",\"运行指令\",\"npx webpack \",\"打开打包后的 dist/static/js/main.js 文件查看，会发现箭头函数等 ES6 语法已经转换了\"]},\"276\":{\"h\":\"处理其他资源\",\"t\":[\"开发中可能还存在一些其他资源，如音视频等，我们也一起处理了\"]},\"277\":{\"h\":\"1. 配置\",\"t\":[\"const path = require(\\\"path\\\"); module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"dist\\\"), filename: \\\"static/js/main.js\\\", // 将 js 文件输出到 static/js 目录中 clean: true, // 自动将上次打包目录资源清空 }, module: { rules: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: [\\\"style-loader\\\", \\\"css-loader\\\"], }, { test: /\\\\.less$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"less-loader\\\"], }, { test: /\\\\.s[ac]ss$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"sass-loader\\\"], }, { test: /\\\\.styl$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"stylus-loader\\\"], }, { test: /\\\\.(png|jpe?g|gif|webp)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, generator: { // 将图片文件输出到 static/imgs 目录中 // 将图片文件命名 [hash:8][ext][query] // [hash:8]: hash值取8位 // [ext]: 使用之前的文件扩展名 // [query]: 添加之前的query参数 filename: \\\"static/imgs/[hash:8][ext][query]\\\", }, }, { test: /\\\\.(ttf|woff2?|map4|map3|avi)$/, type: \\\"asset/resource\\\", generator: { filename: \\\"static/media/[hash:8][ext][query]\\\", }, }, ], }, plugins: [], mode: \\\"development\\\", }; \",\"就是在处理字体图标资源基础上增加其他文件类型，统一处理即可\"]},\"278\":{\"h\":\"2. 运行指令\",\"t\":[\"npx webpack \",\"打开 index.html 页面查看效果\"]},\"279\":{\"h\":\"处理图片资源\",\"t\":[\"过去在 Webpack4 时，我们处理图片资源通过 file-loader 和 url-loader 进行处理\",\"现在 Webpack5 已经将两个 Loader 功能内置到 Webpack 里了，我们只需要简单配置即可处理图片资源\"]},\"280\":{\"h\":\"1. 配置\",\"t\":[\"const path = require(\\\"path\\\"); module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"dist\\\"), filename: \\\"main.js\\\", }, module: { rules: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: [\\\"style-loader\\\", \\\"css-loader\\\"], }, { test: /\\\\.less$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"less-loader\\\"], }, { test: /\\\\.s[ac]ss$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"sass-loader\\\"], }, { test: /\\\\.styl$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"stylus-loader\\\"], }, { test: /\\\\.(png|jpe?g|gif|webp)$/, type: \\\"asset\\\", }, ], }, plugins: [], mode: \\\"development\\\", }; \"]},\"281\":{\"h\":\"2. 添加图片资源\",\"t\":[\"src/images/1.jpeg\",\"src/images/2.png\",\"src/images/3.gif\"]},\"282\":{\"h\":\"3. 使用图片资源\",\"t\":[\"src/less/index.less\",\".box2 { width: 100px; height: 100px; background-image: url(\\\"../images/1.jpeg\\\"); background-size: cover; } \",\"src/sass/index.sass\",\".box3 width: 100px height: 100px background-image: url(\\\"../images/2.png\\\") background-size: cover \",\"src/styl/index.styl\",\".box5 width 100px height 100px background-image url(\\\"../images/3.gif\\\") background-size cover \"]},\"283\":{\"h\":\"4. 运行指令\",\"t\":[\"npx webpack \",\"打开 index.html 页面查看效果\"]},\"284\":{\"h\":\"5. 输出资源情况\",\"t\":[\"此时如果查看 dist 目录的话，会发现多了三张图片资源\",\"因为 Webpack 会将所有打包好的资源输出到 dist 目录下\",\"为什么样式资源没有呢？\",\"因为经过 style-loader 的处理，样式资源打包到 main.js 里面去了，所以没有额外输出出来\"]},\"285\":{\"h\":\"6. 对图片资源进行优化\",\"t\":[\"将小于某个大小的图片转化成 data URI 形式（Base64 格式）\",\"const path = require(\\\"path\\\"); module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"dist\\\"), filename: \\\"main.js\\\", }, module: { rules: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: [\\\"style-loader\\\", \\\"css-loader\\\"], }, { test: /\\\\.less$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"less-loader\\\"], }, { test: /\\\\.s[ac]ss$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"sass-loader\\\"], }, { test: /\\\\.styl$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"stylus-loader\\\"], }, { test: /\\\\.(png|jpe?g|gif|webp)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024 // 小于10kb的图片会被base64处理 } } }, ], }, plugins: [], mode: \\\"development\\\", }; \",\"优点：减少请求数量\",\"缺点：体积变得更大\",\"此时输出的图片文件就只有两张，有一张图片以 data URI 形式内置到 js 中了 （注意：需要将上次打包生成的文件清空，再重新打包才有效果）\"]},\"286\":{\"h\":\"例子\",\"t\":[\"4.demo\"]},\"287\":{\"h\":\"处理字体图标资源\"},\"288\":{\"h\":\"1. 下载字体图标文件\",\"t\":[\"打开阿里巴巴矢量图标库\",\"选择想要的图标添加到购物车，统一下载到本地\"]},\"289\":{\"h\":\"2. 添加字体图标资源\",\"t\":[\"src/fonts/iconfont.ttf\",\"src/fonts/iconfont.woff\",\"src/fonts/iconfont.woff2\",\"src/css/iconfont.css\",\"注意字体文件路径需要修改\",\"src/main.js\",\"import { add } from \\\"./math\\\"; import count from \\\"./js/count\\\"; import sum from \\\"./js/sum\\\"; // 引入资源，Webpack才会对其打包 import \\\"./css/iconfont.css\\\"; import \\\"./css/index.css\\\"; import \\\"./less/index.less\\\"; import \\\"./sass/index.sass\\\"; import \\\"./sass/index.scss\\\"; import \\\"./styl/index.styl\\\"; console.log(count(2, 1)); console.log(sum(1, 2, 3, 4)); \",\"public/index.html\",\"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\" /> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\" /> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\" /> <title>webpack5</title> </head> <body> <h1>Hello Webpack5</h1> <div class=\\\"box1\\\"></div> <div class=\\\"box2\\\"></div> <div class=\\\"box3\\\"></div> <div class=\\\"box4\\\"></div> <div class=\\\"box5\\\"></div> <!-- 使用字体图标 --> <i class=\\\"iconfont icon-arrow-down\\\"></i> <i class=\\\"iconfont icon-ashbin\\\"></i> <i class=\\\"iconfont icon-browse\\\"></i> <script src=\\\"../dist/static/js/main.js\\\"></script> </body> </html> \"]},\"290\":{\"h\":\"3. 配置\",\"t\":[\"const path = require(\\\"path\\\"); module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"dist\\\"), filename: \\\"static/js/main.js\\\", // 将 js 文件输出到 static/js 目录中 clean: true, // 自动将上次打包目录资源清空 }, module: { rules: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: [\\\"style-loader\\\", \\\"css-loader\\\"], }, { test: /\\\\.less$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"less-loader\\\"], }, { test: /\\\\.s[ac]ss$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"sass-loader\\\"], }, { test: /\\\\.styl$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"stylus-loader\\\"], }, { test: /\\\\.(png|jpe?g|gif|webp)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, generator: { // 将图片文件输出到 static/imgs 目录中 // 将图片文件命名 [hash:8][ext][query] // [hash:8]: hash值取8位 // [ext]: 使用之前的文件扩展名 // [query]: 添加之前的query参数 filename: \\\"static/imgs/[hash:8][ext][query]\\\", }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", generator: { filename: \\\"static/media/[hash:8][ext][query]\\\", }, }, ], }, plugins: [], mode: \\\"development\\\", }; \",\"type: \\\"asset/resource\\\"和type: \\\"asset\\\"的区别：\",\"type: \\\"asset/resource\\\" 相当于file-loader, 将文件转化成 Webpack 能识别的资源，其他不做处理\",\"type: \\\"asset\\\" 相当于url-loader, 将文件转化成 Webpack 能识别的资源，同时小于某个大小的资源会处理成 data URI 形式\"]},\"291\":{\"h\":\"4. 运行指令\",\"t\":[\"npx webpack \",\"打开 index.html 页面查看效果\"]},\"292\":{\"h\":\"处理样式资源\",\"t\":[\"本章节我们学习使用 Webpack 如何处理 Css、Less、Sass、Scss、Styl 样式资源\"]},\"293\":{\"h\":\"介绍\",\"t\":[\"Webpack 本身是不能识别样式资源的，所以我们需要借助 Loader 来帮助 Webpack 解析样式资源\",\"我们找 Loader 都应该去官方文档中找到对应的 Loader，然后使用\",\"官方文档找不到的话，可以从社区 Github 中搜索查询\",\"Webpack 官方 Loader 文档\"]},\"294\":{\"h\":\"处理 Css 资源\"},\"295\":{\"h\":\"1. 下载包\",\"t\":[\"npm i css-loader style-loader -D \",\"注意：需要下载两个 loader\"]},\"296\":{\"h\":\"2. 功能介绍\",\"t\":[\"css-loader：负责将 Css 文件编译成 Webpack 能识别的模块\",\"style-loader：会动态创建一个 Style 标签，里面放置 Webpack 中 Css 模块内容\",\"此时样式就会以 Style 标签的形式在页面上生效\"]},\"297\":{\"h\":\"3. 配置\",\"t\":[\"const path = require(\\\"path\\\"); module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"dist\\\"), filename: \\\"main.js\\\", }, module: { rules: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: [\\\"style-loader\\\", \\\"css-loader\\\"], }, ], }, plugins: [], mode: \\\"development\\\", }; \"]},\"298\":{\"h\":\"4. 添加 Css 资源\",\"t\":[\"src/css/index.css\",\".box1 { width: 100px; height: 100px; background-color: pink; } \",\"src/main.js\",\"import count from \\\"./js/count\\\"; import sum from \\\"./js/sum\\\"; // 引入 Css 资源，Webpack才会对其打包 import \\\"./css/index.css\\\"; console.log(count(2, 1)); console.log(sum(1, 2, 3, 4)); \",\"public/index.html\",\"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\" /> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\" /> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\" /> <title>webpack5</title> </head> <body> <h1>Hello Webpack5</h1> <!-- 准备一个使用样式的 DOM 容器 --> <div class=\\\"box1\\\"></div> <!-- 引入打包后的js文件，才能看到效果 --> <script src=\\\"../dist/main.js\\\"></script> </body> </html> \"]},\"299\":{\"h\":\"5. 运行指令\",\"t\":[\"npx webpack \",\"打开 index.html 页面查看效果\"]},\"300\":{\"h\":\"处理 Less 资源\"},\"301\":{\"h\":\"1. 下载包\",\"t\":[\"npm i less-loader -D \"]},\"302\":{\"h\":\"2. 功能介绍\",\"t\":[\"less-loader：负责将 Less 文件编译成 Css 文件\"]},\"303\":{\"h\":\"3. 配置\",\"t\":[\"const path = require(\\\"path\\\"); module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"dist\\\"), filename: \\\"main.js\\\", }, module: { rules: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: [\\\"style-loader\\\", \\\"css-loader\\\"], }, { test: /\\\\.less$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"less-loader\\\"], }, ], }, plugins: [], mode: \\\"development\\\", }; \"]},\"304\":{\"h\":\"4. 添加 Less 资源\",\"t\":[\"src/less/index.less\",\".box2 { width: 100px; height: 100px; background-color: deeppink; } \",\"src/main.js\",\"import count from \\\"./js/count\\\"; import sum from \\\"./js/sum\\\"; // 引入资源，Webpack才会对其打包 import \\\"./css/index.css\\\"; import \\\"./less/index.less\\\"; console.log(count(2, 1)); console.log(sum(1, 2, 3, 4)); \",\"public/index.html\",\"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\" /> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\" /> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\" /> <title>webpack5</title> </head> <body> <h1>Hello Webpack5</h1> <div class=\\\"box1\\\"></div> <div class=\\\"box2\\\"></div> <script src=\\\"../dist/main.js\\\"></script> </body> </html> \"]},\"305\":{\"h\":\"5. 运行指令\",\"t\":[\"npx webpack \",\"打开 index.html 页面查看效果\"]},\"306\":{\"h\":\"处理 Sass 和 Scss 资源\"},\"307\":{\"h\":\"1. 下载包\",\"t\":[\"npm i sass-loader sass -D \",\"注意：需要下载两个\"]},\"308\":{\"h\":\"2. 功能介绍\",\"t\":[\"sass-loader：负责将 Sass 文件编译成 css 文件\",\"sass：sass-loader 依赖 sass 进行编译\"]},\"309\":{\"h\":\"3. 配置\",\"t\":[\"const path = require(\\\"path\\\"); module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"dist\\\"), filename: \\\"main.js\\\", }, module: { rules: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: [\\\"style-loader\\\", \\\"css-loader\\\"], }, { test: /\\\\.less$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"less-loader\\\"], }, { test: /\\\\.s[ac]ss$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"sass-loader\\\"], }, ], }, plugins: [], mode: \\\"development\\\", }; \"]},\"310\":{\"h\":\"4. 添加 Sass 资源\",\"t\":[\"src/sass/index.sass\",\"/* 可以省略大括号和分号 */ .box3 width: 100px height: 100px background-color: hotpink \",\"src/sass/index.scss\",\".box4 { width: 100px; height: 100px; background-color: lightpink; } \",\"src/main.js\",\"import count from \\\"./js/count\\\"; import sum from \\\"./js/sum\\\"; // 引入资源，Webpack才会对其打包 import \\\"./css/index.css\\\"; import \\\"./less/index.less\\\"; import \\\"./sass/index.sass\\\"; import \\\"./sass/index.scss\\\"; console.log(count(2, 1)); console.log(sum(1, 2, 3, 4)); \",\"public/index.html\",\"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\" /> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\" /> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\" /> <title>webpack5</title> </head> <body> <h1>Hello Webpack5</h1> <div class=\\\"box1\\\"></div> <div class=\\\"box2\\\"></div> <div class=\\\"box3\\\"></div> <div class=\\\"box4\\\"></div> <script src=\\\"../dist/main.js\\\"></script> </body> </html> \"]},\"311\":{\"h\":\"5. 运行指令\",\"t\":[\"npx webpack \",\"打开 index.html 页面查看效果\"]},\"312\":{\"h\":\"处理 Styl 资源\"},\"313\":{\"h\":\"1. 下载包\",\"t\":[\"npm i stylus-loader -D \"]},\"314\":{\"h\":\"2. 功能介绍\",\"t\":[\"stylus-loader：负责将 Styl 文件编译成 Css 文件\"]},\"315\":{\"h\":\"3. 配置\",\"t\":[\"const path = require(\\\"path\\\"); module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"dist\\\"), filename: \\\"main.js\\\", }, module: { rules: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: [\\\"style-loader\\\", \\\"css-loader\\\"], }, { test: /\\\\.less$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"less-loader\\\"], }, { test: /\\\\.s[ac]ss$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"sass-loader\\\"], }, { test: /\\\\.styl$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"stylus-loader\\\"], }, ], }, plugins: [], mode: \\\"development\\\", }; \"]},\"316\":{\"h\":\"4. 添加 Styl 资源\",\"t\":[\"src/styl/index.styl\",\"/* 可以省略大括号、分号、冒号 */ .box width 100px height 100px background-color pink \",\"src/main.js\",\"import { add } from \\\"./math\\\"; import count from \\\"./js/count\\\"; import sum from \\\"./js/sum\\\"; // 引入资源，Webpack才会对其打包 import \\\"./css/index.css\\\"; import \\\"./less/index.less\\\"; import \\\"./sass/index.sass\\\"; import \\\"./sass/index.scss\\\"; import \\\"./styl/index.styl\\\"; console.log(count(2, 1)); console.log(sum(1, 2, 3, 4)); \",\"public/index.html\",\"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\" /> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\" /> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\" /> <title>webpack5</title> </head> <body> <h1>Hello Webpack5</h1> <!-- 准备一个使用样式的 DOM 容器 --> <div class=\\\"box1\\\"></div> <div class=\\\"box2\\\"></div> <div class=\\\"box3\\\"></div> <div class=\\\"box4\\\"></div> <div class=\\\"box5\\\"></div> <script src=\\\"../dist/main.js\\\"></script> </body> </html> \"]},\"317\":{\"h\":\"5. 运行指令\",\"t\":[\"npx webpack \",\"打开 index.html 页面查看效果\"]},\"318\":{\"h\":\"例子\",\"t\":[\"3.demo\"]},\"319\":{\"h\":\"开发服务器&自动化\",\"t\":[\"每次写完代码都需要手动输入指令才能编译代码，太麻烦了，我们希望一切自动化\"]},\"320\":{\"h\":\"1. 下载包\",\"t\":[\"npm i webpack-dev-server -D \"]},\"321\":{\"h\":\"2. 配置\",\"t\":[\"webpack.config.js\",\"const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"dist\\\"), filename: \\\"static/js/main.js\\\", // 将 js 文件输出到 static/js 目录中 clean: true, // 自动将上次打包目录资源清空 }, module: { rules: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: [\\\"style-loader\\\", \\\"css-loader\\\"], }, { test: /\\\\.less$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"less-loader\\\"], }, { test: /\\\\.s[ac]ss$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"sass-loader\\\"], }, { test: /\\\\.styl$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"stylus-loader\\\"], }, { test: /\\\\.(png|jpe?g|gif|webp)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, generator: { // 将图片文件输出到 static/imgs 目录中 // 将图片文件命名 [hash:8][ext][query] // [hash:8]: hash值取8位 // [ext]: 使用之前的文件扩展名 // [query]: 添加之前的query参数 filename: \\\"static/imgs/[hash:8][ext][query]\\\", }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", generator: { filename: \\\"static/media/[hash:8][ext][query]\\\", }, }, { test: /\\\\.js$/, exclude: /node_modules/, // 排除node_modules代码不编译 loader: \\\"babel-loader\\\", }, ], }, plugins: [ new ESLintWebpackPlugin({ // 指定检查文件的根目录 context: path.resolve(__dirname, \\\"src\\\"), }), new HtmlWebpackPlugin({ // 以 public/index.html 为模板创建文件 // 新的html文件有两个特点：1. 内容和源文件一致 2. 自动引入打包生成的js等资源 template: path.resolve(__dirname, \\\"public/index.html\\\"), }), ], // 开发服务器 devServer: { host: \\\"localhost\\\", // 启动服务器域名 port: \\\"3000\\\", // 启动服务器端口号 open: true, // 是否自动打开浏览器 }, mode: \\\"development\\\", }; \"]},\"322\":{\"h\":\"3. 运行指令\",\"t\":[\"npx webpack serve \",\"注意运行指令发生了变化\",\"并且当你使用开发服务器时，所有代码都会在内存中编译打包，并不会输出到 dist 目录下。\",\"开发时我们只关心代码能运行，有效果即可，至于代码被编译成什么样子，我们并不需要知道。\"]},\"323\":{\"h\":\"例子\",\"t\":[\"6.demo\"]},\"324\":{\"h\":\"开发模式介绍\",\"t\":[\"开发模式顾名思义就是我们开发代码时使用的模式。\",\"这个模式下我们主要做两件事：\",\"编译代码，使浏览器能识别运行\",\"开发时我们有样式资源、字体图标、图片资源、html 资源等，webpack 默认都不能处理这些资源，所以我们要加载配置来编译这些资源\",\"代码质量检查，树立代码规范\",\"提前检查代码的一些隐患，让代码运行时能更加健壮。\",\"提前检查代码规范和格式，统一团队编码风格，让代码更优雅美观。\"]},\"325\":{\"h\":\"总结\",\"t\":[\"本章节我们学会了 Webpack 基本使用，掌握了以下功能：\",\"两种开发模式\",\"开发模式：代码能编译自动化运行\",\"生产模式：代码编译优化输出\",\"Webpack 基本功能\",\"开发模式：可以编译 ES Module 语法\",\"生产模式：可以编译 ES Module 语法，压缩 js 代码\",\"Webpack 配置文件\",\"5 个核心概念 \",\"entry\",\"output\",\"loader\",\"plugins\",\"mode\",\"devServer 配置\",\"Webpack 脚本指令用法\",\"webpack 直接打包输出\",\"webpack serve 启动开发服务器，内存编译打包没有输出\"]},\"326\":{\"h\":\"生产模式介绍\",\"t\":[\"生产模式是开发完成代码后，我们需要得到代码将来部署上线。\",\"这个模式下我们主要对代码进行优化，让其运行性能更好。\",\"优化主要从两个角度出发:\",\"优化代码运行性能\",\"优化代码打包速度\"]},\"327\":{\"h\":\"生产模式准备\",\"t\":[\"我们分别准备两个配置文件来放不同的配置\"]},\"328\":{\"h\":\"1. 文件目录\",\"t\":[\"├── webpack-test (项目根目录) ├── config (Webpack配置文件目录) │ ├── webpack.dev.js(开发模式配置文件) │ └── webpack.prod.js(生产模式配置文件) ├── node_modules (下载包存放目录) ├── src (项目源码目录，除了html其他都在src里面) │ └── 略 ├── public (项目html文件) │ └── index.html ├── .eslintrc.js(Eslint配置文件) ├── babel.config.js(Babel配置文件) └── package.json (包的依赖管理配置文件) \"]},\"329\":{\"h\":\"2. 修改 webpack.dev.js\",\"t\":[\"因为文件目录变了，所以所有绝对路径需要回退一层目录才能找到对应的文件\",\"const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); module.exports = { entry: \\\"./src/main.js\\\", output: { path: undefined, // 开发模式没有输出，不需要指定输出目录 filename: \\\"static/js/main.js\\\", // 将 js 文件输出到 static/js 目录中 // clean: true, // 开发模式没有输出，不需要清空输出结果 }, module: { rules: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: [\\\"style-loader\\\", \\\"css-loader\\\"], }, { test: /\\\\.less$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"less-loader\\\"], }, { test: /\\\\.s[ac]ss$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"sass-loader\\\"], }, { test: /\\\\.styl$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"stylus-loader\\\"], }, { test: /\\\\.(png|jpe?g|gif|webp)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, generator: { // 将图片文件输出到 static/imgs 目录中 // 将图片文件命名 [hash:8][ext][query] // [hash:8]: hash值取8位 // [ext]: 使用之前的文件扩展名 // [query]: 添加之前的query参数 filename: \\\"static/imgs/[hash:8][ext][query]\\\", }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", generator: { filename: \\\"static/media/[hash:8][ext][query]\\\", }, }, { test: /\\\\.js$/, exclude: /node_modules/, // 排除node_modules代码不编译 loader: \\\"babel-loader\\\", }, ], }, plugins: [ new ESLintWebpackPlugin({ // 指定检查文件的根目录 context: path.resolve(__dirname, \\\"../src\\\"), }), new HtmlWebpackPlugin({ // 以 public/index.html 为模板创建文件 // 新的html文件有两个特点：1. 内容和源文件一致 2. 自动引入打包生成的js等资源 template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), ], // 其他省略 devServer: { host: \\\"localhost\\\", // 启动服务器域名 port: \\\"3000\\\", // 启动服务器端口号 open: true, // 是否自动打开浏览器 }, mode: \\\"development\\\", }; \",\"运行开发模式的指令：\",\"npx webpack serve --config ./config/webpack.dev.js \"]},\"330\":{\"h\":\"3. 修改 webpack.prod.js\",\"t\":[\"const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"../dist\\\"), // 生产模式需要输出 filename: \\\"static/js/main.js\\\", // 将 js 文件输出到 static/js 目录中 clean: true, }, module: { rules: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: [\\\"style-loader\\\", \\\"css-loader\\\"], }, { test: /\\\\.less$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"less-loader\\\"], }, { test: /\\\\.s[ac]ss$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"sass-loader\\\"], }, { test: /\\\\.styl$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"stylus-loader\\\"], }, { test: /\\\\.(png|jpe?g|gif|webp)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, generator: { // 将图片文件输出到 static/imgs 目录中 // 将图片文件命名 [hash:8][ext][query] // [hash:8]: hash值取8位 // [ext]: 使用之前的文件扩展名 // [query]: 添加之前的query参数 filename: \\\"static/imgs/[hash:8][ext][query]\\\", }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", generator: { filename: \\\"static/media/[hash:8][ext][query]\\\", }, }, { test: /\\\\.js$/, exclude: /node_modules/, // 排除node_modules代码不编译 loader: \\\"babel-loader\\\", }, ], }, plugins: [ new ESLintWebpackPlugin({ // 指定检查文件的根目录 context: path.resolve(__dirname, \\\"../src\\\"), }), new HtmlWebpackPlugin({ // 以 public/index.html 为模板创建文件 // 新的html文件有两个特点：1. 内容和源文件一致 2. 自动引入打包生成的js等资源 template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), ], // devServer: { // host: \\\"localhost\\\", // 启动服务器域名 // port: \\\"3000\\\", // 启动服务器端口号 // open: true, // 是否自动打开浏览器 // }, mode: \\\"production\\\", }; \",\"运行生产模式的指令：\",\"npx webpack --config ./config/webpack.prod.js \"]},\"331\":{\"h\":\"4. 配置运行指令\",\"t\":[\"为了方便运行不同模式的指令，我们将指令定义在 package.json 中 scripts 里面\",\"// package.json { // 其他省略 \\\"scripts\\\": { \\\"start\\\": \\\"npm run dev\\\", \\\"dev\\\": \\\"npx webpack serve --config ./config/webpack.dev.js\\\", \\\"build\\\": \\\"npx webpack --config ./config/webpack.prod.js\\\" } } \",\"以后启动指令：\",\"开发模式：npm start 或 npm run dev\",\"生产模式：npm run build\"]},\"332\":{\"h\":\"例子\",\"t\":[\"7.demo\"]},\"333\":{\"h\":\"自动清空上次打包资源\"},\"334\":{\"h\":\"1. 配置\",\"t\":[\"const path = require(\\\"path\\\"); module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"dist\\\"), filename: \\\"static/js/main.js\\\", clean: true, // 自动将上次打包目录资源清空 }, module: { rules: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: [\\\"style-loader\\\", \\\"css-loader\\\"], }, { test: /\\\\.less$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"less-loader\\\"], }, { test: /\\\\.s[ac]ss$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"sass-loader\\\"], }, { test: /\\\\.styl$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"stylus-loader\\\"], }, { test: /\\\\.(png|jpe?g|gif|webp)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 40 * 1024, // 小于40kb的图片会被base64处理 }, }, generator: { // 将图片文件输出到 static/imgs 目录中 // 将图片文件命名 [hash:8][ext][query] // [hash:8]: hash值取8位 // [ext]: 使用之前的文件扩展名 // [query]: 添加之前的query参数 filename: \\\"static/imgs/[hash:8][ext][query]\\\", }, }, { test: /\\\\.(ttf|woff2?|map4|map3|avi)$/, type: \\\"asset/resource\\\", generator: { filename: \\\"static/media/[hash:8][ext][query]\\\", }, }, ], }, plugins: [], mode: \\\"development\\\", }; \"]},\"335\":{\"h\":\"2. 运行指令\",\"t\":[\"npx webpack \",\"观察 dist 目录资源情况\"]},\"336\":{\"h\":\"React 脚手架\"},\"337\":{\"h\":\"开发模式配置\",\"t\":[\"// webpack.dev.js const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); const ReactRefreshWebpackPlugin = require(\\\"@pmmmwh/react-refresh-webpack-plugin\\\"); const CopyPlugin = require(\\\"copy-webpack-plugin\\\"); const getStyleLoaders = (preProcessor) => { return [ \\\"style-loader\\\", \\\"css-loader\\\", { loader: \\\"postcss-loader\\\", options: { postcssOptions: { plugins: [ \\\"postcss-preset-env\\\", // 能解决大多数样式兼容性问题 ], }, }, }, preProcessor, ].filter(Boolean); }; module.exports = { entry: \\\"./src/main.js\\\", output: { path: undefined, filename: \\\"static/js/[name].js\\\", chunkFilename: \\\"static/js/[name].chunk.js\\\", assetModuleFilename: \\\"static/js/[hash:10][ext][query]\\\", }, module: { rules: [ { oneOf: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: getStyleLoaders(), }, { test: /\\\\.less$/, use: getStyleLoaders(\\\"less-loader\\\"), }, { test: /\\\\.s[ac]ss$/, use: getStyleLoaders(\\\"sass-loader\\\"), }, { test: /\\\\.styl$/, use: getStyleLoaders(\\\"stylus-loader\\\"), }, { test: /\\\\.(png|jpe?g|gif|svg)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", }, { test: /\\\\.(jsx|js)$/, include: path.resolve(__dirname, \\\"../src\\\"), loader: \\\"babel-loader\\\", options: { cacheDirectory: true, cacheCompression: false, plugins: [ // \\\"@babel/plugin-transform-runtime\\\", // presets中包含了 \\\"react-refresh/babel\\\", // 开启js的HMR功能 ], }, }, ], }, ], }, plugins: [ new ESLintWebpackPlugin({ context: path.resolve(__dirname, \\\"../src\\\"), exclude: \\\"node_modules\\\", cache: true, cacheLocation: path.resolve( __dirname, \\\"../node_modules/.cache/.eslintcache\\\" ), }), new HtmlWebpackPlugin({ template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), new ReactRefreshWebpackPlugin(), // 解决js的HMR功能运行时全局变量的问题 // 将public下面的资源复制到dist目录去（除了index.html） new CopyPlugin({ patterns: [ { from: path.resolve(__dirname, \\\"../public\\\"), to: path.resolve(__dirname, \\\"../dist\\\"), toType: \\\"dir\\\", noErrorOnMissing: true, // 不生成错误 globOptions: { // 忽略文件 ignore: [\\\"**/index.html\\\"], }, info: { // 跳过terser压缩js minimized: true, }, }, ], }), ], optimization: { splitChunks: { chunks: \\\"all\\\", }, runtimeChunk: { name: (entrypoint) => `runtime~${entrypoint.name}`, }, }, resolve: { extensions: [\\\".jsx\\\", \\\".js\\\", \\\".json\\\"], // 自动补全文件扩展名，让jsx可以使用 }, devServer: { open: true, host: \\\"localhost\\\", port: 3000, hot: true, compress: true, historyApiFallback: true, // 解决react-router刷新404问题 }, mode: \\\"development\\\", devtool: \\\"cheap-module-source-map\\\", }; \"]},\"338\":{\"h\":\"生产模式配置\",\"t\":[\"// webpack.prod.js const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); const MiniCssExtractPlugin = require(\\\"mini-css-extract-plugin\\\"); const TerserWebpackPlugin = require(\\\"terser-webpack-plugin\\\"); const CssMinimizerPlugin = require(\\\"css-minimizer-webpack-plugin\\\"); const ImageMinimizerPlugin = require(\\\"image-minimizer-webpack-plugin\\\"); const CopyPlugin = require(\\\"copy-webpack-plugin\\\"); const getStyleLoaders = (preProcessor) => { return [ MiniCssExtractPlugin.loader, \\\"css-loader\\\", { loader: \\\"postcss-loader\\\", options: { postcssOptions: { plugins: [ \\\"postcss-preset-env\\\", // 能解决大多数样式兼容性问题 ], }, }, }, preProcessor, ].filter(Boolean); }; module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"../dist\\\"), filename: \\\"static/js/[name].[contenthash:10].js\\\", chunkFilename: \\\"static/js/[name].[contenthash:10].chunk.js\\\", assetModuleFilename: \\\"static/js/[hash:10][ext][query]\\\", clean: true, }, module: { rules: [ { oneOf: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: getStyleLoaders(), }, { test: /\\\\.less$/, use: getStyleLoaders(\\\"less-loader\\\"), }, { test: /\\\\.s[ac]ss$/, use: getStyleLoaders(\\\"sass-loader\\\"), }, { test: /\\\\.styl$/, use: getStyleLoaders(\\\"stylus-loader\\\"), }, { test: /\\\\.(png|jpe?g|gif|svg)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", }, { test: /\\\\.(jsx|js)$/, include: path.resolve(__dirname, \\\"../src\\\"), loader: \\\"babel-loader\\\", options: { cacheDirectory: true, cacheCompression: false, plugins: [ // \\\"@babel/plugin-transform-runtime\\\" // presets中包含了 ], }, }, ], }, ], }, plugins: [ new ESLintWebpackPlugin({ context: path.resolve(__dirname, \\\"../src\\\"), exclude: \\\"node_modules\\\", cache: true, cacheLocation: path.resolve( __dirname, \\\"../node_modules/.cache/.eslintcache\\\" ), }), new HtmlWebpackPlugin({ template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), new MiniCssExtractPlugin({ filename: \\\"static/css/[name].[contenthash:10].css\\\", chunkFilename: \\\"static/css/[name].[contenthash:10].chunk.css\\\", }), // 将public下面的资源复制到dist目录去（除了index.html） new CopyPlugin({ patterns: [ { from: path.resolve(__dirname, \\\"../public\\\"), to: path.resolve(__dirname, \\\"../dist\\\"), toType: \\\"dir\\\", noErrorOnMissing: true, // 不生成错误 globOptions: { // 忽略文件 ignore: [\\\"**/index.html\\\"], }, info: { // 跳过terser压缩js minimized: true, }, }, ], }), ], optimization: { // 压缩的操作 minimizer: [ new CssMinimizerPlugin(), new TerserWebpackPlugin(), new ImageMinimizerPlugin({ minimizer: { implementation: ImageMinimizerPlugin.imageminGenerate, options: { plugins: [ [\\\"gifsicle\\\", { interlaced: true }], [\\\"jpegtran\\\", { progressive: true }], [\\\"optipng\\\", { optimizationLevel: 5 }], [ \\\"svgo\\\", { plugins: [ \\\"preset-default\\\", \\\"prefixIds\\\", { name: \\\"sortAttrs\\\", params: { xmlnsOrder: \\\"alphabetical\\\", }, }, ], }, ], ], }, }, }), ], splitChunks: { chunks: \\\"all\\\", }, runtimeChunk: { name: (entrypoint) => `runtime~${entrypoint.name}`, }, }, resolve: { extensions: [\\\".jsx\\\", \\\".js\\\", \\\".json\\\"], }, mode: \\\"production\\\", devtool: \\\"source-map\\\", }; \"]},\"339\":{\"h\":\"其他配置\",\"t\":[\"package.json\",\"{ \\\"name\\\": \\\"react-cli\\\", \\\"version\\\": \\\"1.0.0\\\", \\\"description\\\": \\\"\\\", \\\"main\\\": \\\"index.js\\\", \\\"scripts\\\": { \\\"start\\\": \\\"npm run dev\\\", \\\"dev\\\": \\\"cross-env NODE_ENV=development webpack serve --config ./config/webpack.dev.js\\\", \\\"build\\\": \\\"cross-env NODE_ENV=production webpack --config ./config/webpack.prod.js\\\" }, \\\"keywords\\\": [], \\\"author\\\": \\\"\\\", \\\"license\\\": \\\"ISC\\\", \\\"devDependencies\\\": { \\\"@babel/core\\\": \\\"^7.17.10\\\", \\\"@pmmmwh/react-refresh-webpack-plugin\\\": \\\"^0.5.5\\\", \\\"babel-loader\\\": \\\"^8.2.5\\\", \\\"babel-preset-react-app\\\": \\\"^10.0.1\\\", \\\"copy-webpack-plugin\\\": \\\"^10.2.4\\\", \\\"cross-env\\\": \\\"^7.0.3\\\", \\\"css-loader\\\": \\\"^6.7.1\\\", \\\"css-minimizer-webpack-plugin\\\": \\\"^3.4.1\\\", \\\"eslint-config-react-app\\\": \\\"^7.0.1\\\", \\\"eslint-webpack-plugin\\\": \\\"^3.1.1\\\", \\\"html-webpack-plugin\\\": \\\"^5.5.0\\\", \\\"image-minimizer-webpack-plugin\\\": \\\"^3.2.3\\\", \\\"imagemin\\\": \\\"^8.0.1\\\", \\\"imagemin-gifsicle\\\": \\\"^7.0.0\\\", \\\"imagemin-jpegtran\\\": \\\"^7.0.0\\\", \\\"imagemin-optipng\\\": \\\"^8.0.0\\\", \\\"imagemin-svgo\\\": \\\"^10.0.1\\\", \\\"less-loader\\\": \\\"^10.2.0\\\", \\\"mini-css-extract-plugin\\\": \\\"^2.6.0\\\", \\\"postcss-loader\\\": \\\"^6.2.1\\\", \\\"postcss-preset-env\\\": \\\"^7.5.0\\\", \\\"react-refresh\\\": \\\"^0.13.0\\\", \\\"sass-loader\\\": \\\"^12.6.0\\\", \\\"style-loader\\\": \\\"^3.3.1\\\", \\\"stylus-loader\\\": \\\"^6.2.0\\\", \\\"webpack\\\": \\\"^5.72.0\\\", \\\"webpack-cli\\\": \\\"^4.9.2\\\", \\\"webpack-dev-server\\\": \\\"^4.9.0\\\" }, \\\"dependencies\\\": { \\\"antd\\\": \\\"^4.20.2\\\", \\\"react\\\": \\\"^18.1.0\\\", \\\"react-dom\\\": \\\"^18.1.0\\\", \\\"react-router-dom\\\": \\\"^6.3.0\\\" }, \\\"browserslist\\\": [\\\"last 2 version\\\", \\\"> 1%\\\", \\\"not dead\\\"] } \",\".eslintrc.js\",\"module.exports = { extends: [\\\"react-app\\\"], // 继承 react 官方规则 parserOptions: { babelOptions: { presets: [ // 解决页面报错问题 [\\\"babel-preset-react-app\\\", false], \\\"babel-preset-react-app/prod\\\", ], }, }, }; \",\"babel.config.js\",\"module.exports = { // 使用react官方规则 presets: [\\\"react-app\\\"], }; \"]},\"340\":{\"h\":\"合并开发和生产配置\",\"t\":[\"webpack.config.js\",\"const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); const MiniCssExtractPlugin = require(\\\"mini-css-extract-plugin\\\"); const CssMinimizerPlugin = require(\\\"css-minimizer-webpack-plugin\\\"); const TerserWebpackPlugin = require(\\\"terser-webpack-plugin\\\"); const ImageMinimizerPlugin = require(\\\"image-minimizer-webpack-plugin\\\"); const ReactRefreshWebpackPlugin = require(\\\"@pmmmwh/react-refresh-webpack-plugin\\\"); // 需要通过 cross-env 定义环境变量 const isProduction = process.env.NODE_ENV === \\\"production\\\"; const getStyleLoaders = (preProcessor) => { return [ isProduction ? MiniCssExtractPlugin.loader : \\\"style-loader\\\", \\\"css-loader\\\", { loader: \\\"postcss-loader\\\", options: { postcssOptions: { plugins: [ \\\"postcss-preset-env\\\", // 能解决大多数样式兼容性问题 ], }, }, }, preProcessor, ].filter(Boolean); }; module.exports = { entry: \\\"./src/main.js\\\", output: { path: isProduction ? path.resolve(__dirname, \\\"../dist\\\") : undefined, filename: isProduction ? \\\"static/js/[name].[contenthash:10].js\\\" : \\\"static/js/[name].js\\\", chunkFilename: isProduction ? \\\"static/js/[name].[contenthash:10].chunk.js\\\" : \\\"static/js/[name].chunk.js\\\", assetModuleFilename: \\\"static/js/[hash:10][ext][query]\\\", clean: true, }, module: { rules: [ { oneOf: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: getStyleLoaders(), }, { test: /\\\\.less$/, use: getStyleLoaders(\\\"less-loader\\\"), }, { test: /\\\\.s[ac]ss$/, use: getStyleLoaders(\\\"sass-loader\\\"), }, { test: /\\\\.styl$/, use: getStyleLoaders(\\\"stylus-loader\\\"), }, { test: /\\\\.(png|jpe?g|gif|svg)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", }, { test: /\\\\.(jsx|js)$/, include: path.resolve(__dirname, \\\"../src\\\"), loader: \\\"babel-loader\\\", options: { cacheDirectory: true, // 开启babel编译缓存 cacheCompression: false, // 缓存文件不要压缩 plugins: [ // \\\"@babel/plugin-transform-runtime\\\", // presets中包含了 !isProduction && \\\"react-refresh/babel\\\", ].filter(Boolean), }, }, ], }, ], }, plugins: [ new ESLintWebpackPlugin({ extensions: [\\\".js\\\", \\\".jsx\\\"], context: path.resolve(__dirname, \\\"../src\\\"), exclude: \\\"node_modules\\\", cache: true, cacheLocation: path.resolve( __dirname, \\\"../node_modules/.cache/.eslintcache\\\" ), }), new HtmlWebpackPlugin({ template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), isProduction && new MiniCssExtractPlugin({ filename: \\\"static/css/[name].[contenthash:10].css\\\", chunkFilename: \\\"static/css/[name].[contenthash:10].chunk.css\\\", }), !isProduction && new ReactRefreshWebpackPlugin(), ].filter(Boolean), optimization: { minimize: isProduction, // 压缩的操作 minimizer: [ // 压缩css new CssMinimizerPlugin(), // 压缩js new TerserWebpackPlugin(), // 压缩图片 new ImageMinimizerPlugin({ minimizer: { implementation: ImageMinimizerPlugin.imageminGenerate, options: { plugins: [ [\\\"gifsicle\\\", { interlaced: true }], [\\\"jpegtran\\\", { progressive: true }], [\\\"optipng\\\", { optimizationLevel: 5 }], [ \\\"svgo\\\", { plugins: [ \\\"preset-default\\\", \\\"prefixIds\\\", { name: \\\"sortAttrs\\\", params: { xmlnsOrder: \\\"alphabetical\\\", }, }, ], }, ], ], }, }, }), ], // 代码分割配置 splitChunks: { chunks: \\\"all\\\", // 其他都用默认值 }, runtimeChunk: { name: (entrypoint) => `runtime~${entrypoint.name}`, }, }, resolve: { extensions: [\\\".jsx\\\", \\\".js\\\", \\\".json\\\"], }, devServer: { open: true, host: \\\"localhost\\\", port: 3000, hot: true, compress: true, historyApiFallback: true, }, mode: isProduction ? \\\"production\\\" : \\\"development\\\", devtool: isProduction ? \\\"source-map\\\" : \\\"cheap-module-source-map\\\", }; \",\"修改运行指令 package.json\",\"{ \\\"name\\\": \\\"react-cli\\\", \\\"version\\\": \\\"1.0.0\\\", \\\"description\\\": \\\"\\\", \\\"main\\\": \\\"index.js\\\", \\\"scripts\\\": { \\\"start\\\": \\\"npm run dev\\\", \\\"dev\\\": \\\"cross-env NODE_ENV=development webpack serve --config ./config/webpack.config.js\\\", \\\"build\\\": \\\"cross-env NODE_ENV=production webpack --config ./config/webpack.config.js\\\" }, \\\"keywords\\\": [], \\\"author\\\": \\\"\\\", \\\"license\\\": \\\"ISC\\\", \\\"devDependencies\\\": { \\\"@babel/core\\\": \\\"^7.17.10\\\", \\\"@pmmmwh/react-refresh-webpack-plugin\\\": \\\"^0.5.5\\\", \\\"babel-loader\\\": \\\"^8.2.5\\\", \\\"babel-preset-react-app\\\": \\\"^10.0.1\\\", \\\"cross-env\\\": \\\"^7.0.3\\\", \\\"css-loader\\\": \\\"^6.7.1\\\", \\\"css-minimizer-webpack-plugin\\\": \\\"^3.4.1\\\", \\\"eslint-config-react-app\\\": \\\"^7.0.1\\\", \\\"eslint-webpack-plugin\\\": \\\"^3.1.1\\\", \\\"html-webpack-plugin\\\": \\\"^5.5.0\\\", \\\"image-minimizer-webpack-plugin\\\": \\\"^3.2.3\\\", \\\"imagemin\\\": \\\"^8.0.1\\\", \\\"imagemin-gifsicle\\\": \\\"^7.0.0\\\", \\\"imagemin-jpegtran\\\": \\\"^7.0.0\\\", \\\"imagemin-optipng\\\": \\\"^8.0.0\\\", \\\"imagemin-svgo\\\": \\\"^10.0.1\\\", \\\"less-loader\\\": \\\"^10.2.0\\\", \\\"mini-css-extract-plugin\\\": \\\"^2.6.0\\\", \\\"react-refresh\\\": \\\"^0.13.0\\\", \\\"sass-loader\\\": \\\"^12.6.0\\\", \\\"style-loader\\\": \\\"^3.3.1\\\", \\\"stylus-loader\\\": \\\"^6.2.0\\\", \\\"webpack\\\": \\\"^5.72.0\\\", \\\"webpack-cli\\\": \\\"^4.9.2\\\", \\\"webpack-dev-server\\\": \\\"^4.9.0\\\" }, \\\"dependencies\\\": { \\\"react\\\": \\\"^18.1.0\\\", \\\"react-dom\\\": \\\"^18.1.0\\\", \\\"react-router-dom\\\": \\\"^6.3.0\\\" }, \\\"browserslist\\\": [\\\"last 2 version\\\", \\\"> 1%\\\", \\\"not dead\\\"] } \"]},\"341\":{\"h\":\"优化配置\",\"t\":[\"const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); const MiniCssExtractPlugin = require(\\\"mini-css-extract-plugin\\\"); const CssMinimizerPlugin = require(\\\"css-minimizer-webpack-plugin\\\"); const TerserWebpackPlugin = require(\\\"terser-webpack-plugin\\\"); const ImageMinimizerPlugin = require(\\\"image-minimizer-webpack-plugin\\\"); const ReactRefreshWebpackPlugin = require(\\\"@pmmmwh/react-refresh-webpack-plugin\\\"); const CopyPlugin = require(\\\"copy-webpack-plugin\\\"); const isProduction = process.env.NODE_ENV === \\\"production\\\"; const getStyleLoaders = (preProcessor) => { return [ isProduction ? MiniCssExtractPlugin.loader : \\\"style-loader\\\", \\\"css-loader\\\", { loader: \\\"postcss-loader\\\", options: { postcssOptions: { plugins: [ \\\"postcss-preset-env\\\", ], }, }, }, preProcessor && { loader: preProcessor, options: preProcessor === \\\"less-loader\\\" ? { // antd的自定义主题 lessOptions: { modifyVars: { // 其他主题色：https://ant.design/docs/react/customize-theme-cn \\\"@primary-color\\\": \\\"#1DA57A\\\", // 全局主色 }, javascriptEnabled: true, }, } : {}, }, ].filter(Boolean); }; module.exports = { entry: \\\"./src/main.js\\\", output: { path: isProduction ? path.resolve(__dirname, \\\"../dist\\\") : undefined, filename: isProduction ? \\\"static/js/[name].[contenthash:10].js\\\" : \\\"static/js/[name].js\\\", chunkFilename: isProduction ? \\\"static/js/[name].[contenthash:10].chunk.js\\\" : \\\"static/js/[name].chunk.js\\\", assetModuleFilename: \\\"static/js/[hash:10][ext][query]\\\", clean: true, }, module: { rules: [ { oneOf: [ { test: /\\\\.css$/, use: getStyleLoaders(), }, { test: /\\\\.less$/, use: getStyleLoaders(\\\"less-loader\\\"), }, { test: /\\\\.s[ac]ss$/, use: getStyleLoaders(\\\"sass-loader\\\"), }, { test: /\\\\.styl$/, use: getStyleLoaders(\\\"stylus-loader\\\"), }, { test: /\\\\.(png|jpe?g|gif|svg)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, }, }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", }, { test: /\\\\.(jsx|js)$/, include: path.resolve(__dirname, \\\"../src\\\"), loader: \\\"babel-loader\\\", options: { cacheDirectory: true, cacheCompression: false, plugins: [ // \\\"@babel/plugin-transform-runtime\\\", // presets中包含了 !isProduction && \\\"react-refresh/babel\\\", ].filter(Boolean), }, }, ], }, ], }, plugins: [ new ESLintWebpackPlugin({ extensions: [\\\".js\\\", \\\".jsx\\\"], context: path.resolve(__dirname, \\\"../src\\\"), exclude: \\\"node_modules\\\", cache: true, cacheLocation: path.resolve( __dirname, \\\"../node_modules/.cache/.eslintcache\\\" ), }), new HtmlWebpackPlugin({ template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), isProduction && new MiniCssExtractPlugin({ filename: \\\"static/css/[name].[contenthash:10].css\\\", chunkFilename: \\\"static/css/[name].[contenthash:10].chunk.css\\\", }), !isProduction && new ReactRefreshWebpackPlugin(), // 将public下面的资源复制到dist目录去（除了index.html） new CopyPlugin({ patterns: [ { from: path.resolve(__dirname, \\\"../public\\\"), to: path.resolve(__dirname, \\\"../dist\\\"), toType: \\\"dir\\\", noErrorOnMissing: true, // 不生成错误 globOptions: { // 忽略文件 ignore: [\\\"**/index.html\\\"], }, info: { // 跳过terser压缩js minimized: true, }, }, ], }), ].filter(Boolean), optimization: { minimize: isProduction, // 压缩的操作 minimizer: [ // 压缩css new CssMinimizerPlugin(), // 压缩js new TerserWebpackPlugin(), // 压缩图片 new ImageMinimizerPlugin({ minimizer: { implementation: ImageMinimizerPlugin.imageminGenerate, options: { plugins: [ [\\\"gifsicle\\\", { interlaced: true }], [\\\"jpegtran\\\", { progressive: true }], [\\\"optipng\\\", { optimizationLevel: 5 }], [ \\\"svgo\\\", { plugins: [ \\\"preset-default\\\", \\\"prefixIds\\\", { name: \\\"sortAttrs\\\", params: { xmlnsOrder: \\\"alphabetical\\\", }, }, ], }, ], ], }, }, }), ], // 代码分割配置 splitChunks: { chunks: \\\"all\\\", cacheGroups: { // layouts通常是admin项目的主体布局组件，所有路由组件都要使用的 // 可以单独打包，从而复用 // 如果项目中没有，请删除 layouts: { name: \\\"layouts\\\", test: path.resolve(__dirname, \\\"../src/layouts\\\"), priority: 40, }, // 如果项目中使用antd，此时将所有node_modules打包在一起，那么打包输出文件会比较大。 // 所以我们将node_modules中比较大的模块单独打包，从而并行加载速度更好 // 如果项目中没有，请删除 antd: { name: \\\"chunk-antd\\\", test: /[\\\\\\\\/]node_modules[\\\\\\\\/]antd(.*)/, priority: 30, }, // 将react相关的库单独打包，减少node_modules的chunk体积。 react: { name: \\\"react\\\", test: /[\\\\\\\\/]node_modules[\\\\\\\\/]react(.*)?[\\\\\\\\/]/, chunks: \\\"initial\\\", priority: 20, }, libs: { name: \\\"chunk-libs\\\", test: /[\\\\\\\\/]node_modules[\\\\\\\\/]/, priority: 10, // 权重最低，优先考虑前面内容 chunks: \\\"initial\\\", }, }, }, runtimeChunk: { name: (entrypoint) => `runtime~${entrypoint.name}`, }, }, resolve: { extensions: [\\\".jsx\\\", \\\".js\\\", \\\".json\\\"], }, devServer: { open: true, host: \\\"localhost\\\", port: 3000, hot: true, compress: true, historyApiFallback: true, }, mode: isProduction ? \\\"production\\\" : \\\"development\\\", devtool: isProduction ? \\\"source-map\\\" : \\\"cheap-module-source-map\\\", performance: false, // 关闭性能分析，提示速度 }; \"]},\"342\":{\"h\":\"Vue 脚手架\"},\"343\":{\"h\":\"开发模式配置\",\"t\":[\"// webpack.dev.js const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); const { VueLoaderPlugin } = require(\\\"vue-loader\\\"); const { DefinePlugin } = require(\\\"webpack\\\"); const CopyPlugin = require(\\\"copy-webpack-plugin\\\"); const getStyleLoaders = (preProcessor) => { return [ \\\"vue-style-loader\\\", \\\"css-loader\\\", { loader: \\\"postcss-loader\\\", options: { postcssOptions: { plugins: [ \\\"postcss-preset-env\\\", // 能解决大多数样式兼容性问题 ], }, }, }, preProcessor, ].filter(Boolean); }; module.exports = { entry: \\\"./src/main.js\\\", output: { path: undefined, filename: \\\"static/js/[name].js\\\", chunkFilename: \\\"static/js/[name].chunk.js\\\", assetModuleFilename: \\\"static/js/[hash:10][ext][query]\\\", }, module: { rules: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: getStyleLoaders(), }, { test: /\\\\.less$/, use: getStyleLoaders(\\\"less-loader\\\"), }, { test: /\\\\.s[ac]ss$/, use: getStyleLoaders(\\\"sass-loader\\\"), }, { test: /\\\\.styl$/, use: getStyleLoaders(\\\"stylus-loader\\\"), }, { test: /\\\\.(png|jpe?g|gif|svg)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", }, { test: /\\\\.(jsx|js)$/, include: path.resolve(__dirname, \\\"../src\\\"), loader: \\\"babel-loader\\\", options: { cacheDirectory: true, cacheCompression: false, plugins: [ // \\\"@babel/plugin-transform-runtime\\\" // presets中包含了 ], }, }, // vue-loader不支持oneOf { test: /\\\\.vue$/, loader: \\\"vue-loader\\\", // 内部会给vue文件注入HMR功能代码 options: { // 开启缓存 cacheDirectory: path.resolve( __dirname, \\\"node_modules/.cache/vue-loader\\\" ), }, }, ], }, plugins: [ new ESLintWebpackPlugin({ context: path.resolve(__dirname, \\\"../src\\\"), exclude: \\\"node_modules\\\", cache: true, cacheLocation: path.resolve( __dirname, \\\"../node_modules/.cache/.eslintcache\\\" ), }), new HtmlWebpackPlugin({ template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), new CopyPlugin({ patterns: [ { from: path.resolve(__dirname, \\\"../public\\\"), to: path.resolve(__dirname, \\\"../dist\\\"), toType: \\\"dir\\\", noErrorOnMissing: true, globOptions: { ignore: [\\\"**/index.html\\\"], }, info: { minimized: true, }, }, ], }), new VueLoaderPlugin(), // 解决页面警告 new DefinePlugin({ __VUE_OPTIONS_API__: \\\"true\\\", __VUE_PROD_DEVTOOLS__: \\\"false\\\", }), ], optimization: { splitChunks: { chunks: \\\"all\\\", }, runtimeChunk: { name: (entrypoint) => `runtime~${entrypoint.name}`, }, }, resolve: { extensions: [\\\".vue\\\", \\\".js\\\", \\\".json\\\"], // 自动补全文件扩展名，让vue可以使用 }, devServer: { open: true, host: \\\"localhost\\\", port: 3000, hot: true, compress: true, historyApiFallback: true, // 解决vue-router刷新404问题 }, mode: \\\"development\\\", devtool: \\\"cheap-module-source-map\\\", }; \"]},\"344\":{\"h\":\"生产模式配置\",\"t\":[\"// webpack.prod.js const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); const MiniCssExtractPlugin = require(\\\"mini-css-extract-plugin\\\"); const CssMinimizerPlugin = require(\\\"css-minimizer-webpack-plugin\\\"); const TerserWebpackPlugin = require(\\\"terser-webpack-plugin\\\"); const ImageMinimizerPlugin = require(\\\"image-minimizer-webpack-plugin\\\"); const { VueLoaderPlugin } = require(\\\"vue-loader\\\"); const { DefinePlugin } = require(\\\"webpack\\\"); const getStyleLoaders = (preProcessor) => { return [ MiniCssExtractPlugin.loader, \\\"css-loader\\\", { loader: \\\"postcss-loader\\\", options: { postcssOptions: { plugins: [ \\\"postcss-preset-env\\\", // 能解决大多数样式兼容性问题 ], }, }, }, preProcessor, ].filter(Boolean); }; module.exports = { entry: \\\"./src/main.js\\\", output: { path: undefined, filename: \\\"static/js/[name].[contenthash:10].js\\\", chunkFilename: \\\"static/js/[name].[contenthash:10].chunk.js\\\", assetModuleFilename: \\\"static/js/[hash:10][ext][query]\\\", clean: true, }, module: { rules: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: getStyleLoaders(), }, { test: /\\\\.less$/, use: getStyleLoaders(\\\"less-loader\\\"), }, { test: /\\\\.s[ac]ss$/, use: getStyleLoaders(\\\"sass-loader\\\"), }, { test: /\\\\.styl$/, use: getStyleLoaders(\\\"stylus-loader\\\"), }, { test: /\\\\.(png|jpe?g|gif|svg)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", }, { test: /\\\\.(jsx|js)$/, include: path.resolve(__dirname, \\\"../src\\\"), loader: \\\"babel-loader\\\", options: { cacheDirectory: true, cacheCompression: false, plugins: [ // \\\"@babel/plugin-transform-runtime\\\" // presets中包含了 ], }, }, // vue-loader不支持oneOf { test: /\\\\.vue$/, loader: \\\"vue-loader\\\", // 内部会给vue文件注入HMR功能代码 options: { // 开启缓存 cacheDirectory: path.resolve( __dirname, \\\"node_modules/.cache/vue-loader\\\" ), }, }, ], }, plugins: [ new ESLintWebpackPlugin({ context: path.resolve(__dirname, \\\"../src\\\"), exclude: \\\"node_modules\\\", cache: true, cacheLocation: path.resolve( __dirname, \\\"../node_modules/.cache/.eslintcache\\\" ), }), new HtmlWebpackPlugin({ template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), new CopyPlugin({ patterns: [ { from: path.resolve(__dirname, \\\"../public\\\"), to: path.resolve(__dirname, \\\"../dist\\\"), toType: \\\"dir\\\", noErrorOnMissing: true, globOptions: { ignore: [\\\"**/index.html\\\"], }, info: { minimized: true, }, }, ], }), new MiniCssExtractPlugin({ filename: \\\"static/css/[name].[contenthash:10].css\\\", chunkFilename: \\\"static/css/[name].[contenthash:10].chunk.css\\\", }), new VueLoaderPlugin(), new DefinePlugin({ __VUE_OPTIONS_API__: \\\"true\\\", __VUE_PROD_DEVTOOLS__: \\\"false\\\", }), ], optimization: { // 压缩的操作 minimizer: [ new CssMinimizerPlugin(), new TerserWebpackPlugin(), new ImageMinimizerPlugin({ minimizer: { implementation: ImageMinimizerPlugin.imageminGenerate, options: { plugins: [ [\\\"gifsicle\\\", { interlaced: true }], [\\\"jpegtran\\\", { progressive: true }], [\\\"optipng\\\", { optimizationLevel: 5 }], [ \\\"svgo\\\", { plugins: [ \\\"preset-default\\\", \\\"prefixIds\\\", { name: \\\"sortAttrs\\\", params: { xmlnsOrder: \\\"alphabetical\\\", }, }, ], }, ], ], }, }, }), ], splitChunks: { chunks: \\\"all\\\", }, runtimeChunk: { name: (entrypoint) => `runtime~${entrypoint.name}`, }, }, resolve: { extensions: [\\\".vue\\\", \\\".js\\\", \\\".json\\\"], }, mode: \\\"production\\\", devtool: \\\"source-map\\\", }; \"]},\"345\":{\"h\":\"其他配置\",\"t\":[\"package.json\",\"{ \\\"name\\\": \\\"vue-cli\\\", \\\"version\\\": \\\"1.0.0\\\", \\\"description\\\": \\\"\\\", \\\"main\\\": \\\"main.js\\\", \\\"scripts\\\": { \\\"start\\\": \\\"npm run dev\\\", \\\"dev\\\": \\\"cross-env NODE_ENV=development webpack serve --config ./config/webpack.dev.js\\\", \\\"build\\\": \\\"cross-env NODE_ENV=production webpack --config ./config/webpack.prod.js\\\" }, \\\"keywords\\\": [], \\\"author\\\": \\\"\\\", \\\"license\\\": \\\"ISC\\\", \\\"devDependencies\\\": { \\\"@babel/core\\\": \\\"^7.17.10\\\", \\\"@babel/eslint-parser\\\": \\\"^7.17.0\\\", \\\"@vue/cli-plugin-babel\\\": \\\"^5.0.4\\\", \\\"babel-loader\\\": \\\"^8.2.5\\\", \\\"copy-webpack-plugin\\\": \\\"^10.2.4\\\", \\\"cross-env\\\": \\\"^7.0.3\\\", \\\"css-loader\\\": \\\"^6.7.1\\\", \\\"css-minimizer-webpack-plugin\\\": \\\"^3.4.1\\\", \\\"eslint-plugin-vue\\\": \\\"^8.7.1\\\", \\\"eslint-webpack-plugin\\\": \\\"^3.1.1\\\", \\\"html-webpack-plugin\\\": \\\"^5.5.0\\\", \\\"image-minimizer-webpack-plugin\\\": \\\"^3.2.3\\\", \\\"imagemin\\\": \\\"^8.0.1\\\", \\\"imagemin-gifsicle\\\": \\\"^7.0.0\\\", \\\"imagemin-jpegtran\\\": \\\"^7.0.0\\\", \\\"imagemin-optipng\\\": \\\"^8.0.0\\\", \\\"imagemin-svgo\\\": \\\"^10.0.1\\\", \\\"less-loader\\\": \\\"^10.2.0\\\", \\\"mini-css-extract-plugin\\\": \\\"^2.6.0\\\", \\\"postcss-preset-env\\\": \\\"^7.5.0\\\", \\\"sass-loader\\\": \\\"^12.6.0\\\", \\\"stylus-loader\\\": \\\"^6.2.0\\\", \\\"vue-loader\\\": \\\"^17.0.0\\\", \\\"vue-style-loader\\\": \\\"^4.1.3\\\", \\\"vue-template-compiler\\\": \\\"^2.6.14\\\", \\\"webpack\\\": \\\"^5.72.0\\\", \\\"webpack-cli\\\": \\\"^4.9.2\\\", \\\"webpack-dev-server\\\": \\\"^4.9.0\\\" }, \\\"dependencies\\\": { \\\"vue\\\": \\\"^3.2.33\\\", \\\"vue-router\\\": \\\"^4.0.15\\\" }, \\\"browserslist\\\": [\\\"last 2 version\\\", \\\"> 1%\\\", \\\"not dead\\\"] } \",\".eslintrc.js\",\"module.exports = { root: true, env: { node: true, }, extends: [\\\"plugin:vue/vue3-essential\\\", \\\"eslint:recommended\\\"], parserOptions: { parser: \\\"@babel/eslint-parser\\\", }, }; \",\"babel.config.js\",\"pnpm i @vue/cli-plugin-babel -D\",\"module.exports = { presets: [\\\"@vue/cli-plugin-babel/preset\\\"], }; \"]},\"346\":{\"h\":\"合并开发和生产配置\",\"t\":[\"// webpack.config.js const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); const MiniCssExtractPlugin = require(\\\"mini-css-extract-plugin\\\"); const CssMinimizerPlugin = require(\\\"css-minimizer-webpack-plugin\\\"); const TerserWebpackPlugin = require(\\\"terser-webpack-plugin\\\"); const ImageMinimizerPlugin = require(\\\"image-minimizer-webpack-plugin\\\"); const { VueLoaderPlugin } = require(\\\"vue-loader\\\"); const { DefinePlugin } = require(\\\"webpack\\\"); const CopyPlugin = require(\\\"copy-webpack-plugin\\\"); // 需要通过 cross-env 定义环境变量 const isProduction = process.env.NODE_ENV === \\\"production\\\"; const getStyleLoaders = (preProcessor) => { return [ isProduction ? MiniCssExtractPlugin.loader : \\\"vue-style-loader\\\", \\\"css-loader\\\", { loader: \\\"postcss-loader\\\", options: { postcssOptions: { plugins: [\\\"postcss-preset-env\\\"], }, }, }, preProcessor, ].filter(Boolean); }; module.exports = { entry: \\\"./src/main.js\\\", output: { path: isProduction ? path.resolve(__dirname, \\\"../dist\\\") : undefined, filename: isProduction ? \\\"static/js/[name].[contenthash:10].js\\\" : \\\"static/js/[name].js\\\", chunkFilename: isProduction ? \\\"static/js/[name].[contenthash:10].chunk.js\\\" : \\\"static/js/[name].chunk.js\\\", assetModuleFilename: \\\"static/js/[hash:10][ext][query]\\\", clean: true, }, module: { rules: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: getStyleLoaders(), }, { test: /\\\\.less$/, use: getStyleLoaders(\\\"less-loader\\\"), }, { test: /\\\\.s[ac]ss$/, use: getStyleLoaders(\\\"sass-loader\\\"), }, { test: /\\\\.styl$/, use: getStyleLoaders(\\\"stylus-loader\\\"), }, { test: /\\\\.(png|jpe?g|gif|svg)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", }, { test: /\\\\.(jsx|js)$/, include: path.resolve(__dirname, \\\"../src\\\"), loader: \\\"babel-loader\\\", options: { cacheDirectory: true, cacheCompression: false, plugins: [ // \\\"@babel/plugin-transform-runtime\\\" // presets中包含了 ], }, }, // vue-loader不支持oneOf { test: /\\\\.vue$/, loader: \\\"vue-loader\\\", // 内部会给vue文件注入HMR功能代码 options: { // 开启缓存 cacheDirectory: path.resolve( __dirname, \\\"node_modules/.cache/vue-loader\\\" ), }, }, ], }, plugins: [ new ESLintWebpackPlugin({ context: path.resolve(__dirname, \\\"../src\\\"), exclude: \\\"node_modules\\\", cache: true, cacheLocation: path.resolve( __dirname, \\\"../node_modules/.cache/.eslintcache\\\" ), }), new HtmlWebpackPlugin({ template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), new CopyPlugin({ patterns: [ { from: path.resolve(__dirname, \\\"../public\\\"), to: path.resolve(__dirname, \\\"../dist\\\"), toType: \\\"dir\\\", noErrorOnMissing: true, globOptions: { ignore: [\\\"**/index.html\\\"], }, info: { minimized: true, }, }, ], }), isProduction && new MiniCssExtractPlugin({ filename: \\\"static/css/[name].[contenthash:10].css\\\", chunkFilename: \\\"static/css/[name].[contenthash:10].chunk.css\\\", }), new VueLoaderPlugin(), new DefinePlugin({ __VUE_OPTIONS_API__: \\\"true\\\", __VUE_PROD_DEVTOOLS__: \\\"false\\\", }), ].filter(Boolean), optimization: { minimize: isProduction, // 压缩的操作 minimizer: [ new CssMinimizerPlugin(), new TerserWebpackPlugin(), new ImageMinimizerPlugin({ minimizer: { implementation: ImageMinimizerPlugin.imageminGenerate, options: { plugins: [ [\\\"gifsicle\\\", { interlaced: true }], [\\\"jpegtran\\\", { progressive: true }], [\\\"optipng\\\", { optimizationLevel: 5 }], [ \\\"svgo\\\", { plugins: [ \\\"preset-default\\\", \\\"prefixIds\\\", { name: \\\"sortAttrs\\\", params: { xmlnsOrder: \\\"alphabetical\\\", }, }, ], }, ], ], }, }, }), ], splitChunks: { chunks: \\\"all\\\", }, runtimeChunk: { name: (entrypoint) => `runtime~${entrypoint.name}`, }, }, resolve: { extensions: [\\\".vue\\\", \\\".js\\\", \\\".json\\\"], }, devServer: { open: true, host: \\\"localhost\\\", port: 3000, hot: true, compress: true, historyApiFallback: true, // 解决vue-router刷新404问题 }, mode: isProduction ? \\\"production\\\" : \\\"development\\\", devtool: isProduction ? \\\"source-map\\\" : \\\"cheap-module-source-map\\\", }; \"]},\"347\":{\"h\":\"优化配置\",\"t\":[\"const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); const MiniCssExtractPlugin = require(\\\"mini-css-extract-plugin\\\"); const CssMinimizerPlugin = require(\\\"css-minimizer-webpack-plugin\\\"); const ImageMinimizerPlugin = require(\\\"image-minimizer-webpack-plugin\\\"); const TerserWebpackPlugin = require(\\\"terser-webpack-plugin\\\"); const CopyPlugin = require(\\\"copy-webpack-plugin\\\"); const { VueLoaderPlugin } = require(\\\"vue-loader\\\"); const { DefinePlugin } = require(\\\"webpack\\\"); const AutoImport = require(\\\"unplugin-auto-import/webpack\\\"); const Components = require(\\\"unplugin-vue-components/webpack\\\"); const { ElementPlusResolver } = require(\\\"unplugin-vue-components/resolvers\\\"); // 需要通过 cross-env 定义环境变量 const isProduction = process.env.NODE_ENV === \\\"production\\\"; const getStyleLoaders = (preProcessor) => { return [ isProduction ? MiniCssExtractPlugin.loader : \\\"vue-style-loader\\\", \\\"css-loader\\\", { loader: \\\"postcss-loader\\\", options: { postcssOptions: { plugins: [\\\"postcss-preset-env\\\"], }, }, }, preProcessor && { loader: preProcessor, options: preProcessor === \\\"sass-loader\\\" ? { // 自定义主题：自动引入我们定义的scss文件 additionalData: `@use \\\"@/styles/element/index.scss\\\" as *;`, } : {}, }, ].filter(Boolean); }; module.exports = { entry: \\\"./src/main.js\\\", output: { path: isProduction ? path.resolve(__dirname, \\\"../dist\\\") : undefined, filename: isProduction ? \\\"static/js/[name].[contenthash:10].js\\\" : \\\"static/js/[name].js\\\", chunkFilename: isProduction ? \\\"static/js/[name].[contenthash:10].chunk.js\\\" : \\\"static/js/[name].chunk.js\\\", assetModuleFilename: \\\"static/js/[hash:10][ext][query]\\\", clean: true, }, module: { rules: [ { test: /\\\\.css$/, use: getStyleLoaders(), }, { test: /\\\\.less$/, use: getStyleLoaders(\\\"less-loader\\\"), }, { test: /\\\\.s[ac]ss$/, use: getStyleLoaders(\\\"sass-loader\\\"), }, { test: /\\\\.styl$/, use: getStyleLoaders(\\\"stylus-loader\\\"), }, { test: /\\\\.(png|jpe?g|gif|svg)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, }, }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", }, { test: /\\\\.(jsx|js)$/, include: path.resolve(__dirname, \\\"../src\\\"), loader: \\\"babel-loader\\\", options: { cacheDirectory: true, cacheCompression: false, plugins: [ // \\\"@babel/plugin-transform-runtime\\\" // presets中包含了 ], }, }, // vue-loader不支持oneOf { test: /\\\\.vue$/, loader: \\\"vue-loader\\\", // 内部会给vue文件注入HMR功能代码 options: { // 开启缓存 cacheDirectory: path.resolve( __dirname, \\\"node_modules/.cache/vue-loader\\\" ), }, }, ], }, plugins: [ new ESLintWebpackPlugin({ context: path.resolve(__dirname, \\\"../src\\\"), exclude: \\\"node_modules\\\", cache: true, cacheLocation: path.resolve( __dirname, \\\"../node_modules/.cache/.eslintcache\\\" ), }), new HtmlWebpackPlugin({ template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), new CopyPlugin({ patterns: [ { from: path.resolve(__dirname, \\\"../public\\\"), to: path.resolve(__dirname, \\\"../dist\\\"), toType: \\\"dir\\\", noErrorOnMissing: true, globOptions: { ignore: [\\\"**/index.html\\\"], }, info: { minimized: true, }, }, ], }), isProduction && new MiniCssExtractPlugin({ filename: \\\"static/css/[name].[contenthash:10].css\\\", chunkFilename: \\\"static/css/[name].[contenthash:10].chunk.css\\\", }), new VueLoaderPlugin(), new DefinePlugin({ __VUE_OPTIONS_API__: \\\"true\\\", __VUE_PROD_DEVTOOLS__: \\\"false\\\", }), // 按需加载element-plus组件样式 AutoImport({ resolvers: [ElementPlusResolver()], }), Components({ resolvers: [ ElementPlusResolver({ importStyle: \\\"sass\\\", // 自定义主题 }), ], }), ].filter(Boolean), optimization: { minimize: isProduction, // 压缩的操作 minimizer: [ new CssMinimizerPlugin(), new TerserWebpackPlugin(), new ImageMinimizerPlugin({ minimizer: { implementation: ImageMinimizerPlugin.imageminGenerate, options: { plugins: [ [\\\"gifsicle\\\", { interlaced: true }], [\\\"jpegtran\\\", { progressive: true }], [\\\"optipng\\\", { optimizationLevel: 5 }], [ \\\"svgo\\\", { plugins: [ \\\"preset-default\\\", \\\"prefixIds\\\", { name: \\\"sortAttrs\\\", params: { xmlnsOrder: \\\"alphabetical\\\", }, }, ], }, ], ], }, }, }), ], splitChunks: { chunks: \\\"all\\\", cacheGroups: { // layouts通常是admin项目的主体布局组件，所有路由组件都要使用的 // 可以单独打包，从而复用 // 如果项目中没有，请删除 layouts: { name: \\\"layouts\\\", test: path.resolve(__dirname, \\\"../src/layouts\\\"), priority: 40, }, // 如果项目中使用element-plus，此时将所有node_modules打包在一起，那么打包输出文件会比较大。 // 所以我们将node_modules中比较大的模块单独打包，从而并行加载速度更好 // 如果项目中没有，请删除 elementUI: { name: \\\"chunk-elementPlus\\\", test: /[\\\\\\\\/]node_modules[\\\\\\\\/]_?element-plus(.*)/, priority: 30, }, // 将vue相关的库单独打包，减少node_modules的chunk体积。 vue: { name: \\\"vue\\\", test: /[\\\\\\\\/]node_modules[\\\\\\\\/]vue(.*)[\\\\\\\\/]/, chunks: \\\"initial\\\", priority: 20, }, libs: { name: \\\"chunk-libs\\\", test: /[\\\\\\\\/]node_modules[\\\\\\\\/]/, priority: 10, // 权重最低，优先考虑前面内容 chunks: \\\"initial\\\", }, }, }, runtimeChunk: { name: (entrypoint) => `runtime~${entrypoint.name}`, }, }, resolve: { extensions: [\\\".vue\\\", \\\".js\\\", \\\".json\\\"], alias: { // 路径别名 \\\"@\\\": path.resolve(__dirname, \\\"../src\\\"), }, }, devServer: { open: true, host: \\\"localhost\\\", port: 3000, hot: true, compress: true, historyApiFallback: true, // 解决vue-router刷新404问题 }, mode: isProduction ? \\\"production\\\" : \\\"development\\\", devtool: isProduction ? \\\"source-map\\\" : \\\"cheap-module-source-map\\\", performance: false, }; \"]},\"348\":{\"h\":\"Webpack高级部分\",\"t\":[\"为了让我们代码在编译/运行时性能更好，我们会从以下角度来进行优化：\",\"提升开发体验\",\"提升打包构建速度\",\"减少代码体积\",\"优化代码运行性能\"]},\"349\":{\"h\":\"提升开发体验\"},\"350\":{\"h\":\"SourceMap\"},\"351\":{\"h\":\"为什么？\",\"t\":[\"开发时我们运行的代码是经过 webpack 编译后的，例如下面这个样子：\",\"/* * ATTENTION: The \\\"eval\\\" devtool has been used (maybe by default in mode: \\\"development\\\"). * This devtool is neither made for production nor for readable output files. * It uses \\\"eval()\\\" calls to create a separate source file in the browser devtools. * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/) * or disable the default devtool with \\\"devtool: false\\\". * If you are looking for production-ready output files, see mode: \\\"production\\\" (https://webpack.js.org/configuration/mode/). */ /******/ (() => { // webpackBootstrap /******/ \\\"use strict\\\"; /******/ var __webpack_modules__ = ({ /***/ \\\"./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js!./src/less/index.less\\\": /*!**********************************************************************************************************!*\\\\ !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js!./src/less/index.less ***! \\\\**********************************************************************************************************/ /***/ ((module, __webpack_exports__, __webpack_require__) => { eval(\\\"__webpack_require__.r(__webpack_exports__);\\\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\\\n/* harmony export */ \\\\\\\"default\\\\\\\": () => (__WEBPACK_DEFAULT_EXPORT__)\\\\n/* harmony export */ });\\\\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \\\\\\\"./node_modules/css-loader/dist/runtime/noSourceMaps.js\\\\\\\");\\\\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\\\\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \\\\\\\"./node_modules/css-loader/dist/runtime/api.js\\\\\\\");\\\\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\\\\n// Imports\\\\n\\\\n\\\\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\\\\n// Module\\\\n___CSS_LOADER_EXPORT___.push([module.id, \\\\\\\".box2 {\\\\\\\\n width: 100px;\\\\\\\\n height: 100px;\\\\\\\\n background-color: deeppink;\\\\\\\\n}\\\\\\\\n\\\\\\\", \\\\\\\"\\\\\\\"]);\\\\n// Exports\\\\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\\\\n\\\\n\\\\n//# sourceURL=webpack://webpack5/./src/less/index.less?./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js\\\"); /***/ }), // 其他省略 \",\"所有 css 和 js 合并成了一个文件，并且多了其他代码。此时如果代码运行出错那么提示代码错误位置我们是看不懂的。一旦将来开发代码文件很多，那么很难去发现错误出现在哪里。\",\"所以我们需要更加准确的错误提示，来帮助我们更好的开发代码。\"]},\"352\":{\"h\":\"是什么\",\"t\":[\"SourceMap（源代码映射）是一个用来生成源代码与构建后代码一一映射的文件的方案。\",\"它会生成一个 xxx.map 文件，里面包含源代码和构建后代码每一行、每一列的映射关系。当构建后代码出错了，会通过 xxx.map 文件，从构建后代码出错位置找到映射后源代码出错位置，从而让浏览器提示源代码文件出错位置，帮助我们更快的找到错误根源。\"]},\"353\":{\"h\":\"怎么用\",\"t\":[\"通过查看Webpack DevTool 文档可知，SourceMap 的值有很多种情况.\",\"但实际开发时我们只需要关注两种情况即可：\",\"开发模式：cheap-module-source-map\",\"优点：打包编译速度快，只包含行映射\",\"缺点：没有列映射\",\"module.exports = { // 其他省略 mode: \\\"development\\\", devtool: \\\"cheap-module-source-map\\\", }; \",\"生产模式：source-map\",\"优点：包含行/列映射\",\"缺点：打包编译速度更慢\",\"module.exports = { // 其他省略 mode: \\\"production\\\", devtool: \\\"source-map\\\", }; \"]},\"354\":{\"h\":\"提升打包构建速度\"},\"355\":{\"h\":\"HotModuleReplacement 热模块替换\"},\"356\":{\"h\":\"为什么\",\"t\":[\"开发时我们修改了其中一个模块代码，Webpack 默认会将所有模块全部重新打包编译，速度很慢。\",\"所以我们需要做到修改某个模块代码，就只有这个模块代码需要重新打包编译，其他模块不变，这样打包速度就能很快。\"]},\"357\":{\"h\":\"是什么\",\"t\":[\"HotModuleReplacement（HMR/热模块替换）：在程序运行中，替换、添加或删除模块，而无需重新加载整个页面。\"]},\"358\":{\"h\":\"怎么用\",\"t\":[\"基本配置\",\"module.exports = { // 其他省略 devServer: { host: \\\"localhost\\\", // 启动服务器域名 port: \\\"3000\\\", // 启动服务器端口号 open: true, // 是否自动打开浏览器 hot: true, // 开启HMR功能（只能用于开发环境，生产环境不需要了） }, }; \",\"此时 css 样式经过 style-loader 处理，已经具备 HMR 功能了。 但是 js 还不行。\",\"JS 配置\",\"// main.js import count from \\\"./js/count\\\"; import sum from \\\"./js/sum\\\"; // 引入资源，Webpack才会对其打包 import \\\"./css/iconfont.css\\\"; import \\\"./css/index.css\\\"; import \\\"./less/index.less\\\"; import \\\"./sass/index.sass\\\"; import \\\"./sass/index.scss\\\"; import \\\"./styl/index.styl\\\"; const result1 = count(2, 1); console.log(result1); const result2 = sum(1, 2, 3, 4); console.log(result2); // 判断是否支持HMR功能 if (module.hot) { module.hot.accept(\\\"./js/count.js\\\", function (count) { const result1 = count(2, 1); console.log(result1); }); module.hot.accept(\\\"./js/sum.js\\\", function (sum) { const result2 = sum(1, 2, 3, 4); console.log(result2); }); } \",\"上面这样写会很麻烦，所以实际开发我们会使用其他 loader 来解决。\",\"比如：vue-loader, react-hot-loader。\"]},\"359\":{\"h\":\"OneOf\"},\"360\":{\"h\":\"为什么\",\"t\":[\"打包时每个文件都会经过所有 loader 处理，虽然因为 test 正则原因实际没有处理上，但是都要过一遍。比较慢。\"]},\"361\":{\"h\":\"是什么\",\"t\":[\"顾名思义就是只能匹配上一个 loader, 剩下的就不匹配了。\"]},\"362\":{\"h\":\"怎么用\",\"t\":[\"const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); module.exports = { entry: \\\"./src/main.js\\\", output: { path: undefined, // 开发模式没有输出，不需要指定输出目录 filename: \\\"static/js/main.js\\\", // 将 js 文件输出到 static/js 目录中 // clean: true, // 开发模式没有输出，不需要清空输出结果 }, module: { rules: [ { oneOf: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: [\\\"style-loader\\\", \\\"css-loader\\\"], }, { test: /\\\\.less$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"less-loader\\\"], }, { test: /\\\\.s[ac]ss$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"sass-loader\\\"], }, { test: /\\\\.styl$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"stylus-loader\\\"], }, { test: /\\\\.(png|jpe?g|gif|webp)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, generator: { // 将图片文件输出到 static/imgs 目录中 // 将图片文件命名 [hash:8][ext][query] // [hash:8]: hash值取8位 // [ext]: 使用之前的文件扩展名 // [query]: 添加之前的query参数 filename: \\\"static/imgs/[hash:8][ext][query]\\\", }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", generator: { filename: \\\"static/media/[hash:8][ext][query]\\\", }, }, { test: /\\\\.js$/, exclude: /node_modules/, // 排除node_modules代码不编译 loader: \\\"babel-loader\\\", }, ], }, ], }, plugins: [ new ESLintWebpackPlugin({ // 指定检查文件的根目录 context: path.resolve(__dirname, \\\"../src\\\"), }), new HtmlWebpackPlugin({ // 以 public/index.html 为模板创建文件 // 新的html文件有两个特点：1. 内容和源文件一致 2. 自动引入打包生成的js等资源 template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), ], // 开发服务器 devServer: { host: \\\"localhost\\\", // 启动服务器域名 port: \\\"3000\\\", // 启动服务器端口号 open: true, // 是否自动打开浏览器 hot: true, // 开启HMR功能 }, mode: \\\"development\\\", devtool: \\\"cheap-module-source-map\\\", }; \",\"生产模式也是如此配置。\"]},\"363\":{\"h\":\"Include/Exclude\"},\"364\":{\"h\":\"为什么\",\"t\":[\"开发时我们需要使用第三方的库或插件，所有文件都下载到 node_modules 中了。而这些文件是不需要编译可以直接使用的。\",\"所以我们在对 js 文件处理时，要排除 node_modules 下面的文件。\"]},\"365\":{\"h\":\"是什么\",\"t\":[\"include\",\"包含，只处理 xxx 文件\",\"exclude\",\"排除，除了 xxx 文件以外其他文件都处理\"]},\"366\":{\"h\":\"怎么用\",\"t\":[\"const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); module.exports = { entry: \\\"./src/main.js\\\", output: { path: undefined, // 开发模式没有输出，不需要指定输出目录 filename: \\\"static/js/main.js\\\", // 将 js 文件输出到 static/js 目录中 // clean: true, // 开发模式没有输出，不需要清空输出结果 }, module: { rules: [ { oneOf: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: [\\\"style-loader\\\", \\\"css-loader\\\"], }, { test: /\\\\.less$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"less-loader\\\"], }, { test: /\\\\.s[ac]ss$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"sass-loader\\\"], }, { test: /\\\\.styl$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"stylus-loader\\\"], }, { test: /\\\\.(png|jpe?g|gif|webp)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, generator: { // 将图片文件输出到 static/imgs 目录中 // 将图片文件命名 [hash:8][ext][query] // [hash:8]: hash值取8位 // [ext]: 使用之前的文件扩展名 // [query]: 添加之前的query参数 filename: \\\"static/imgs/[hash:8][ext][query]\\\", }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", generator: { filename: \\\"static/media/[hash:8][ext][query]\\\", }, }, { test: /\\\\.js$/, // exclude: /node_modules/, // 排除node_modules代码不编译 include: path.resolve(__dirname, \\\"../src\\\"), // 也可以用包含 loader: \\\"babel-loader\\\", }, ], }, ], }, plugins: [ new ESLintWebpackPlugin({ // 指定检查文件的根目录 context: path.resolve(__dirname, \\\"../src\\\"), exclude: \\\"node_modules\\\", // 默认值 }), new HtmlWebpackPlugin({ // 以 public/index.html 为模板创建文件 // 新的html文件有两个特点：1. 内容和源文件一致 2. 自动引入打包生成的js等资源 template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), ], // 开发服务器 devServer: { host: \\\"localhost\\\", // 启动服务器域名 port: \\\"3000\\\", // 启动服务器端口号 open: true, // 是否自动打开浏览器 hot: true, // 开启HMR功能 }, mode: \\\"development\\\", devtool: \\\"cheap-module-source-map\\\", }; \",\"生产模式也是如此配置。\",\"主要是针对js，js只有eslint和babel在干活，所以只处理babel和eslint。\"]},\"367\":{\"h\":\"Cache\"},\"368\":{\"h\":\"为什么\",\"t\":[\"每次打包时 js 文件都要经过 Eslint 检查 和 Babel 编译，速度比较慢。\",\"我们可以缓存之前的 Eslint 检查 和 Babel 编译结果，这样第二次打包时速度就会更快了。\"]},\"369\":{\"h\":\"是什么\",\"t\":[\"对 Eslint 检查 和 Babel 编译结果进行缓存。\"]},\"370\":{\"h\":\"怎么用\",\"t\":[\"const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); module.exports = { entry: \\\"./src/main.js\\\", output: { path: undefined, // 开发模式没有输出，不需要指定输出目录 filename: \\\"static/js/main.js\\\", // 将 js 文件输出到 static/js 目录中 // clean: true, // 开发模式没有输出，不需要清空输出结果 }, module: { rules: [ { oneOf: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: [\\\"style-loader\\\", \\\"css-loader\\\"], }, { test: /\\\\.less$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"less-loader\\\"], }, { test: /\\\\.s[ac]ss$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"sass-loader\\\"], }, { test: /\\\\.styl$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"stylus-loader\\\"], }, { test: /\\\\.(png|jpe?g|gif|webp)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, generator: { // 将图片文件输出到 static/imgs 目录中 // 将图片文件命名 [hash:8][ext][query] // [hash:8]: hash值取8位 // [ext]: 使用之前的文件扩展名 // [query]: 添加之前的query参数 filename: \\\"static/imgs/[hash:8][ext][query]\\\", }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", generator: { filename: \\\"static/media/[hash:8][ext][query]\\\", }, }, { test: /\\\\.js$/, // exclude: /node_modules/, // 排除node_modules代码不编译 include: path.resolve(__dirname, \\\"../src\\\"), // 也可以用包含 loader: \\\"babel-loader\\\", options: { cacheDirectory: true, // 开启babel编译缓存 cacheCompression: false, // 缓存文件不要压缩 }, }, ], }, ], }, plugins: [ new ESLintWebpackPlugin({ // 指定检查文件的根目录 context: path.resolve(__dirname, \\\"../src\\\"), exclude: \\\"node_modules\\\", // 默认值 cache: true, // 开启缓存 // 缓存目录 cacheLocation: path.resolve( __dirname, \\\"../node_modules/.cache/.eslintcache\\\" ), }), new HtmlWebpackPlugin({ // 以 public/index.html 为模板创建文件 // 新的html文件有两个特点：1. 内容和源文件一致 2. 自动引入打包生成的js等资源 template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), ], // 开发服务器 devServer: { host: \\\"localhost\\\", // 启动服务器域名 port: \\\"3000\\\", // 启动服务器端口号 open: true, // 是否自动打开浏览器 hot: true, // 开启HMR功能 }, mode: \\\"development\\\", devtool: \\\"cheap-module-source-map\\\", }; \"]},\"371\":{\"h\":\"Thread\"},\"372\":{\"h\":\"为什么\",\"t\":[\"当项目越来越庞大时，打包速度越来越慢，甚至于需要一个下午才能打包出来代码。这个速度是比较慢的。\",\"我们想要继续提升打包速度，其实就是要提升 js 的打包速度，因为其他文件都比较少。\",\"而对 js 文件处理主要就是 eslint 、babel、Terser 三个工具，所以我们要提升它们的运行速度。\",\"我们可以开启多进程同时处理 js 文件，这样速度就比之前的单进程打包更快了。\"]},\"373\":{\"h\":\"是什么\",\"t\":[\"多进程打包：开启电脑的多个进程同时干一件事，速度更快。\",\"需要注意：请仅在特别耗时的操作中使用，因为每个进程启动就有大约为 600ms 左右开销。\"]},\"374\":{\"h\":\"怎么用\",\"t\":[\"我们启动进程的数量就是我们 CPU 的核数。\",\"如何获取 CPU 的核数，因为每个电脑都不一样。\",\"// nodejs核心模块，直接使用 const os = require(\\\"os\\\"); // cpu核数 const threads = os.cpus().length; \",\"下载包\",\"npm i thread-loader -D \",\"使用\",\"const os = require(\\\"os\\\"); const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); const MiniCssExtractPlugin = require(\\\"mini-css-extract-plugin\\\"); const CssMinimizerPlugin = require(\\\"css-minimizer-webpack-plugin\\\"); const TerserPlugin = require(\\\"terser-webpack-plugin\\\"); // cpu核数 const threads = os.cpus().length; // 获取处理样式的Loaders const getStyleLoaders = (preProcessor) => { return [ MiniCssExtractPlugin.loader, \\\"css-loader\\\", { loader: \\\"postcss-loader\\\", options: { postcssOptions: { plugins: [ \\\"postcss-preset-env\\\", // 能解决大多数样式兼容性问题 ], }, }, }, preProcessor, ].filter(Boolean); }; module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"../dist\\\"), // 生产模式需要输出 filename: \\\"static/js/main.js\\\", // 将 js 文件输出到 static/js 目录中 clean: true, }, module: { rules: [ { oneOf: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: getStyleLoaders(), }, { test: /\\\\.less$/, use: getStyleLoaders(\\\"less-loader\\\"), }, { test: /\\\\.s[ac]ss$/, use: getStyleLoaders(\\\"sass-loader\\\"), }, { test: /\\\\.styl$/, use: getStyleLoaders(\\\"stylus-loader\\\"), }, { test: /\\\\.(png|jpe?g|gif|webp)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, generator: { // 将图片文件输出到 static/imgs 目录中 // 将图片文件命名 [hash:8][ext][query] // [hash:8]: hash值取8位 // [ext]: 使用之前的文件扩展名 // [query]: 添加之前的query参数 filename: \\\"static/imgs/[hash:8][ext][query]\\\", }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", generator: { filename: \\\"static/media/[hash:8][ext][query]\\\", }, }, { test: /\\\\.js$/, // exclude: /node_modules/, // 排除node_modules代码不编译 include: path.resolve(__dirname, \\\"../src\\\"), // 也可以用包含 use: [ { loader: \\\"thread-loader\\\", // 开启多进程 options: { workers: threads, // 数量 }, }, { loader: \\\"babel-loader\\\", options: { cacheDirectory: true, // 开启babel编译缓存 }, }, ], }, ], }, ], }, plugins: [ new ESLintWebpackPlugin({ // 指定检查文件的根目录 context: path.resolve(__dirname, \\\"../src\\\"), exclude: \\\"node_modules\\\", // 默认值 cache: true, // 开启缓存 // 缓存目录 cacheLocation: path.resolve( __dirname, \\\"../node_modules/.cache/.eslintcache\\\" ), threads, // 开启多进程 }), new HtmlWebpackPlugin({ // 以 public/index.html 为模板创建文件 // 新的html文件有两个特点：1. 内容和源文件一致 2. 自动引入打包生成的js等资源 template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), // 提取css成单独文件 new MiniCssExtractPlugin({ // 定义输出文件名和目录 filename: \\\"static/css/main.css\\\", }), // css压缩 // new CssMinimizerPlugin(), ], optimization: { minimize: true, minimizer: [ // css压缩也可以写到optimization.minimizer里面，效果一样的 new CssMinimizerPlugin(), // 当生产模式会默认开启TerserPlugin，但是我们需要进行其他配置，就要重新写了 new TerserPlugin({ parallel: threads // 开启多进程 }) ], }, // devServer: { // host: \\\"localhost\\\", // 启动服务器域名 // port: \\\"3000\\\", // 启动服务器端口号 // open: true, // 是否自动打开浏览器 // }, mode: \\\"production\\\", devtool: \\\"source-map\\\", }; \",\"我们目前打包的内容都很少，所以因为启动进程开销原因，使用多进程打包实际上会显著的让我们打包时间变得很长。\"]},\"375\":{\"h\":\"减少代码体积\"},\"376\":{\"h\":\"Tree Shaking\"},\"377\":{\"h\":\"为什么\",\"t\":[\"开发时我们定义了一些工具函数库，或者引用第三方工具函数库或组件库。\",\"如果没有特殊处理的话我们打包时会引入整个库，但是实际上可能我们可能只用上极小部分的功能。\",\"这样将整个库都打包进来，体积就太大了。\"]},\"378\":{\"h\":\"是什么\",\"t\":[\"Tree Shaking 是一个术语，通常用于描述移除 JavaScript 中的没有使用上的代码。\",\"注意：它依赖 ES Module。\"]},\"379\":{\"h\":\"怎么用\",\"t\":[\"Webpack 已经默认开启了这个功能，无需其他配置。\"]},\"380\":{\"h\":\"Babel\"},\"381\":{\"h\":\"为什么\",\"t\":[\"Babel 为编译的每个文件都插入了辅助代码，使代码体积过大！\",\"Babel 对一些公共方法使用了非常小的辅助代码，比如 _extend。默认情况下会被添加到每一个需要它的文件中。\",\"你可以将这些辅助代码作为一个独立模块，来避免重复引入。\"]},\"382\":{\"h\":\"是什么\",\"t\":[\"@babel/plugin-transform-runtime: 禁用了 Babel 自动对每个文件的 runtime 注入，而是引入 @babel/plugin-transform-runtime 并且使所有辅助代码从这里引用。\"]},\"383\":{\"h\":\"怎么用\",\"t\":[\"下载包\",\"npm i @babel/plugin-transform-runtime -D \",\"配置\",\"const os = require(\\\"os\\\"); const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); const MiniCssExtractPlugin = require(\\\"mini-css-extract-plugin\\\"); const CssMinimizerPlugin = require(\\\"css-minimizer-webpack-plugin\\\"); const TerserPlugin = require(\\\"terser-webpack-plugin\\\"); // cpu核数 const threads = os.cpus().length; // 获取处理样式的Loaders const getStyleLoaders = (preProcessor) => { return [ MiniCssExtractPlugin.loader, \\\"css-loader\\\", { loader: \\\"postcss-loader\\\", options: { postcssOptions: { plugins: [ \\\"postcss-preset-env\\\", // 能解决大多数样式兼容性问题 ], }, }, }, preProcessor, ].filter(Boolean); }; module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"../dist\\\"), // 生产模式需要输出 filename: \\\"static/js/main.js\\\", // 将 js 文件输出到 static/js 目录中 clean: true, }, module: { rules: [ { oneOf: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: getStyleLoaders(), }, { test: /\\\\.less$/, use: getStyleLoaders(\\\"less-loader\\\"), }, { test: /\\\\.s[ac]ss$/, use: getStyleLoaders(\\\"sass-loader\\\"), }, { test: /\\\\.styl$/, use: getStyleLoaders(\\\"stylus-loader\\\"), }, { test: /\\\\.(png|jpe?g|gif|webp)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, generator: { // 将图片文件输出到 static/imgs 目录中 // 将图片文件命名 [hash:8][ext][query] // [hash:8]: hash值取8位 // [ext]: 使用之前的文件扩展名 // [query]: 添加之前的query参数 filename: \\\"static/imgs/[hash:8][ext][query]\\\", }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", generator: { filename: \\\"static/media/[hash:8][ext][query]\\\", }, }, { test: /\\\\.js$/, // exclude: /node_modules/, // 排除node_modules代码不编译 include: path.resolve(__dirname, \\\"../src\\\"), // 也可以用包含 use: [ { loader: \\\"thread-loader\\\", // 开启多进程 options: { workers: threads, // 数量 }, }, { loader: \\\"babel-loader\\\", options: { cacheDirectory: true, // 开启babel编译缓存 cacheCompression: false, // 缓存文件不要压缩 plugins: [\\\"@babel/plugin-transform-runtime\\\"], // 减少代码体积 }, }, ], }, ], }, ], }, plugins: [ new ESLintWebpackPlugin({ // 指定检查文件的根目录 context: path.resolve(__dirname, \\\"../src\\\"), exclude: \\\"node_modules\\\", // 默认值 cache: true, // 开启缓存 // 缓存目录 cacheLocation: path.resolve( __dirname, \\\"../node_modules/.cache/.eslintcache\\\" ), threads, // 开启多进程 }), new HtmlWebpackPlugin({ // 以 public/index.html 为模板创建文件 // 新的html文件有两个特点：1. 内容和源文件一致 2. 自动引入打包生成的js等资源 template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), // 提取css成单独文件 new MiniCssExtractPlugin({ // 定义输出文件名和目录 filename: \\\"static/css/main.css\\\", }), // css压缩 // new CssMinimizerPlugin(), ], optimization: { minimizer: [ // css压缩也可以写到optimization.minimizer里面，效果一样的 new CssMinimizerPlugin(), // 当生产模式会默认开启TerserPlugin，但是我们需要进行其他配置，就要重新写了 new TerserPlugin({ parallel: threads, // 开启多进程 }), ] ], // devServer: { // host: \\\"localhost\\\", // 启动服务器域名 // port: \\\"3000\\\", // 启动服务器端口号 // open: true, // 是否自动打开浏览器 // }, mode: \\\"production\\\", devtool: \\\"source-map\\\", }; \"]},\"384\":{\"h\":\"Image Minimizer\"},\"385\":{\"h\":\"为什么\",\"t\":[\"开发如果项目中引用了较多图片，那么图片体积会比较大，将来请求速度比较慢。\",\"我们可以对图片进行压缩，减少图片体积。\",\"注意：如果项目中图片都是在线链接，那么就不需要了。本地项目静态图片才需要进行压缩。\"]},\"386\":{\"h\":\"是什么\",\"t\":[\"image-minimizer-webpack-plugin: 用来压缩图片的插件\"]},\"387\":{\"h\":\"怎么用\",\"t\":[\"下载包\",\"npm i image-minimizer-webpack-plugin imagemin -D \",\"还有剩下包需要下载，有两种模式：\",\"无损压缩\",\"npm install imagemin-gifsicle imagemin-jpegtran imagemin-optipng imagemin-svgo -D \",\"有损压缩\",\"npm install imagemin-gifsicle imagemin-mozjpeg imagemin-pngquant imagemin-svgo -D \",\"配置\",\"我们以无损压缩配置为例：\",\"const os = require(\\\"os\\\"); const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); const MiniCssExtractPlugin = require(\\\"mini-css-extract-plugin\\\"); const CssMinimizerPlugin = require(\\\"css-minimizer-webpack-plugin\\\"); const TerserPlugin = require(\\\"terser-webpack-plugin\\\"); const ImageMinimizerPlugin = require(\\\"image-minimizer-webpack-plugin\\\"); // cpu核数 const threads = os.cpus().length; // 获取处理样式的Loaders const getStyleLoaders = (preProcessor) => { return [ MiniCssExtractPlugin.loader, \\\"css-loader\\\", { loader: \\\"postcss-loader\\\", options: { postcssOptions: { plugins: [ \\\"postcss-preset-env\\\", // 能解决大多数样式兼容性问题 ], }, }, }, preProcessor, ].filter(Boolean); }; module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"../dist\\\"), // 生产模式需要输出 filename: \\\"static/js/main.js\\\", // 将 js 文件输出到 static/js 目录中 clean: true, }, module: { rules: [ { oneOf: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: getStyleLoaders(), }, { test: /\\\\.less$/, use: getStyleLoaders(\\\"less-loader\\\"), }, { test: /\\\\.s[ac]ss$/, use: getStyleLoaders(\\\"sass-loader\\\"), }, { test: /\\\\.styl$/, use: getStyleLoaders(\\\"stylus-loader\\\"), }, { test: /\\\\.(png|jpe?g|gif|svg)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, generator: { // 将图片文件输出到 static/imgs 目录中 // 将图片文件命名 [hash:8][ext][query] // [hash:8]: hash值取8位 // [ext]: 使用之前的文件扩展名 // [query]: 添加之前的query参数 filename: \\\"static/imgs/[hash:8][ext][query]\\\", }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", generator: { filename: \\\"static/media/[hash:8][ext][query]\\\", }, }, { test: /\\\\.js$/, // exclude: /node_modules/, // 排除node_modules代码不编译 include: path.resolve(__dirname, \\\"../src\\\"), // 也可以用包含 use: [ { loader: \\\"thread-loader\\\", // 开启多进程 options: { workers: threads, // 数量 }, }, { loader: \\\"babel-loader\\\", options: { cacheDirectory: true, // 开启babel编译缓存 cacheCompression: false, // 缓存文件不要压缩 plugins: [\\\"@babel/plugin-transform-runtime\\\"], // 减少代码体积 }, }, ], }, ], }, ], }, plugins: [ new ESLintWebpackPlugin({ // 指定检查文件的根目录 context: path.resolve(__dirname, \\\"../src\\\"), exclude: \\\"node_modules\\\", // 默认值 cache: true, // 开启缓存 // 缓存目录 cacheLocation: path.resolve( __dirname, \\\"../node_modules/.cache/.eslintcache\\\" ), threads, // 开启多进程 }), new HtmlWebpackPlugin({ // 以 public/index.html 为模板创建文件 // 新的html文件有两个特点：1. 内容和源文件一致 2. 自动引入打包生成的js等资源 template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), // 提取css成单独文件 new MiniCssExtractPlugin({ // 定义输出文件名和目录 filename: \\\"static/css/main.css\\\", }), // css压缩 // new CssMinimizerPlugin(), ], optimization: { minimizer: [ // css压缩也可以写到optimization.minimizer里面，效果一样的 new CssMinimizerPlugin(), // 当生产模式会默认开启TerserPlugin，但是我们需要进行其他配置，就要重新写了 new TerserPlugin({ parallel: threads, // 开启多进程 }), // 压缩图片 new ImageMinimizerPlugin({ minimizer: { implementation: ImageMinimizerPlugin.imageminGenerate, options: { plugins: [ [\\\"gifsicle\\\", { interlaced: true }], [\\\"jpegtran\\\", { progressive: true }], [\\\"optipng\\\", { optimizationLevel: 5 }], [ \\\"svgo\\\", { plugins: [ \\\"preset-default\\\", \\\"prefixIds\\\", { name: \\\"sortAttrs\\\", params: { xmlnsOrder: \\\"alphabetical\\\", }, }, ], }, ], ], }, }, }), ], }, // devServer: { // host: \\\"localhost\\\", // 启动服务器域名 // port: \\\"3000\\\", // 启动服务器端口号 // open: true, // 是否自动打开浏览器 // }, mode: \\\"production\\\", devtool: \\\"source-map\\\", }; \",\"打包时会出现报错：\",\"Error: Error with 'src\\\\images\\\\1.jpeg': '\\\"C:\\\\Users\\\\86176\\\\Desktop\\\\webpack\\\\webpack_code\\\\node_modules\\\\jpegtran-bin\\\\vendor\\\\jpegtran.exe\\\"' Error with 'src\\\\images\\\\3.gif': spawn C:\\\\Users\\\\86176\\\\Desktop\\\\webpack\\\\webpack_code\\\\node_modules\\\\optipng-bin\\\\vendor\\\\optipng.exe ENOENT \",\"我们需要安装两个文件到 node_modules 中才能解决：\",\"jpegtran.exe\",\"需要复制到 node_modules\\\\jpegtran-bin\\\\vendor 下面\",\"jpegtran 官网地址\",\"optipng.exe\",\"需要复制到 node_modules\\\\optipng-bin\\\\vendor 下面\",\"OptiPNG 官网地址\"]},\"388\":{\"h\":\"优化代码运行性能\"},\"389\":{\"h\":\"Code Split\"},\"390\":{\"h\":\"为什么\",\"t\":[\"打包代码时会将所有 js 文件打包到一个文件中，体积太大了。我们如果只要渲染首页，就应该只加载首页的 js 文件，其他文件不应该加载。\",\"所以我们需要将打包生成的文件进行代码分割，生成多个 js 文件，渲染哪个页面就只加载某个 js 文件，这样加载的资源就少，速度就更快。\"]},\"391\":{\"h\":\"是什么\",\"t\":[\"代码分割（Code Split）主要做了两件事：\",\"分割文件：将打包生成的文件进行分割，生成多个 js 文件。\",\"按需加载：需要哪个文件就加载哪个文件。\"]},\"392\":{\"h\":\"怎么用\",\"t\":[\"代码分割实现方式有不同的方式，为了更加方便体现它们之间的差异，我们会分别创建新的文件来演示\"]},\"393\":{\"h\":\"1. 多入口\",\"t\":[\"文件目录\",\"├── public ├── src | ├── app.js | └── main.js ├── package.json └── webpack.config.js \",\"下载包\",\"npm i webpack webpack-cli html-webpack-plugin -D \",\"新建文件\",\"内容无关紧要，主要观察打包输出的结果\",\"app.js\",\"console.log(\\\"hello app\\\"); \",\"main.js\",\"console.log(\\\"hello main\\\"); \",\"配置\",\"// webpack.config.js const path = require(\\\"path\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); module.exports = { // 单入口 // entry: './src/main.js', // 多入口 entry: { main: \\\"./src/main.js\\\", app: \\\"./src/app.js\\\", }, output: { path: path.resolve(__dirname, \\\"./dist\\\"), // [name]是webpack命名规则，使用chunk的name作为输出的文件名。 // 什么是chunk？打包的资源就是chunk，输出出去叫bundle。 // chunk的name是啥呢？ 比如： entry中xxx: \\\"./src/xxx.js\\\", name就是xxx。注意是前面的xxx，和文件名无关。 // 为什么需要这样命名呢？如果还是之前写法main.js，那么打包生成两个js文件都会叫做main.js会发生覆盖。(实际上会直接报错的) filename: \\\"js/[name].js\\\", clear: true, }, plugins: [ new HtmlWebpackPlugin({ template: \\\"./public/index.html\\\", }), ], mode: \\\"production\\\", }; \",\"运行指令\",\"npx webpack \",\"此时在 dist 目录我们能看到输出了两个 js 文件。\",\"总结：配置了几个入口，至少输出几个 js 文件。\"]},\"394\":{\"h\":\"2. 提取重复代码\",\"t\":[\"如果多入口文件中都引用了同一份代码，我们不希望这份代码被打包到两个文件中，导致代码重复，体积更大。\",\"我们需要提取多入口的重复代码，只打包生成一个 js 文件，其他文件引用它就好。\",\"修改文件\",\"app.js\",\"import { sum } from \\\"./math\\\"; console.log(\\\"hello app\\\"); console.log(sum(1, 2, 3, 4)); \",\"main.js\",\"import { sum } from \\\"./math\\\"; console.log(\\\"hello main\\\"); console.log(sum(1, 2, 3, 4, 5)); \",\"math.js\",\"export const sum = (...args) => { return args.reduce((p, c) => p + c, 0); }; \",\"修改配置文件\",\"// webpack.config.js const path = require(\\\"path\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); module.exports = { // 单入口 // entry: './src/main.js', // 多入口 entry: { main: \\\"./src/main.js\\\", app: \\\"./src/app.js\\\", }, output: { path: path.resolve(__dirname, \\\"./dist\\\"), // [name]是webpack命名规则，使用chunk的name作为输出的文件名。 // 什么是chunk？打包的资源就是chunk，输出出去叫bundle。 // chunk的name是啥呢？ 比如： entry中xxx: \\\"./src/xxx.js\\\", name就是xxx。注意是前面的xxx，和文件名无关。 // 为什么需要这样命名呢？如果还是之前写法main.js，那么打包生成两个js文件都会叫做main.js会发生覆盖。(实际上会直接报错的) filename: \\\"js/[name].js\\\", clean: true, }, plugins: [ new HtmlWebpackPlugin({ template: \\\"./public/index.html\\\", }), ], mode: \\\"production\\\", optimization: { // 代码分割配置 splitChunks: { chunks: \\\"all\\\", // 对所有模块都进行分割 // 以下是默认值 // minSize: 20000, // 分割代码最小的大小 // minRemainingSize: 0, // 类似于minSize，最后确保提取的文件大小不能为0 // minChunks: 1, // 至少被引用的次数，满足条件才会代码分割 // maxAsyncRequests: 30, // 按需加载时并行加载的文件的最大数量 // maxInitialRequests: 30, // 入口js文件最大并行请求数量 // enforceSizeThreshold: 50000, // 超过50kb一定会单独打包（此时会忽略minRemainingSize、maxAsyncRequests、maxInitialRequests） // cacheGroups: { // 组，哪些模块要打包到一个组 // defaultVendors: { // 组名 // test: /[\\\\\\\\/]node_modules[\\\\\\\\/]/, // 需要打包到一起的模块 // priority: -10, // 权重（越大越高） // reuseExistingChunk: true, // 如果当前 chunk 包含已从主 bundle 中拆分出的模块，则它将被重用，而不是生成新的模块 // }, // default: { // 其他没有写的配置会使用上面的默认值 // minChunks: 2, // 这里的minChunks权重更大 // priority: -20, // reuseExistingChunk: true, // }, // }, // 修改配置 cacheGroups: { // 组，哪些模块要打包到一个组 // defaultVendors: { // 组名 // test: /[\\\\\\\\/]node_modules[\\\\\\\\/]/, // 需要打包到一起的模块 // priority: -10, // 权重（越大越高） // reuseExistingChunk: true, // 如果当前 chunk 包含已从主 bundle 中拆分出的模块，则它将被重用，而不是生成新的模块 // }, default: { // 其他没有写的配置会使用上面的默认值 minSize: 0, // 我们定义的文件体积太小了，所以要改打包的最小文件体积 minChunks: 2, priority: -20, reuseExistingChunk: true, }, }, }, }, }; \",\"运行指令\",\"npx webpack \",\"此时我们会发现生成 3 个 js 文件，其中有一个就是提取的公共模块。\"]},\"395\":{\"h\":\"3. 按需加载，动态导入\",\"t\":[\"想要实现按需加载，动态导入模块。还需要额外配置：\",\"修改文件\",\"main.js\",\"console.log(\\\"hello main\\\"); document.getElementById(\\\"btn\\\").onclick = function () { // 动态导入 --> 实现按需加载 // 即使只被引用了一次，也会代码分割 import(\\\"./math.js\\\").then(({ sum }) => { alert(sum(1, 2, 3, 4, 5)); }); }; \",\"app.js\",\"console.log(\\\"hello app\\\"); \",\"public/index.html\",\"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\" /> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\" /> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\" /> <title>Code Split</title> </head> <body> <h1>hello webpack</h1> <button id=\\\"btn\\\">计算</button> </body> </html> \",\"运行指令\",\"npx webpack \",\"我们可以发现，一旦通过 import 动态导入语法导入模块，模块就被代码分割，同时也能按需加载了。\"]},\"396\":{\"h\":\"4. 单入口\",\"t\":[\"开发时我们可能是单页面应用（SPA），只有一个入口（单入口）。那么我们需要这样配置：\",\"const path = require(\\\"path\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); module.exports = { // 单入口 entry: \\\"./src/main.js\\\", // 多入口 // entry: { // main: \\\"./src/main.js\\\", // app: \\\"./src/app.js\\\", // }, output: { path: path.resolve(__dirname, \\\"./dist\\\"), // [name]是webpack命名规则，使用chunk的name作为输出的文件名。 // 什么是chunk？打包的资源就是chunk，输出出去叫bundle。 // chunk的name是啥呢？ 比如： entry中xxx: \\\"./src/xxx.js\\\", name就是xxx。注意是前面的xxx，和文件名无关。 // 为什么需要这样命名呢？如果还是之前写法main.js，那么打包生成两个js文件都会叫做main.js会发生覆盖。(实际上会直接报错的) filename: \\\"js/[name].js\\\", clean: true, }, plugins: [ new HtmlWebpackPlugin({ template: \\\"./public/index.html\\\", }), ], mode: \\\"production\\\", optimization: { // 代码分割配置 splitChunks: { chunks: \\\"all\\\", // 对所有模块都进行分割 // 以下是默认值 // minSize: 20000, // 分割代码最小的大小 // minRemainingSize: 0, // 类似于minSize，最后确保提取的文件大小不能为0 // minChunks: 1, // 至少被引用的次数，满足条件才会代码分割 // maxAsyncRequests: 30, // 按需加载时并行加载的文件的最大数量 // maxInitialRequests: 30, // 入口js文件最大并行请求数量 // enforceSizeThreshold: 50000, // 超过50kb一定会单独打包（此时会忽略minRemainingSize、maxAsyncRequests、maxInitialRequests） // cacheGroups: { // 组，哪些模块要打包到一个组 // defaultVendors: { // 组名 // test: /[\\\\\\\\/]node_modules[\\\\\\\\/]/, // 需要打包到一起的模块 // priority: -10, // 权重（越大越高） // reuseExistingChunk: true, // 如果当前 chunk 包含已从主 bundle 中拆分出的模块，则它将被重用，而不是生成新的模块 // }, // default: { // 其他没有写的配置会使用上面的默认值 // minChunks: 2, // 这里的minChunks权重更大 // priority: -20, // reuseExistingChunk: true, // }, // }, }, }; \"]},\"397\":{\"h\":\"5. 更新配置\",\"t\":[\"最终我们会使用单入口+代码分割+动态导入方式来进行配置。更新之前的配置文件。\",\"// webpack.prod.js const os = require(\\\"os\\\"); const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); const MiniCssExtractPlugin = require(\\\"mini-css-extract-plugin\\\"); const CssMinimizerPlugin = require(\\\"css-minimizer-webpack-plugin\\\"); const TerserPlugin = require(\\\"terser-webpack-plugin\\\"); const ImageMinimizerPlugin = require(\\\"image-minimizer-webpack-plugin\\\"); // cpu核数 const threads = os.cpus().length; // 获取处理样式的Loaders const getStyleLoaders = (preProcessor) => { return [ MiniCssExtractPlugin.loader, \\\"css-loader\\\", { loader: \\\"postcss-loader\\\", options: { postcssOptions: { plugins: [ \\\"postcss-preset-env\\\", // 能解决大多数样式兼容性问题 ], }, }, }, preProcessor, ].filter(Boolean); }; module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"../dist\\\"), // 生产模式需要输出 filename: \\\"static/js/main.js\\\", // 将 js 文件输出到 static/js 目录中 clean: true, }, module: { rules: [ { oneOf: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: getStyleLoaders(), }, { test: /\\\\.less$/, use: getStyleLoaders(\\\"less-loader\\\"), }, { test: /\\\\.s[ac]ss$/, use: getStyleLoaders(\\\"sass-loader\\\"), }, { test: /\\\\.styl$/, use: getStyleLoaders(\\\"stylus-loader\\\"), }, { test: /\\\\.(png|jpe?g|gif|svg)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, generator: { // 将图片文件输出到 static/imgs 目录中 // 将图片文件命名 [hash:8][ext][query] // [hash:8]: hash值取8位 // [ext]: 使用之前的文件扩展名 // [query]: 添加之前的query参数 filename: \\\"static/imgs/[hash:8][ext][query]\\\", }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", generator: { filename: \\\"static/media/[hash:8][ext][query]\\\", }, }, { test: /\\\\.js$/, // exclude: /node_modules/, // 排除node_modules代码不编译 include: path.resolve(__dirname, \\\"../src\\\"), // 也可以用包含 use: [ { loader: \\\"thread-loader\\\", // 开启多进程 options: { workers: threads, // 数量 }, }, { loader: \\\"babel-loader\\\", options: { cacheDirectory: true, // 开启babel编译缓存 cacheCompression: false, // 缓存文件不要压缩 plugins: [\\\"@babel/plugin-transform-runtime\\\"], // 减少代码体积 }, }, ], }, ], }, ], }, plugins: [ new ESLintWebpackPlugin({ // 指定检查文件的根目录 context: path.resolve(__dirname, \\\"../src\\\"), exclude: \\\"node_modules\\\", // 默认值 cache: true, // 开启缓存 // 缓存目录 cacheLocation: path.resolve( __dirname, \\\"../node_modules/.cache/.eslintcache\\\" ), threads, // 开启多进程 }), new HtmlWebpackPlugin({ // 以 public/index.html 为模板创建文件 // 新的html文件有两个特点：1. 内容和源文件一致 2. 自动引入打包生成的js等资源 template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), // 提取css成单独文件 new MiniCssExtractPlugin({ // 定义输出文件名和目录 filename: \\\"static/css/main.css\\\", }), // css压缩 // new CssMinimizerPlugin(), ], optimization: { minimizer: [ // css压缩也可以写到optimization.minimizer里面，效果一样的 new CssMinimizerPlugin(), // 当生产模式会默认开启TerserPlugin，但是我们需要进行其他配置，就要重新写了 new TerserPlugin({ parallel: threads, // 开启多进程 }), // 压缩图片 new ImageMinimizerPlugin({ minimizer: { implementation: ImageMinimizerPlugin.imageminGenerate, options: { plugins: [ [\\\"gifsicle\\\", { interlaced: true }], [\\\"jpegtran\\\", { progressive: true }], [\\\"optipng\\\", { optimizationLevel: 5 }], [ \\\"svgo\\\", { plugins: [ \\\"preset-default\\\", \\\"prefixIds\\\", { name: \\\"sortAttrs\\\", params: { xmlnsOrder: \\\"alphabetical\\\", }, }, ], }, ], ], }, }, }), ], // 代码分割配置 splitChunks: { chunks: \\\"all\\\", // 对所有模块都进行分割 // 其他内容用默认配置即可 }, }, // devServer: { // host: \\\"localhost\\\", // 启动服务器域名 // port: \\\"3000\\\", // 启动服务器端口号 // open: true, // 是否自动打开浏览器 // }, mode: \\\"production\\\", devtool: \\\"source-map\\\", }; \"]},\"398\":{\"h\":\"6. 给动态导入文件取名称\",\"t\":[\"修改文件\",\"main.js\",\"import sum from \\\"./js/sum\\\"; // 引入资源，Webpack才会对其打包 import \\\"./css/iconfont.css\\\"; import \\\"./css/index.css\\\"; import \\\"./less/index.less\\\"; import \\\"./sass/index.sass\\\"; import \\\"./sass/index.scss\\\"; import \\\"./styl/index.styl\\\"; const result2 = sum(1, 2, 3, 4); console.log(result2); // 以下代码生产模式下会删除 if (module.hot) { module.hot.accept(\\\"./js/sum.js\\\", function (sum) { const result2 = sum(1, 2, 3, 4); console.log(result2); }); } document.getElementById(\\\"btn\\\").onClick = function () { // eslint会对动态导入语法报错，需要修改eslint配置文件 // webpackChunkName: \\\"math\\\"：这是webpack动态导入模块命名的方式 // \\\"math\\\"将来就会作为[name]的值显示。 import(/* webpackChunkName: \\\"math\\\" */ \\\"./js/math.js\\\").then(({ count }) => { console.log(count(2, 1)); }); }; \",\"eslint 配置\",\"下载包\",\"npm i eslint-plugin-import -D \",\"配置\",\"// .eslintrc.js module.exports = { // 继承 Eslint 规则 extends: [\\\"eslint:recommended\\\"], env: { node: true, // 启用node中全局变量 browser: true, // 启用浏览器中全局变量 }, plugins: [\\\"import\\\"], // 解决动态导入import语法报错问题 --> 实际使用eslint-plugin-import的规则解决的 parserOptions: { ecmaVersion: 6, sourceType: \\\"module\\\", }, rules: { \\\"no-var\\\": 2, // 不能使用 var 定义变量 }, }; \",\"统一命名配置\",\"const os = require(\\\"os\\\"); const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); const MiniCssExtractPlugin = require(\\\"mini-css-extract-plugin\\\"); const CssMinimizerPlugin = require(\\\"css-minimizer-webpack-plugin\\\"); const TerserPlugin = require(\\\"terser-webpack-plugin\\\"); const ImageMinimizerPlugin = require(\\\"image-minimizer-webpack-plugin\\\"); // cpu核数 const threads = os.cpus().length; // 获取处理样式的Loaders const getStyleLoaders = (preProcessor) => { return [ MiniCssExtractPlugin.loader, \\\"css-loader\\\", { loader: \\\"postcss-loader\\\", options: { postcssOptions: { plugins: [ \\\"postcss-preset-env\\\", // 能解决大多数样式兼容性问题 ], }, }, }, preProcessor, ].filter(Boolean); }; module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"../dist\\\"), // 生产模式需要输出 filename: \\\"static/js/[name].js\\\", // 入口文件打包输出资源命名方式 chunkFilename: \\\"static/js/[name].chunk.js\\\", // 动态导入输出资源命名方式 assetModuleFilename: \\\"static/media/[name].[hash][ext]\\\", // 图片、字体等资源命名方式（注意用hash） clean: true, }, module: { rules: [ { oneOf: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: getStyleLoaders(), }, { test: /\\\\.less$/, use: getStyleLoaders(\\\"less-loader\\\"), }, { test: /\\\\.s[ac]ss$/, use: getStyleLoaders(\\\"sass-loader\\\"), }, { test: /\\\\.styl$/, use: getStyleLoaders(\\\"stylus-loader\\\"), }, { test: /\\\\.(png|jpe?g|gif|svg)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, // generator: { // // 将图片文件输出到 static/imgs 目录中 // // 将图片文件命名 [hash:8][ext][query] // // [hash:8]: hash值取8位 // // [ext]: 使用之前的文件扩展名 // // [query]: 添加之前的query参数 // filename: \\\"static/imgs/[hash:8][ext][query]\\\", // }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", // generator: { // filename: \\\"static/media/[hash:8][ext][query]\\\", // }, }, { test: /\\\\.js$/, // exclude: /node_modules/, // 排除node_modules代码不编译 include: path.resolve(__dirname, \\\"../src\\\"), // 也可以用包含 use: [ { loader: \\\"thread-loader\\\", // 开启多进程 options: { workers: threads, // 数量 }, }, { loader: \\\"babel-loader\\\", options: { cacheDirectory: true, // 开启babel编译缓存 cacheCompression: false, // 缓存文件不要压缩 plugins: [\\\"@babel/plugin-transform-runtime\\\"], // 减少代码体积 }, }, ], }, ], }, ], }, plugins: [ new ESLintWebpackPlugin({ // 指定检查文件的根目录 context: path.resolve(__dirname, \\\"../src\\\"), exclude: \\\"node_modules\\\", // 默认值 cache: true, // 开启缓存 // 缓存目录 cacheLocation: path.resolve( __dirname, \\\"../node_modules/.cache/.eslintcache\\\" ), threads, // 开启多进程 }), new HtmlWebpackPlugin({ // 以 public/index.html 为模板创建文件 // 新的html文件有两个特点：1. 内容和源文件一致 2. 自动引入打包生成的js等资源 template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), // 提取css成单独文件 new MiniCssExtractPlugin({ // 定义输出文件名和目录 filename: \\\"static/css/[name].css\\\", chunkFilename: \\\"static/css/[name].chunk.css\\\", }), // css压缩 // new CssMinimizerPlugin(), ], optimization: { minimizer: [ // css压缩也可以写到optimization.minimizer里面，效果一样的 new CssMinimizerPlugin(), // 当生产模式会默认开启TerserPlugin，但是我们需要进行其他配置，就要重新写了 new TerserPlugin({ parallel: threads, // 开启多进程 }), // 压缩图片 new ImageMinimizerPlugin({ minimizer: { implementation: ImageMinimizerPlugin.imageminGenerate, options: { plugins: [ [\\\"gifsicle\\\", { interlaced: true }], [\\\"jpegtran\\\", { progressive: true }], [\\\"optipng\\\", { optimizationLevel: 5 }], [ \\\"svgo\\\", { plugins: [ \\\"preset-default\\\", \\\"prefixIds\\\", { name: \\\"sortAttrs\\\", params: { xmlnsOrder: \\\"alphabetical\\\", }, }, ], }, ], ], }, }, }), ], // 代码分割配置 splitChunks: { chunks: \\\"all\\\", // 对所有模块都进行分割 // 其他内容用默认配置即可 }, }, // devServer: { // host: \\\"localhost\\\", // 启动服务器域名 // port: \\\"3000\\\", // 启动服务器端口号 // open: true, // 是否自动打开浏览器 // }, mode: \\\"production\\\", devtool: \\\"source-map\\\", }; \",\"运行指令\",\"npx webpack \",\"观察打包输出 js 文件名称\"]},\"399\":{\"h\":\"介绍\",\"t\":[\"本章节主要介绍 Webpack 高级配置。\",\"所谓高级配置其实就是进行 Webpack 优化，让我们代码在编译/运行时性能更好~\",\"我们会从以下角度来进行优化：\",\"提升开发体验\",\"提升打包构建速度\",\"减少代码体积\",\"优化代码运行性能\"]},\"400\":{\"h\":\"优化代码运行性能\"},\"401\":{\"h\":\"Code Split\"},\"402\":{\"h\":\"为什么\",\"t\":[\"打包代码时会将所有 js 文件打包到一个文件中，体积太大了。我们如果只要渲染首页，就应该只加载首页的 js 文件，其他文件不应该加载。\",\"所以我们需要将打包生成的文件进行代码分割，生成多个 js 文件，渲染哪个页面就只加载某个 js 文件，这样加载的资源就少，速度就更快。\"]},\"403\":{\"h\":\"是什么\",\"t\":[\"代码分割（Code Split）主要做了两件事：\",\"分割文件：将打包生成的文件进行分割，生成多个 js 文件。\",\"按需加载：需要哪个文件就加载哪个文件。\"]},\"404\":{\"h\":\"怎么用\",\"t\":[\"代码分割实现方式有不同的方式，为了更加方便体现它们之间的差异，我们会分别创建新的文件来演示\"]},\"405\":{\"h\":\"1. 多入口\",\"t\":[\"文件目录\",\"├── public ├── src | ├── app.js | └── main.js ├── package.json └── webpack.config.js \",\"下载包\",\"npm i webpack webpack-cli html-webpack-plugin -D \",\"新建文件\",\"内容无关紧要，主要观察打包输出的结果\",\"app.js\",\"console.log(\\\"hello app\\\"); \",\"main.js\",\"console.log(\\\"hello main\\\"); \",\"配置\",\"// webpack.config.js const path = require(\\\"path\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); module.exports = { // 单入口 // entry: './src/main.js', // 多入口 entry: { main: \\\"./src/main.js\\\", app: \\\"./src/app.js\\\", }, output: { path: path.resolve(__dirname, \\\"./dist\\\"), // [name]是webpack命名规则，使用chunk的name作为输出的文件名。 // 什么是chunk？打包的资源就是chunk，输出出去叫bundle。 // chunk的name是啥呢？ 比如： entry中xxx: \\\"./src/xxx.js\\\", name就是xxx。注意是前面的xxx，和文件名无关。 // 为什么需要这样命名呢？如果还是之前写法main.js，那么打包生成两个js文件都会叫做main.js会发生覆盖。(实际上会直接报错的) filename: \\\"js/[name].js\\\", clear: true, }, plugins: [ new HtmlWebpackPlugin({ template: \\\"./public/index.html\\\", }), ], mode: \\\"production\\\", }; \",\"运行指令\",\"npx webpack \",\"此时在 dist 目录我们能看到输出了两个 js 文件。\",\"总结：配置了几个入口，至少输出几个 js 文件。\"]},\"406\":{\"h\":\"2. 提取重复代码\",\"t\":[\"如果多入口文件中都引用了同一份代码，我们不希望这份代码被打包到两个文件中，导致代码重复，体积更大。\",\"我们需要提取多入口的重复代码，只打包生成一个 js 文件，其他文件引用它就好。\",\"修改文件\",\"app.js\",\"import { sum } from \\\"./math\\\"; console.log(\\\"hello app\\\"); console.log(sum(1, 2, 3, 4)); \",\"main.js\",\"import { sum } from \\\"./math\\\"; console.log(\\\"hello main\\\"); console.log(sum(1, 2, 3, 4, 5)); \",\"math.js\",\"export const sum = (...args) => { return args.reduce((p, c) => p + c, 0); }; \",\"修改配置文件\",\"// webpack.config.js const path = require(\\\"path\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); module.exports = { // 单入口 // entry: './src/main.js', // 多入口 entry: { main: \\\"./src/main.js\\\", app: \\\"./src/app.js\\\", }, output: { path: path.resolve(__dirname, \\\"./dist\\\"), // [name]是webpack命名规则，使用chunk的name作为输出的文件名。 // 什么是chunk？打包的资源就是chunk，输出出去叫bundle。 // chunk的name是啥呢？ 比如： entry中xxx: \\\"./src/xxx.js\\\", name就是xxx。注意是前面的xxx，和文件名无关。 // 为什么需要这样命名呢？如果还是之前写法main.js，那么打包生成两个js文件都会叫做main.js会发生覆盖。(实际上会直接报错的) filename: \\\"js/[name].js\\\", clean: true, }, plugins: [ new HtmlWebpackPlugin({ template: \\\"./public/index.html\\\", }), ], mode: \\\"production\\\", optimization: { // 代码分割配置 splitChunks: { chunks: \\\"all\\\", // 对所有模块都进行分割 // 以下是默认值 // minSize: 20000, // 分割代码最小的大小 // minRemainingSize: 0, // 类似于minSize，最后确保提取的文件大小不能为0 // minChunks: 1, // 至少被引用的次数，满足条件才会代码分割 // maxAsyncRequests: 30, // 按需加载时并行加载的文件的最大数量 // maxInitialRequests: 30, // 入口js文件最大并行请求数量 // enforceSizeThreshold: 50000, // 超过50kb一定会单独打包（此时会忽略minRemainingSize、maxAsyncRequests、maxInitialRequests） // cacheGroups: { // 组，哪些模块要打包到一个组 // defaultVendors: { // 组名 // test: /[\\\\\\\\/]node_modules[\\\\\\\\/]/, // 需要打包到一起的模块 // priority: -10, // 权重（越大越高） // reuseExistingChunk: true, // 如果当前 chunk 包含已从主 bundle 中拆分出的模块，则它将被重用，而不是生成新的模块 // }, // default: { // 其他没有写的配置会使用上面的默认值 // minChunks: 2, // 这里的minChunks权重更大 // priority: -20, // reuseExistingChunk: true, // }, // }, // 修改配置 cacheGroups: { // 组，哪些模块要打包到一个组 // defaultVendors: { // 组名 // test: /[\\\\\\\\/]node_modules[\\\\\\\\/]/, // 需要打包到一起的模块 // priority: -10, // 权重（越大越高） // reuseExistingChunk: true, // 如果当前 chunk 包含已从主 bundle 中拆分出的模块，则它将被重用，而不是生成新的模块 // }, default: { // 其他没有写的配置会使用上面的默认值 minSize: 0, // 我们定义的文件体积太小了，所以要改打包的最小文件体积 minChunks: 2, priority: -20, reuseExistingChunk: true, }, }, }, }, }; \",\"运行指令\",\"npx webpack \",\"此时我们会发现生成 3 个 js 文件，其中有一个就是提取的公共模块。\"]},\"407\":{\"h\":\"3. 按需加载，动态导入\",\"t\":[\"想要实现按需加载，动态导入模块。还需要额外配置：\",\"修改文件\",\"main.js\",\"console.log(\\\"hello main\\\"); document.getElementById(\\\"btn\\\").onclick = function () { // 动态导入 --> 实现按需加载 // 即使只被引用了一次，也会代码分割 import(\\\"./math.js\\\").then(({ sum }) => { alert(sum(1, 2, 3, 4, 5)); }); }; \",\"app.js\",\"console.log(\\\"hello app\\\"); \",\"public/index.html\",\"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\" /> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\" /> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\" /> <title>Code Split</title> </head> <body> <h1>hello webpack</h1> <button id=\\\"btn\\\">计算</button> </body> </html> \",\"运行指令\",\"npx webpack \",\"我们可以发现，一旦通过 import 动态导入语法导入模块，模块就被代码分割，同时也能按需加载了。\"]},\"408\":{\"h\":\"4. 单入口\",\"t\":[\"开发时我们可能是单页面应用（SPA），只有一个入口（单入口）。那么我们需要这样配置：\",\"const path = require(\\\"path\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); module.exports = { // 单入口 entry: \\\"./src/main.js\\\", // 多入口 // entry: { // main: \\\"./src/main.js\\\", // app: \\\"./src/app.js\\\", // }, output: { path: path.resolve(__dirname, \\\"./dist\\\"), // [name]是webpack命名规则，使用chunk的name作为输出的文件名。 // 什么是chunk？打包的资源就是chunk，输出出去叫bundle。 // chunk的name是啥呢？ 比如： entry中xxx: \\\"./src/xxx.js\\\", name就是xxx。注意是前面的xxx，和文件名无关。 // 为什么需要这样命名呢？如果还是之前写法main.js，那么打包生成两个js文件都会叫做main.js会发生覆盖。(实际上会直接报错的) filename: \\\"js/[name].js\\\", clean: true, }, plugins: [ new HtmlWebpackPlugin({ template: \\\"./public/index.html\\\", }), ], mode: \\\"production\\\", optimization: { // 代码分割配置 splitChunks: { chunks: \\\"all\\\", // 对所有模块都进行分割 // 以下是默认值 // minSize: 20000, // 分割代码最小的大小 // minRemainingSize: 0, // 类似于minSize，最后确保提取的文件大小不能为0 // minChunks: 1, // 至少被引用的次数，满足条件才会代码分割 // maxAsyncRequests: 30, // 按需加载时并行加载的文件的最大数量 // maxInitialRequests: 30, // 入口js文件最大并行请求数量 // enforceSizeThreshold: 50000, // 超过50kb一定会单独打包（此时会忽略minRemainingSize、maxAsyncRequests、maxInitialRequests） // cacheGroups: { // 组，哪些模块要打包到一个组 // defaultVendors: { // 组名 // test: /[\\\\\\\\/]node_modules[\\\\\\\\/]/, // 需要打包到一起的模块 // priority: -10, // 权重（越大越高） // reuseExistingChunk: true, // 如果当前 chunk 包含已从主 bundle 中拆分出的模块，则它将被重用，而不是生成新的模块 // }, // default: { // 其他没有写的配置会使用上面的默认值 // minChunks: 2, // 这里的minChunks权重更大 // priority: -20, // reuseExistingChunk: true, // }, // }, }, }; \"]},\"409\":{\"h\":\"5. 更新配置\",\"t\":[\"最终我们会使用单入口+代码分割+动态导入方式来进行配置。更新之前的配置文件。\",\"// webpack.prod.js const os = require(\\\"os\\\"); const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); const MiniCssExtractPlugin = require(\\\"mini-css-extract-plugin\\\"); const CssMinimizerPlugin = require(\\\"css-minimizer-webpack-plugin\\\"); const TerserPlugin = require(\\\"terser-webpack-plugin\\\"); const ImageMinimizerPlugin = require(\\\"image-minimizer-webpack-plugin\\\"); // cpu核数 const threads = os.cpus().length; // 获取处理样式的Loaders const getStyleLoaders = (preProcessor) => { return [ MiniCssExtractPlugin.loader, \\\"css-loader\\\", { loader: \\\"postcss-loader\\\", options: { postcssOptions: { plugins: [ \\\"postcss-preset-env\\\", // 能解决大多数样式兼容性问题 ], }, }, }, preProcessor, ].filter(Boolean); }; module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"../dist\\\"), // 生产模式需要输出 filename: \\\"static/js/main.js\\\", // 将 js 文件输出到 static/js 目录中 clean: true, }, module: { rules: [ { oneOf: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: getStyleLoaders(), }, { test: /\\\\.less$/, use: getStyleLoaders(\\\"less-loader\\\"), }, { test: /\\\\.s[ac]ss$/, use: getStyleLoaders(\\\"sass-loader\\\"), }, { test: /\\\\.styl$/, use: getStyleLoaders(\\\"stylus-loader\\\"), }, { test: /\\\\.(png|jpe?g|gif|svg)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, generator: { // 将图片文件输出到 static/imgs 目录中 // 将图片文件命名 [hash:8][ext][query] // [hash:8]: hash值取8位 // [ext]: 使用之前的文件扩展名 // [query]: 添加之前的query参数 filename: \\\"static/imgs/[hash:8][ext][query]\\\", }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", generator: { filename: \\\"static/media/[hash:8][ext][query]\\\", }, }, { test: /\\\\.js$/, // exclude: /node_modules/, // 排除node_modules代码不编译 include: path.resolve(__dirname, \\\"../src\\\"), // 也可以用包含 use: [ { loader: \\\"thread-loader\\\", // 开启多进程 options: { workers: threads, // 数量 }, }, { loader: \\\"babel-loader\\\", options: { cacheDirectory: true, // 开启babel编译缓存 cacheCompression: false, // 缓存文件不要压缩 plugins: [\\\"@babel/plugin-transform-runtime\\\"], // 减少代码体积 }, }, ], }, ], }, ], }, plugins: [ new ESLintWebpackPlugin({ // 指定检查文件的根目录 context: path.resolve(__dirname, \\\"../src\\\"), exclude: \\\"node_modules\\\", // 默认值 cache: true, // 开启缓存 // 缓存目录 cacheLocation: path.resolve( __dirname, \\\"../node_modules/.cache/.eslintcache\\\" ), threads, // 开启多进程 }), new HtmlWebpackPlugin({ // 以 public/index.html 为模板创建文件 // 新的html文件有两个特点：1. 内容和源文件一致 2. 自动引入打包生成的js等资源 template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), // 提取css成单独文件 new MiniCssExtractPlugin({ // 定义输出文件名和目录 filename: \\\"static/css/main.css\\\", }), // css压缩 // new CssMinimizerPlugin(), ], optimization: { minimizer: [ // css压缩也可以写到optimization.minimizer里面，效果一样的 new CssMinimizerPlugin(), // 当生产模式会默认开启TerserPlugin，但是我们需要进行其他配置，就要重新写了 new TerserPlugin({ parallel: threads, // 开启多进程 }), // 压缩图片 new ImageMinimizerPlugin({ minimizer: { implementation: ImageMinimizerPlugin.imageminGenerate, options: { plugins: [ [\\\"gifsicle\\\", { interlaced: true }], [\\\"jpegtran\\\", { progressive: true }], [\\\"optipng\\\", { optimizationLevel: 5 }], [ \\\"svgo\\\", { plugins: [ \\\"preset-default\\\", \\\"prefixIds\\\", { name: \\\"sortAttrs\\\", params: { xmlnsOrder: \\\"alphabetical\\\", }, }, ], }, ], ], }, }, }), ], // 代码分割配置 splitChunks: { chunks: \\\"all\\\", // 对所有模块都进行分割 // 其他内容用默认配置即可 }, }, // devServer: { // host: \\\"localhost\\\", // 启动服务器域名 // port: \\\"3000\\\", // 启动服务器端口号 // open: true, // 是否自动打开浏览器 // }, mode: \\\"production\\\", devtool: \\\"source-map\\\", }; \"]},\"410\":{\"h\":\"6. 给动态导入文件取名称\",\"t\":[\"修改文件\",\"main.js\",\"import sum from \\\"./js/sum\\\"; // 引入资源，Webpack才会对其打包 import \\\"./css/iconfont.css\\\"; import \\\"./css/index.css\\\"; import \\\"./less/index.less\\\"; import \\\"./sass/index.sass\\\"; import \\\"./sass/index.scss\\\"; import \\\"./styl/index.styl\\\"; const result2 = sum(1, 2, 3, 4); console.log(result2); // 以下代码生产模式下会删除 if (module.hot) { module.hot.accept(\\\"./js/sum.js\\\", function (sum) { const result2 = sum(1, 2, 3, 4); console.log(result2); }); } document.getElementById(\\\"btn\\\").onclick = function () { // eslint会对动态导入语法报错，需要修改eslint配置文件 // webpackChunkName: \\\"math\\\"：这是webpack动态导入模块命名的方式 // \\\"math\\\"将来就会作为[name]的值显示。 import(/* webpackChunkName: \\\"math\\\" */ \\\"./js/math.js\\\").then(({ count }) => { console.log(count(2, 1)); }); }; \",\"eslint 配置\",\"下载包\",\"npm i eslint-plugin-import -D \",\"配置\",\"// .eslintrc.js module.exports = { // 继承 Eslint 规则 extends: [\\\"eslint:recommended\\\"], env: { node: true, // 启用node中全局变量 browser: true, // 启用浏览器中全局变量 }, plugins: [\\\"import\\\"], // 解决动态导入import语法报错问题 --> 实际使用eslint-plugin-import的规则解决的 parserOptions: { ecmaVersion: 6, sourceType: \\\"module\\\", }, rules: { \\\"no-var\\\": 2, // 不能使用 var 定义变量 }, }; \",\"统一命名配置\",\"const os = require(\\\"os\\\"); const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); const MiniCssExtractPlugin = require(\\\"mini-css-extract-plugin\\\"); const CssMinimizerPlugin = require(\\\"css-minimizer-webpack-plugin\\\"); const TerserPlugin = require(\\\"terser-webpack-plugin\\\"); const ImageMinimizerPlugin = require(\\\"image-minimizer-webpack-plugin\\\"); // cpu核数 const threads = os.cpus().length; // 获取处理样式的Loaders const getStyleLoaders = (preProcessor) => { return [ MiniCssExtractPlugin.loader, \\\"css-loader\\\", { loader: \\\"postcss-loader\\\", options: { postcssOptions: { plugins: [ \\\"postcss-preset-env\\\", // 能解决大多数样式兼容性问题 ], }, }, }, preProcessor, ].filter(Boolean); }; module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"../dist\\\"), // 生产模式需要输出 filename: \\\"static/js/[name].js\\\", // 入口文件打包输出资源命名方式 chunkFilename: \\\"static/js/[name].chunk.js\\\", // 动态导入输出资源命名方式 assetModuleFilename: \\\"static/media/[name].[hash][ext]\\\", // 图片、字体等资源命名方式（注意用hash） clean: true, }, module: { rules: [ { oneOf: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: getStyleLoaders(), }, { test: /\\\\.less$/, use: getStyleLoaders(\\\"less-loader\\\"), }, { test: /\\\\.s[ac]ss$/, use: getStyleLoaders(\\\"sass-loader\\\"), }, { test: /\\\\.styl$/, use: getStyleLoaders(\\\"stylus-loader\\\"), }, { test: /\\\\.(png|jpe?g|gif|svg)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, // generator: { // // 将图片文件输出到 static/imgs 目录中 // // 将图片文件命名 [hash:8][ext][query] // // [hash:8]: hash值取8位 // // [ext]: 使用之前的文件扩展名 // // [query]: 添加之前的query参数 // filename: \\\"static/imgs/[hash:8][ext][query]\\\", // }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", // generator: { // filename: \\\"static/media/[hash:8][ext][query]\\\", // }, }, { test: /\\\\.js$/, // exclude: /node_modules/, // 排除node_modules代码不编译 include: path.resolve(__dirname, \\\"../src\\\"), // 也可以用包含 use: [ { loader: \\\"thread-loader\\\", // 开启多进程 options: { workers: threads, // 数量 }, }, { loader: \\\"babel-loader\\\", options: { cacheDirectory: true, // 开启babel编译缓存 cacheCompression: false, // 缓存文件不要压缩 plugins: [\\\"@babel/plugin-transform-runtime\\\"], // 减少代码体积 }, }, ], }, ], }, ], }, plugins: [ new ESLintWebpackPlugin({ // 指定检查文件的根目录 context: path.resolve(__dirname, \\\"../src\\\"), exclude: \\\"node_modules\\\", // 默认值 cache: true, // 开启缓存 // 缓存目录 cacheLocation: path.resolve( __dirname, \\\"../node_modules/.cache/.eslintcache\\\" ), threads, // 开启多进程 }), new HtmlWebpackPlugin({ // 以 public/index.html 为模板创建文件 // 新的html文件有两个特点：1. 内容和源文件一致 2. 自动引入打包生成的js等资源 template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), // 提取css成单独文件 new MiniCssExtractPlugin({ // 定义输出文件名和目录 filename: \\\"static/css/[name].css\\\", chunkFilename: \\\"static/css/[name].chunk.css\\\", }), // css压缩 // new CssMinimizerPlugin(), ], optimization: { minimizer: [ // css压缩也可以写到optimization.minimizer里面，效果一样的 new CssMinimizerPlugin(), // 当生产模式会默认开启TerserPlugin，但是我们需要进行其他配置，就要重新写了 new TerserPlugin({ parallel: threads, // 开启多进程 }), // 压缩图片 new ImageMinimizerPlugin({ minimizer: { implementation: ImageMinimizerPlugin.imageminGenerate, options: { plugins: [ [\\\"gifsicle\\\", { interlaced: true }], [\\\"jpegtran\\\", { progressive: true }], [\\\"optipng\\\", { optimizationLevel: 5 }], [ \\\"svgo\\\", { plugins: [ \\\"preset-default\\\", \\\"prefixIds\\\", { name: \\\"sortAttrs\\\", params: { xmlnsOrder: \\\"alphabetical\\\", }, }, ], }, ], ], }, }, }), ], // 代码分割配置 splitChunks: { chunks: \\\"all\\\", // 对所有模块都进行分割 // 其他内容用默认配置即可 }, }, // devServer: { // host: \\\"localhost\\\", // 启动服务器域名 // port: \\\"3000\\\", // 启动服务器端口号 // open: true, // 是否自动打开浏览器 // }, mode: \\\"production\\\", devtool: \\\"source-map\\\", }; \",\"运行指令\",\"npx webpack \",\"观察打包输出 js 文件名称。\"]},\"411\":{\"h\":\"Preload / Prefetch\"},\"412\":{\"h\":\"为什么\",\"t\":[\"我们前面已经做了代码分割，同时会使用 import 动态导入语法来进行代码按需加载（我们也叫懒加载，比如路由懒加载就是这样实现的）。\",\"但是加载速度还不够好，比如：是用户点击按钮时才加载这个资源的，如果资源体积很大，那么用户会感觉到明显卡顿效果。\",\"我们想在浏览器空闲时间，加载后续需要使用的资源。我们就需要用上 Preload 或 Prefetch 技术。\"]},\"413\":{\"h\":\"是什么\",\"t\":[\"Preload：告诉浏览器立即加载资源。\",\"Prefetch：告诉浏览器在空闲时才开始加载资源。\",\"它们共同点：\",\"都只会加载资源，并不执行。\",\"都有缓存。\",\"它们区别：\",\"Preload加载优先级高，Prefetch加载优先级低。\",\"Preload只能加载当前页面需要使用的资源，Prefetch可以加载当前页面资源，也可以加载下一个页面需要使用的资源。\",\"总结：\",\"当前页面优先级高的资源用 Preload 加载。\",\"下一个页面需要使用的资源用 Prefetch 加载。\",\"它们的问题：兼容性较差。\",\"我们可以去 Can I Use 网站查询 API 的兼容性问题。\",\"Preload 相对于 Prefetch 兼容性好一点。\"]},\"414\":{\"h\":\"怎么用\",\"t\":[\"下载包\",\"npm i @vue/preload-webpack-plugin -D \",\"配置 webpack.prod.js\",\"const os = require(\\\"os\\\"); const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); const MiniCssExtractPlugin = require(\\\"mini-css-extract-plugin\\\"); const CssMinimizerPlugin = require(\\\"css-minimizer-webpack-plugin\\\"); const TerserPlugin = require(\\\"terser-webpack-plugin\\\"); const ImageMinimizerPlugin = require(\\\"image-minimizer-webpack-plugin\\\"); const PreloadWebpackPlugin = require(\\\"@vue/preload-webpack-plugin\\\"); // cpu核数 const threads = os.cpus().length; // 获取处理样式的Loaders const getStyleLoaders = (preProcessor) => { return [ MiniCssExtractPlugin.loader, \\\"css-loader\\\", { loader: \\\"postcss-loader\\\", options: { postcssOptions: { plugins: [ \\\"postcss-preset-env\\\", // 能解决大多数样式兼容性问题 ], }, }, }, preProcessor, ].filter(Boolean); }; module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"../dist\\\"), // 生产模式需要输出 filename: \\\"static/js/[name].js\\\", // 入口文件打包输出资源命名方式 chunkFilename: \\\"static/js/[name].chunk.js\\\", // 动态导入输出资源命名方式 assetModuleFilename: \\\"static/media/[name].[hash][ext]\\\", // 图片、字体等资源命名方式（注意用hash） clean: true, }, module: { rules: [ { oneOf: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: getStyleLoaders(), }, { test: /\\\\.less$/, use: getStyleLoaders(\\\"less-loader\\\"), }, { test: /\\\\.s[ac]ss$/, use: getStyleLoaders(\\\"sass-loader\\\"), }, { test: /\\\\.styl$/, use: getStyleLoaders(\\\"stylus-loader\\\"), }, { test: /\\\\.(png|jpe?g|gif|svg)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, // generator: { // // 将图片文件输出到 static/imgs 目录中 // // 将图片文件命名 [hash:8][ext][query] // // [hash:8]: hash值取8位 // // [ext]: 使用之前的文件扩展名 // // [query]: 添加之前的query参数 // filename: \\\"static/imgs/[hash:8][ext][query]\\\", // }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", // generator: { // filename: \\\"static/media/[hash:8][ext][query]\\\", // }, }, { test: /\\\\.js$/, // exclude: /node_modules/, // 排除node_modules代码不编译 include: path.resolve(__dirname, \\\"../src\\\"), // 也可以用包含 use: [ { loader: \\\"thread-loader\\\", // 开启多进程 options: { workers: threads, // 数量 }, }, { loader: \\\"babel-loader\\\", options: { cacheDirectory: true, // 开启babel编译缓存 cacheCompression: false, // 缓存文件不要压缩 plugins: [\\\"@babel/plugin-transform-runtime\\\"], // 减少代码体积 }, }, ], }, ], }, ], }, plugins: [ new ESLintWebpackPlugin({ // 指定检查文件的根目录 context: path.resolve(__dirname, \\\"../src\\\"), exclude: \\\"node_modules\\\", // 默认值 cache: true, // 开启缓存 // 缓存目录 cacheLocation: path.resolve( __dirname, \\\"../node_modules/.cache/.eslintcache\\\" ), threads, // 开启多进程 }), new HtmlWebpackPlugin({ // 以 public/index.html 为模板创建文件 // 新的html文件有两个特点：1. 内容和源文件一致 2. 自动引入打包生成的js等资源 template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), // 提取css成单独文件 new MiniCssExtractPlugin({ // 定义输出文件名和目录 filename: \\\"static/css/[name].css\\\", chunkFilename: \\\"static/css/[name].chunk.css\\\", }), // css压缩 // new CssMinimizerPlugin(), new PreloadWebpackPlugin({ rel: \\\"preload\\\", // preload兼容性更好 as: \\\"script\\\", // rel: 'prefetch' // prefetch兼容性更差 }), ], optimization: { minimizer: [ // css压缩也可以写到optimization.minimizer里面，效果一样的 new CssMinimizerPlugin(), // 当生产模式会默认开启TerserPlugin，但是我们需要进行其他配置，就要重新写了 new TerserPlugin({ parallel: threads, // 开启多进程 }), // 压缩图片 new ImageMinimizerPlugin({ minimizer: { implementation: ImageMinimizerPlugin.imageminGenerate, options: { plugins: [ [\\\"gifsicle\\\", { interlaced: true }], [\\\"jpegtran\\\", { progressive: true }], [\\\"optipng\\\", { optimizationLevel: 5 }], [ \\\"svgo\\\", { plugins: [ \\\"preset-default\\\", \\\"prefixIds\\\", { name: \\\"sortAttrs\\\", params: { xmlnsOrder: \\\"alphabetical\\\", }, }, ], }, ], ], }, }, }), ], // 代码分割配置 splitChunks: { chunks: \\\"all\\\", // 对所有模块都进行分割 // 其他内容用默认配置即可 }, }, // devServer: { // host: \\\"localhost\\\", // 启动服务器域名 // port: \\\"3000\\\", // 启动服务器端口号 // open: true, // 是否自动打开浏览器 // }, mode: \\\"production\\\", devtool: \\\"source-map\\\", }; \"]},\"415\":{\"h\":\"Network Cache\"},\"416\":{\"h\":\"为什么\",\"t\":[\"将来开发时我们对静态资源会使用缓存来优化，这样浏览器第二次请求资源就能读取缓存了，速度很快。\",\"但是这样的话就会有一个问题, 因为前后输出的文件名是一样的，都叫 main.js，一旦将来发布新版本，因为文件名没有变化导致浏览器会直接读取缓存，不会加载新资源，项目也就没法更新了。\",\"所以我们从文件名入手，确保更新前后文件名不一样，这样就可以做缓存了。\"]},\"417\":{\"h\":\"是什么\",\"t\":[\"它们都会生成一个唯一的 hash 值。\",\"fullhash（webpack4 是 hash）\",\"每次修改任何一个文件，所有文件名的 hash 至都将改变。所以一旦修改了任何一个文件，整个项目的文件缓存都将失效。\",\"chunkhash\",\"根据不同的入口文件(Entry)进行依赖文件解析、构建对应的 chunk，生成对应的哈希值。我们 js 和 css 是同一个引入，会共享一个 hash 值。\",\"contenthash\",\"根据文件内容生成 hash 值，只有文件内容变化了，hash 值才会变化。所有文件 hash 值是独享且不同的。\"]},\"418\":{\"h\":\"怎么用\",\"t\":[\"const os = require(\\\"os\\\"); const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); const MiniCssExtractPlugin = require(\\\"mini-css-extract-plugin\\\"); const CssMinimizerPlugin = require(\\\"css-minimizer-webpack-plugin\\\"); const TerserPlugin = require(\\\"terser-webpack-plugin\\\"); const ImageMinimizerPlugin = require(\\\"image-minimizer-webpack-plugin\\\"); const PreloadWebpackPlugin = require(\\\"@vue/preload-webpack-plugin\\\"); // cpu核数 const threads = os.cpus().length; // 获取处理样式的Loaders const getStyleLoaders = (preProcessor) => { return [ MiniCssExtractPlugin.loader, \\\"css-loader\\\", { loader: \\\"postcss-loader\\\", options: { postcssOptions: { plugins: [ \\\"postcss-preset-env\\\", // 能解决大多数样式兼容性问题 ], }, }, }, preProcessor, ].filter(Boolean); }; module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"../dist\\\"), // 生产模式需要输出 // [contenthash:8]使用contenthash，取8位长度 filename: \\\"static/js/[name].[contenthash:8].js\\\", // 入口文件打包输出资源命名方式 chunkFilename: \\\"static/js/[name].[contenthash:8].chunk.js\\\", // 动态导入输出资源命名方式 assetModuleFilename: \\\"static/media/[name].[hash][ext]\\\", // 图片、字体等资源命名方式（注意用hash） clean: true, }, module: { rules: [ { oneOf: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: getStyleLoaders(), }, { test: /\\\\.less$/, use: getStyleLoaders(\\\"less-loader\\\"), }, { test: /\\\\.s[ac]ss$/, use: getStyleLoaders(\\\"sass-loader\\\"), }, { test: /\\\\.styl$/, use: getStyleLoaders(\\\"stylus-loader\\\"), }, { test: /\\\\.(png|jpe?g|gif|svg)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, // generator: { // // 将图片文件输出到 static/imgs 目录中 // // 将图片文件命名 [hash:8][ext][query] // // [hash:8]: hash值取8位 // // [ext]: 使用之前的文件扩展名 // // [query]: 添加之前的query参数 // filename: \\\"static/imgs/[hash:8][ext][query]\\\", // }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", // generator: { // filename: \\\"static/media/[hash:8][ext][query]\\\", // }, }, { test: /\\\\.js$/, // exclude: /node_modules/, // 排除node_modules代码不编译 include: path.resolve(__dirname, \\\"../src\\\"), // 也可以用包含 use: [ { loader: \\\"thread-loader\\\", // 开启多进程 options: { workers: threads, // 数量 }, }, { loader: \\\"babel-loader\\\", options: { cacheDirectory: true, // 开启babel编译缓存 cacheCompression: false, // 缓存文件不要压缩 plugins: [\\\"@babel/plugin-transform-runtime\\\"], // 减少代码体积 }, }, ], }, ], }, ], }, plugins: [ new ESLintWebpackPlugin({ // 指定检查文件的根目录 context: path.resolve(__dirname, \\\"../src\\\"), exclude: \\\"node_modules\\\", // 默认值 cache: true, // 开启缓存 // 缓存目录 cacheLocation: path.resolve( __dirname, \\\"../node_modules/.cache/.eslintcache\\\" ), threads, // 开启多进程 }), new HtmlWebpackPlugin({ // 以 public/index.html 为模板创建文件 // 新的html文件有两个特点：1. 内容和源文件一致 2. 自动引入打包生成的js等资源 template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), // 提取css成单独文件 new MiniCssExtractPlugin({ // 定义输出文件名和目录 filename: \\\"static/css/[name].[contenthash:8].css\\\", chunkFilename: \\\"static/css/[name].[contenthash:8].chunk.css\\\", }), // css压缩 // new CssMinimizerPlugin(), new PreloadWebpackPlugin({ rel: \\\"preload\\\", // preload兼容性更好 as: \\\"script\\\", // rel: 'prefetch' // prefetch兼容性更差 }), ], optimization: { minimizer: [ // css压缩也可以写到optimization.minimizer里面，效果一样的 new CssMinimizerPlugin(), // 当生产模式会默认开启TerserPlugin，但是我们需要进行其他配置，就要重新写了 new TerserPlugin({ parallel: threads, // 开启多进程 }), // 压缩图片 new ImageMinimizerPlugin({ minimizer: { implementation: ImageMinimizerPlugin.imageminGenerate, options: { plugins: [ [\\\"gifsicle\\\", { interlaced: true }], [\\\"jpegtran\\\", { progressive: true }], [\\\"optipng\\\", { optimizationLevel: 5 }], [ \\\"svgo\\\", { plugins: [ \\\"preset-default\\\", \\\"prefixIds\\\", { name: \\\"sortAttrs\\\", params: { xmlnsOrder: \\\"alphabetical\\\", }, }, ], }, ], ], }, }, }), ], // 代码分割配置 splitChunks: { chunks: \\\"all\\\", // 对所有模块都进行分割 // 其他内容用默认配置即可 }, }, // devServer: { // host: \\\"localhost\\\", // 启动服务器域名 // port: \\\"3000\\\", // 启动服务器端口号 // open: true, // 是否自动打开浏览器 // }, mode: \\\"production\\\", devtool: \\\"source-map\\\", }; \",\"问题：\",\"当我们修改 math.js 文件再重新打包的时候，因为 contenthash 原因，math.js 文件 hash 值发生了变化（这是正常的）。\",\"但是 main.js 文件的 hash 值也发生了变化，这会导致 main.js 的缓存失效。明明我们只修改 math.js, 为什么 main.js 也会变身变化呢？\",\"原因：\",\"更新前：math.xxx.js, main.js 引用的 math.xxx.js\",\"更新后：math.yyy.js, main.js 引用的 math.yyy.js, 文件名发生了变化，间接导致 main.js 也发生了变化\",\"解决：\",\"将 hash 值单独保管在一个 runtime 文件中。\",\"我们最终输出三个文件：main、math、runtime。当 math 文件发送变化，变化的是 math 和 runtime 文件，main 不变。\",\"runtime 文件只保存文件的 hash 值和它们与文件关系，整个文件体积就比较小，所以变化重新请求的代价也小。\",\"const os = require(\\\"os\\\"); const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); const MiniCssExtractPlugin = require(\\\"mini-css-extract-plugin\\\"); const CssMinimizerPlugin = require(\\\"css-minimizer-webpack-plugin\\\"); const TerserPlugin = require(\\\"terser-webpack-plugin\\\"); const ImageMinimizerPlugin = require(\\\"image-minimizer-webpack-plugin\\\"); const PreloadWebpackPlugin = require(\\\"@vue/preload-webpack-plugin\\\"); // cpu核数 const threads = os.cpus().length; // 获取处理样式的Loaders const getStyleLoaders = (preProcessor) => { return [ MiniCssExtractPlugin.loader, \\\"css-loader\\\", { loader: \\\"postcss-loader\\\", options: { postcssOptions: { plugins: [ \\\"postcss-preset-env\\\", // 能解决大多数样式兼容性问题 ], }, }, }, preProcessor, ].filter(Boolean); }; module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"../dist\\\"), // 生产模式需要输出 // [contenthash:8]使用contenthash，取8位长度 filename: \\\"static/js/[name].[contenthash:8].js\\\", // 入口文件打包输出资源命名方式 chunkFilename: \\\"static/js/[name].[contenthash:8].chunk.js\\\", // 动态导入输出资源命名方式 assetModuleFilename: \\\"static/media/[name].[hash][ext]\\\", // 图片、字体等资源命名方式（注意用hash） clean: true, }, module: { rules: [ { oneOf: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: getStyleLoaders(), }, { test: /\\\\.less$/, use: getStyleLoaders(\\\"less-loader\\\"), }, { test: /\\\\.s[ac]ss$/, use: getStyleLoaders(\\\"sass-loader\\\"), }, { test: /\\\\.styl$/, use: getStyleLoaders(\\\"stylus-loader\\\"), }, { test: /\\\\.(png|jpe?g|gif|svg)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, // generator: { // // 将图片文件输出到 static/imgs 目录中 // // 将图片文件命名 [hash:8][ext][query] // // [hash:8]: hash值取8位 // // [ext]: 使用之前的文件扩展名 // // [query]: 添加之前的query参数 // filename: \\\"static/imgs/[hash:8][ext][query]\\\", // }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", // generator: { // filename: \\\"static/media/[hash:8][ext][query]\\\", // }, }, { test: /\\\\.js$/, // exclude: /node_modules/, // 排除node_modules代码不编译 include: path.resolve(__dirname, \\\"../src\\\"), // 也可以用包含 use: [ { loader: \\\"thread-loader\\\", // 开启多进程 options: { workers: threads, // 数量 }, }, { loader: \\\"babel-loader\\\", options: { cacheDirectory: true, // 开启babel编译缓存 cacheCompression: false, // 缓存文件不要压缩 plugins: [\\\"@babel/plugin-transform-runtime\\\"], // 减少代码体积 }, }, ], }, ], }, ], }, plugins: [ new ESLintWebpackPlugin({ // 指定检查文件的根目录 context: path.resolve(__dirname, \\\"../src\\\"), exclude: \\\"node_modules\\\", // 默认值 cache: true, // 开启缓存 // 缓存目录 cacheLocation: path.resolve( __dirname, \\\"../node_modules/.cache/.eslintcache\\\" ), threads, // 开启多进程 }), new HtmlWebpackPlugin({ // 以 public/index.html 为模板创建文件 // 新的html文件有两个特点：1. 内容和源文件一致 2. 自动引入打包生成的js等资源 template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), // 提取css成单独文件 new MiniCssExtractPlugin({ // 定义输出文件名和目录 filename: \\\"static/css/[name].[contenthash:8].css\\\", chunkFilename: \\\"static/css/[name].[contenthash:8].chunk.css\\\", }), // css压缩 // new CssMinimizerPlugin(), new PreloadWebpackPlugin({ rel: \\\"preload\\\", // preload兼容性更好 as: \\\"script\\\", // rel: 'prefetch' // prefetch兼容性更差 }), ], optimization: { minimizer: [ // css压缩也可以写到optimization.minimizer里面，效果一样的 new CssMinimizerPlugin(), // 当生产模式会默认开启TerserPlugin，但是我们需要进行其他配置，就要重新写了 new TerserPlugin({ parallel: threads, // 开启多进程 }), // 压缩图片 new ImageMinimizerPlugin({ minimizer: { implementation: ImageMinimizerPlugin.imageminGenerate, options: { plugins: [ [\\\"gifsicle\\\", { interlaced: true }], [\\\"jpegtran\\\", { progressive: true }], [\\\"optipng\\\", { optimizationLevel: 5 }], [ \\\"svgo\\\", { plugins: [ \\\"preset-default\\\", \\\"prefixIds\\\", { name: \\\"sortAttrs\\\", params: { xmlnsOrder: \\\"alphabetical\\\", }, }, ], }, ], ], }, }, }), ], // 代码分割配置 splitChunks: { chunks: \\\"all\\\", // 对所有模块都进行分割 // 其他内容用默认配置即可 }, // 提取runtime文件 runtimeChunk: { name: (entrypoint) => `runtime~${entrypoint.name}`, // runtime文件命名规则 }, }, // devServer: { // host: \\\"localhost\\\", // 启动服务器域名 // port: \\\"3000\\\", // 启动服务器端口号 // open: true, // 是否自动打开浏览器 // }, mode: \\\"production\\\", devtool: \\\"source-map\\\", }; \"]},\"419\":{\"h\":\"Core-js\"},\"420\":{\"h\":\"为什么\",\"t\":[\"过去我们使用 babel 对 js 代码进行了兼容性处理，其中使用@babel/preset-env 智能预设来处理兼容性问题。\",\"它能将 ES6 的一些语法进行编译转换，比如箭头函数、点点点运算符等。但是如果是 async 函数、promise 对象、数组的一些方法（includes）等，它没办法处理。\",\"所以此时我们 js 代码仍然存在兼容性问题，一旦遇到低版本浏览器会直接报错。所以我们想要将 js 兼容性问题彻底解决\"]},\"421\":{\"h\":\"是什么\",\"t\":[\"core-js 是专门用来做 ES6 以及以上 API 的 polyfill。\",\"polyfill翻译过来叫做垫片/补丁。就是用社区上提供的一段代码，让我们在不兼容某些新特性的浏览器上，使用该新特性。\"]},\"422\":{\"h\":\"怎么用\",\"t\":[\"修改 main.js\",\"import count from \\\"./js/count\\\"; import sum from \\\"./js/sum\\\"; // 引入资源，Webpack才会对其打包 import \\\"./css/iconfont.css\\\"; import \\\"./css/index.css\\\"; import \\\"./less/index.less\\\"; import \\\"./sass/index.sass\\\"; import \\\"./sass/index.scss\\\"; import \\\"./styl/index.styl\\\"; const result1 = count(2, 1); console.log(result1); const result2 = sum(1, 2, 3, 4); console.log(result2); // 添加promise代码 const promise = Promise.resolve(); promise.then(() => { console.log(\\\"hello promise\\\"); }); \",\"此时 Eslint 会对 Promise 报错。\",\"修改配置文件\",\"下载包\",\"npm i @babel/eslint-parser -D \",\".eslintrc.js\",\"module.exports = { // 继承 Eslint 规则 extends: [\\\"eslint:recommended\\\"], parser: \\\"@babel/eslint-parser\\\", // 支持最新的最终 ECMAScript 标准 env: { node: true, // 启用node中全局变量 browser: true, // 启用浏览器中全局变量 }, plugins: [\\\"import\\\"], // 解决动态导入import语法报错问题 --> 实际使用eslint-plugin-import的规则解决的 parserOptions: { ecmaVersion: 6, // es6 sourceType: \\\"module\\\", // es module }, rules: { \\\"no-var\\\": 2, // 不能使用 var 定义变量 }, }; \",\"运行指令\",\"npm run build \",\"此时观察打包输出的 js 文件，我们发现 Promise 语法并没有编译转换，所以我们需要使用 core-js 来进行 polyfill。\",\"使用core-js\",\"下载包\",\"npm i core-js \",\"手动全部引入\",\"import \\\"core-js\\\"; import count from \\\"./js/count\\\"; import sum from \\\"./js/sum\\\"; // 引入资源，Webpack才会对其打包 import \\\"./css/iconfont.css\\\"; import \\\"./css/index.css\\\"; import \\\"./less/index.less\\\"; import \\\"./sass/index.sass\\\"; import \\\"./sass/index.scss\\\"; import \\\"./styl/index.styl\\\"; const result1 = count(2, 1); console.log(result1); const result2 = sum(1, 2, 3, 4); console.log(result2); // 添加promise代码 const promise = Promise.resolve(); promise.then(() => { console.log(\\\"hello promise\\\"); }); \",\"这样引入会将所有兼容性代码全部引入，体积太大了。我们只想引入 promise 的 polyfill。\",\"手动按需引入\",\"import \\\"core-js/es/promise\\\"; import count from \\\"./js/count\\\"; import sum from \\\"./js/sum\\\"; // 引入资源，Webpack才会对其打包 import \\\"./css/iconfont.css\\\"; import \\\"./css/index.css\\\"; import \\\"./less/index.less\\\"; import \\\"./sass/index.sass\\\"; import \\\"./sass/index.scss\\\"; import \\\"./styl/index.styl\\\"; const result1 = count(2, 1); console.log(result1); const result2 = sum(1, 2, 3, 4); console.log(result2); // 添加promise代码 const promise = Promise.resolve(); promise.then(() => { console.log(\\\"hello promise\\\"); }); \",\"只引入打包 promise 的 polyfill，打包体积更小。但是将来如果还想使用其他语法，我需要手动引入库很麻烦。\",\"自动按需引入\",\"main.js\",\"import count from \\\"./js/count\\\"; import sum from \\\"./js/sum\\\"; // 引入资源，Webpack才会对其打包 import \\\"./css/iconfont.css\\\"; import \\\"./css/index.css\\\"; import \\\"./less/index.less\\\"; import \\\"./sass/index.sass\\\"; import \\\"./sass/index.scss\\\"; import \\\"./styl/index.styl\\\"; const result1 = count(2, 1); console.log(result1); const result2 = sum(1, 2, 3, 4); console.log(result2); // 添加promise代码 const promise = Promise.resolve(); promise.then(() => { console.log(\\\"hello promise\\\"); }); \",\"babel.config.js\",\"module.exports = { // 智能预设：能够编译ES6语法 presets: [ [ \\\"@babel/preset-env\\\", // 按需加载core-js的polyfill { useBuiltIns: \\\"usage\\\", corejs: { version: \\\"3\\\", proposals: true } }, ], ], }; \",\"此时就会自动根据我们代码中使用的语法，来按需加载相应的 polyfill 了。\"]},\"423\":{\"h\":\"PWA\"},\"424\":{\"h\":\"为什么\",\"t\":[\"开发 Web App 项目，项目一旦处于网络离线情况，就没法访问了。\",\"我们希望给项目提供离线体验。\"]},\"425\":{\"h\":\"是什么\",\"t\":[\"渐进式网络应用程序(progressive web application - PWA)：是一种可以提供类似于 native app(原生应用程序) 体验的 Web App 的技术。\",\"其中最重要的是，在 离线(offline) 时应用程序能够继续运行功能。\",\"内部通过 Service Workers 技术实现的。\"]},\"426\":{\"h\":\"怎么用\",\"t\":[\"下载包\",\"npm i workbox-webpack-plugin -D \",\"修改配置文件\",\"const os = require(\\\"os\\\"); const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); const MiniCssExtractPlugin = require(\\\"mini-css-extract-plugin\\\"); const CssMinimizerPlugin = require(\\\"css-minimizer-webpack-plugin\\\"); const TerserPlugin = require(\\\"terser-webpack-plugin\\\"); const ImageMinimizerPlugin = require(\\\"image-minimizer-webpack-plugin\\\"); const PreloadWebpackPlugin = require(\\\"@vue/preload-webpack-plugin\\\"); const WorkboxPlugin = require(\\\"workbox-webpack-plugin\\\"); // cpu核数 const threads = os.cpus().length; // 获取处理样式的Loaders const getStyleLoaders = (preProcessor) => { return [ MiniCssExtractPlugin.loader, \\\"css-loader\\\", { loader: \\\"postcss-loader\\\", options: { postcssOptions: { plugins: [ \\\"postcss-preset-env\\\", // 能解决大多数样式兼容性问题 ], }, }, }, preProcessor, ].filter(Boolean); }; module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"../dist\\\"), // 生产模式需要输出 // [contenthash:8]使用contenthash，取8位长度 filename: \\\"static/js/[name].[contenthash:8].js\\\", // 入口文件打包输出资源命名方式 chunkFilename: \\\"static/js/[name].[contenthash:8].chunk.js\\\", // 动态导入输出资源命名方式 assetModuleFilename: \\\"static/media/[name].[hash][ext]\\\", // 图片、字体等资源命名方式（注意用hash） clean: true, }, module: { rules: [ { oneOf: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: getStyleLoaders(), }, { test: /\\\\.less$/, use: getStyleLoaders(\\\"less-loader\\\"), }, { test: /\\\\.s[ac]ss$/, use: getStyleLoaders(\\\"sass-loader\\\"), }, { test: /\\\\.styl$/, use: getStyleLoaders(\\\"stylus-loader\\\"), }, { test: /\\\\.(png|jpe?g|gif|svg)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, // generator: { // // 将图片文件输出到 static/imgs 目录中 // // 将图片文件命名 [hash:8][ext][query] // // [hash:8]: hash值取8位 // // [ext]: 使用之前的文件扩展名 // // [query]: 添加之前的query参数 // filename: \\\"static/imgs/[hash:8][ext][query]\\\", // }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", // generator: { // filename: \\\"static/media/[hash:8][ext][query]\\\", // }, }, { test: /\\\\.js$/, // exclude: /node_modules/, // 排除node_modules代码不编译 include: path.resolve(__dirname, \\\"../src\\\"), // 也可以用包含 use: [ { loader: \\\"thread-loader\\\", // 开启多进程 options: { workers: threads, // 数量 }, }, { loader: \\\"babel-loader\\\", options: { cacheDirectory: true, // 开启babel编译缓存 cacheCompression: false, // 缓存文件不要压缩 plugins: [\\\"@babel/plugin-transform-runtime\\\"], // 减少代码体积 }, }, ], }, ], }, ], }, plugins: [ new ESLintWebpackPlugin({ // 指定检查文件的根目录 context: path.resolve(__dirname, \\\"../src\\\"), exclude: \\\"node_modules\\\", // 默认值 cache: true, // 开启缓存 // 缓存目录 cacheLocation: path.resolve( __dirname, \\\"../node_modules/.cache/.eslintcache\\\" ), threads, // 开启多进程 }), new HtmlWebpackPlugin({ // 以 public/index.html 为模板创建文件 // 新的html文件有两个特点：1. 内容和源文件一致 2. 自动引入打包生成的js等资源 template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), // 提取css成单独文件 new MiniCssExtractPlugin({ // 定义输出文件名和目录 filename: \\\"static/css/[name].[contenthash:8].css\\\", chunkFilename: \\\"static/css/[name].[contenthash:8].chunk.css\\\", }), // css压缩 // new CssMinimizerPlugin(), new PreloadWebpackPlugin({ rel: \\\"preload\\\", // preload兼容性更好 as: \\\"script\\\", // rel: 'prefetch' // prefetch兼容性更差 }), new WorkboxPlugin.GenerateSW({ // 这些选项帮助快速启用 ServiceWorkers // 不允许遗留任何“旧的” ServiceWorkers clientsClaim: true, skipWaiting: true, }), ], optimization: { minimizer: [ // css压缩也可以写到optimization.minimizer里面，效果一样的 new CssMinimizerPlugin(), // 当生产模式会默认开启TerserPlugin，但是我们需要进行其他配置，就要重新写了 new TerserPlugin({ parallel: threads, // 开启多进程 }), // 压缩图片 new ImageMinimizerPlugin({ minimizer: { implementation: ImageMinimizerPlugin.imageminGenerate, options: { plugins: [ [\\\"gifsicle\\\", { interlaced: true }], [\\\"jpegtran\\\", { progressive: true }], [\\\"optipng\\\", { optimizationLevel: 5 }], [ \\\"svgo\\\", { plugins: [ \\\"preset-default\\\", \\\"prefixIds\\\", { name: \\\"sortAttrs\\\", params: { xmlnsOrder: \\\"alphabetical\\\", }, }, ], }, ], ], }, }, }), ], // 代码分割配置 splitChunks: { chunks: \\\"all\\\", // 对所有模块都进行分割 // 其他内容用默认配置即可 }, }, // devServer: { // host: \\\"localhost\\\", // 启动服务器域名 // port: \\\"3000\\\", // 启动服务器端口号 // open: true, // 是否自动打开浏览器 // }, mode: \\\"production\\\", devtool: \\\"source-map\\\", }; \",\"修改 main.js\",\"import count from \\\"./js/count\\\"; import sum from \\\"./js/sum\\\"; // 引入资源，Webpack才会对其打包 import \\\"./css/iconfont.css\\\"; import \\\"./css/index.css\\\"; import \\\"./less/index.less\\\"; import \\\"./sass/index.sass\\\"; import \\\"./sass/index.scss\\\"; import \\\"./styl/index.styl\\\"; const result1 = count(2, 1); console.log(result1); const result2 = sum(1, 2, 3, 4); console.log(result2); // 添加promise代码 const promise = Promise.resolve(); promise.then(() => { console.log(\\\"hello promise\\\"); }); const arr = [1, 2, 3, 4, 5]; console.log(arr.includes(5)); if (\\\"serviceWorker\\\" in navigator) { window.addEventListener(\\\"load\\\", () => { navigator.serviceWorker .register(\\\"/service-worker.js\\\") .then((registration) => { console.log(\\\"SW registered: \\\", registration); }) .catch((registrationError) => { console.log(\\\"SW registration failed: \\\", registrationError); }); }); } \",\"运行指令\",\"npm run build \",\"此时如果直接通过 VSCode 访问打包后页面，在浏览器控制台会发现 SW registration failed。\",\"因为我们打开的访问路径是：http://127.0.0.1:5500/dist/index.html。此时页面会去请求 service-worker.js 文件，请求路径是：http://127.0.0.1:5500/service-worker.js，这样找不到会 404。\",\"实际 service-worker.js 文件路径是：http://127.0.0.1:5500/dist/service-worker.js。\",\"解决路径问题\",\"下载包\",\"npm i serve -g \",\"serve 也是用来启动开发服务器来部署代码查看效果的。\",\"运行指令\",\"serve dist \",\"此时通过 serve 启动的服务器我们 service-worker 就能注册成功了。\"]},\"427\":{\"h\":\"例子\",\"t\":[\"10.demo\\n11.demo\"]},\"428\":{\"h\":\"减少代码体积\"},\"429\":{\"h\":\"Tree Shaking\"},\"430\":{\"h\":\"为什么\",\"t\":[\"开发时我们定义了一些工具函数库，或者引用第三方工具函数库或组件库。\",\"如果没有特殊处理的话我们打包时会引入整个库，但是实际上可能我们可能只用上极小部分的功能。\",\"这样将整个库都打包进来，体积就太大了。\"]},\"431\":{\"h\":\"是什么\",\"t\":[\"Tree Shaking 是一个术语，通常用于描述移除 JavaScript 中的没有使用上的代码。\",\"注意：它依赖 ES Module。\"]},\"432\":{\"h\":\"怎么用\",\"t\":[\"Webpack 已经默认开启了这个功能，无需其他配置。\"]},\"433\":{\"h\":\"Babel\"},\"434\":{\"h\":\"为什么\",\"t\":[\"Babel 为编译的每个文件都插入了辅助代码，使代码体积过大！\",\"Babel 对一些公共方法使用了非常小的辅助代码，比如 _extend。默认情况下会被添加到每一个需要它的文件中。\",\"你可以将这些辅助代码作为一个独立模块，来避免重复引入。\"]},\"435\":{\"h\":\"是什么\",\"t\":[\"@babel/plugin-transform-runtime: 禁用了 Babel 自动对每个文件的 runtime 注入，而是引入 @babel/plugin-transform-runtime 并且使所有辅助代码从这里引用。\"]},\"436\":{\"h\":\"怎么用\",\"t\":[\"下载包\",\"npm i @babel/plugin-transform-runtime -D \",\"配置\",\"const os = require(\\\"os\\\"); const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); const MiniCssExtractPlugin = require(\\\"mini-css-extract-plugin\\\"); const CssMinimizerPlugin = require(\\\"css-minimizer-webpack-plugin\\\"); const TerserPlugin = require(\\\"terser-webpack-plugin\\\"); // cpu核数 const threads = os.cpus().length; // 获取处理样式的Loaders const getStyleLoaders = (preProcessor) => { return [ MiniCssExtractPlugin.loader, \\\"css-loader\\\", { loader: \\\"postcss-loader\\\", options: { postcssOptions: { plugins: [ \\\"postcss-preset-env\\\", // 能解决大多数样式兼容性问题 ], }, }, }, preProcessor, ].filter(Boolean); }; module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"../dist\\\"), // 生产模式需要输出 filename: \\\"static/js/main.js\\\", // 将 js 文件输出到 static/js 目录中 clean: true, }, module: { rules: [ { oneOf: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: getStyleLoaders(), }, { test: /\\\\.less$/, use: getStyleLoaders(\\\"less-loader\\\"), }, { test: /\\\\.s[ac]ss$/, use: getStyleLoaders(\\\"sass-loader\\\"), }, { test: /\\\\.styl$/, use: getStyleLoaders(\\\"stylus-loader\\\"), }, { test: /\\\\.(png|jpe?g|gif|webp)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, generator: { // 将图片文件输出到 static/imgs 目录中 // 将图片文件命名 [hash:8][ext][query] // [hash:8]: hash值取8位 // [ext]: 使用之前的文件扩展名 // [query]: 添加之前的query参数 filename: \\\"static/imgs/[hash:8][ext][query]\\\", }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", generator: { filename: \\\"static/media/[hash:8][ext][query]\\\", }, }, { test: /\\\\.js$/, // exclude: /node_modules/, // 排除node_modules代码不编译 include: path.resolve(__dirname, \\\"../src\\\"), // 也可以用包含 use: [ { loader: \\\"thread-loader\\\", // 开启多进程 options: { workers: threads, // 数量 }, }, { loader: \\\"babel-loader\\\", options: { cacheDirectory: true, // 开启babel编译缓存 cacheCompression: false, // 缓存文件不要压缩 plugins: [\\\"@babel/plugin-transform-runtime\\\"], // 减少代码体积 }, }, ], }, ], }, ], }, plugins: [ new ESLintWebpackPlugin({ // 指定检查文件的根目录 context: path.resolve(__dirname, \\\"../src\\\"), exclude: \\\"node_modules\\\", // 默认值 cache: true, // 开启缓存 // 缓存目录 cacheLocation: path.resolve( __dirname, \\\"../node_modules/.cache/.eslintcache\\\" ), threads, // 开启多进程 }), new HtmlWebpackPlugin({ // 以 public/index.html 为模板创建文件 // 新的html文件有两个特点：1. 内容和源文件一致 2. 自动引入打包生成的js等资源 template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), // 提取css成单独文件 new MiniCssExtractPlugin({ // 定义输出文件名和目录 filename: \\\"static/css/main.css\\\", }), // css压缩 // new CssMinimizerPlugin(), ], optimization: { minimizer: [ // css压缩也可以写到optimization.minimizer里面，效果一样的 new CssMinimizerPlugin(), // 当生产模式会默认开启TerserPlugin，但是我们需要进行其他配置，就要重新写了 new TerserPlugin({ parallel: threads, // 开启多进程 }), ] ], // devServer: { // host: \\\"localhost\\\", // 启动服务器域名 // port: \\\"3000\\\", // 启动服务器端口号 // open: true, // 是否自动打开浏览器 // }, mode: \\\"production\\\", devtool: \\\"source-map\\\", }; \"]},\"437\":{\"h\":\"Image Minimizer\"},\"438\":{\"h\":\"为什么\",\"t\":[\"开发如果项目中引用了较多图片，那么图片体积会比较大，将来请求速度比较慢。\",\"我们可以对图片进行压缩，减少图片体积。\",\"注意：如果项目中图片都是在线链接，那么就不需要了。本地项目静态图片才需要进行压缩。\"]},\"439\":{\"h\":\"是什么\",\"t\":[\"image-minimizer-webpack-plugin: 用来压缩图片的插件\"]},\"440\":{\"h\":\"怎么用\",\"t\":[\"下载包\",\"npm i image-minimizer-webpack-plugin imagemin -D \",\"还有剩下包需要下载，有两种模式：\",\"无损压缩\",\"npm install imagemin-gifsicle imagemin-jpegtran imagemin-optipng imagemin-svgo -D \",\"有损压缩\",\"npm install imagemin-gifsicle imagemin-mozjpeg imagemin-pngquant imagemin-svgo -D \",\"有损/无损压缩的区别\",\"配置\",\"我们以无损压缩配置为例：\",\"const os = require(\\\"os\\\"); const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); const MiniCssExtractPlugin = require(\\\"mini-css-extract-plugin\\\"); const CssMinimizerPlugin = require(\\\"css-minimizer-webpack-plugin\\\"); const TerserPlugin = require(\\\"terser-webpack-plugin\\\"); const ImageMinimizerPlugin = require(\\\"image-minimizer-webpack-plugin\\\"); // cpu核数 const threads = os.cpus().length; // 获取处理样式的Loaders const getStyleLoaders = (preProcessor) => { return [ MiniCssExtractPlugin.loader, \\\"css-loader\\\", { loader: \\\"postcss-loader\\\", options: { postcssOptions: { plugins: [ \\\"postcss-preset-env\\\", // 能解决大多数样式兼容性问题 ], }, }, }, preProcessor, ].filter(Boolean); }; module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"../dist\\\"), // 生产模式需要输出 filename: \\\"static/js/main.js\\\", // 将 js 文件输出到 static/js 目录中 clean: true, }, module: { rules: [ { oneOf: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: getStyleLoaders(), }, { test: /\\\\.less$/, use: getStyleLoaders(\\\"less-loader\\\"), }, { test: /\\\\.s[ac]ss$/, use: getStyleLoaders(\\\"sass-loader\\\"), }, { test: /\\\\.styl$/, use: getStyleLoaders(\\\"stylus-loader\\\"), }, { test: /\\\\.(png|jpe?g|gif|svg)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, generator: { // 将图片文件输出到 static/imgs 目录中 // 将图片文件命名 [hash:8][ext][query] // [hash:8]: hash值取8位 // [ext]: 使用之前的文件扩展名 // [query]: 添加之前的query参数 filename: \\\"static/imgs/[hash:8][ext][query]\\\", }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", generator: { filename: \\\"static/media/[hash:8][ext][query]\\\", }, }, { test: /\\\\.js$/, // exclude: /node_modules/, // 排除node_modules代码不编译 include: path.resolve(__dirname, \\\"../src\\\"), // 也可以用包含 use: [ { loader: \\\"thread-loader\\\", // 开启多进程 options: { workers: threads, // 数量 }, }, { loader: \\\"babel-loader\\\", options: { cacheDirectory: true, // 开启babel编译缓存 cacheCompression: false, // 缓存文件不要压缩 plugins: [\\\"@babel/plugin-transform-runtime\\\"], // 减少代码体积 }, }, ], }, ], }, ], }, plugins: [ new ESLintWebpackPlugin({ // 指定检查文件的根目录 context: path.resolve(__dirname, \\\"../src\\\"), exclude: \\\"node_modules\\\", // 默认值 cache: true, // 开启缓存 // 缓存目录 cacheLocation: path.resolve( __dirname, \\\"../node_modules/.cache/.eslintcache\\\" ), threads, // 开启多进程 }), new HtmlWebpackPlugin({ // 以 public/index.html 为模板创建文件 // 新的html文件有两个特点：1. 内容和源文件一致 2. 自动引入打包生成的js等资源 template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), // 提取css成单独文件 new MiniCssExtractPlugin({ // 定义输出文件名和目录 filename: \\\"static/css/main.css\\\", }), // css压缩 // new CssMinimizerPlugin(), ], optimization: { minimizer: [ // css压缩也可以写到optimization.minimizer里面，效果一样的 new CssMinimizerPlugin(), // 当生产模式会默认开启TerserPlugin，但是我们需要进行其他配置，就要重新写了 new TerserPlugin({ parallel: threads, // 开启多进程 }), // 压缩图片 new ImageMinimizerPlugin({ minimizer: { implementation: ImageMinimizerPlugin.imageminGenerate, options: { plugins: [ [\\\"gifsicle\\\", { interlaced: true }], [\\\"jpegtran\\\", { progressive: true }], [\\\"optipng\\\", { optimizationLevel: 5 }], [ \\\"svgo\\\", { plugins: [ \\\"preset-default\\\", \\\"prefixIds\\\", { name: \\\"sortAttrs\\\", params: { xmlnsOrder: \\\"alphabetical\\\", }, }, ], }, ], ], }, }, }), ], }, // devServer: { // host: \\\"localhost\\\", // 启动服务器域名 // port: \\\"3000\\\", // 启动服务器端口号 // open: true, // 是否自动打开浏览器 // }, mode: \\\"production\\\", devtool: \\\"source-map\\\", }; \",\"打包时会出现报错：\",\"Error: Error with 'src\\\\images\\\\1.jpeg': '\\\"C:\\\\Users\\\\86176\\\\Desktop\\\\webpack\\\\webpack_code\\\\node_modules\\\\jpegtran-bin\\\\vendor\\\\jpegtran.exe\\\"' Error with 'src\\\\images\\\\3.gif': spawn C:\\\\Users\\\\86176\\\\Desktop\\\\webpack\\\\webpack_code\\\\node_modules\\\\optipng-bin\\\\vendor\\\\optipng.exe ENOENT \",\"我们需要安装两个文件到 node_modules 中才能解决, 文件可以从课件中找到：\",\"jpegtran.exe\",\"需要复制到 node_modules\\\\jpegtran-bin\\\\vendor 下面\",\"jpegtran 官网地址\",\"optipng.exe\",\"需要复制到 node_modules\\\\optipng-bin\\\\vendor 下面\",\"OptiPNG 官网地址\"]},\"441\":{\"h\":\"例子\",\"t\":[\"9.demo\"]},\"442\":{\"h\":\"总结\",\"t\":[\"我们从 4 个角度对 webpack 和代码进行了优化：\",\"提升开发体验\",\"使用 Source Map 让开发或上线时代码报错能有更加准确的错误提示。\",\"提升 webpack 提升打包构建速度\",\"使用 HotModuleReplacement 让开发时只重新编译打包更新变化了的代码，不变的代码使用缓存，从而使更新速度更快。\",\"使用 OneOf 让资源文件一旦被某个 loader 处理了，就不会继续遍历了，打包速度更快。\",\"使用 Include/Exclude 排除或只检测某些文件，处理的文件更少，速度更快。\",\"使用 Cache 对 eslint 和 babel 处理的结果进行缓存，让第二次打包速度更快。\",\"使用 Thead 多进程处理 eslint 和 babel 任务，速度更快。（需要注意的是，进程启动通信都有开销的，要在比较多代码处理时使用才有效果）\",\"减少代码体积\",\"使用 Tree Shaking 剔除了没有使用的多余代码，让代码体积更小。\",\"使用 @babel/plugin-transform-runtime 插件对 babel 进行处理，让辅助代码从中引入，而不是每个文件都生成辅助代码，从而体积更小。\",\"使用 Image Minimizer 对项目中图片进行压缩，体积更小，请求速度更快。（需要注意的是，如果项目中图片都是在线链接，那么就不需要了。本地项目静态图片才需要进行压缩。）\",\"优化代码运行性能\",\"使用 Code Split 对代码进行分割成多个 js 文件，从而使单个文件体积更小，并行加载 js 速度更快。并通过 import 动态导入语法进行按需加载，从而达到需要使用时才加载该资源，不用时不加载资源。\",\"使用 Preload / Prefetch 对代码进行提前加载，等未来需要使用时就能直接使用，从而用户体验更好。\",\"使用 Network Cache 能对输出资源文件进行更好的命名，将来好做缓存，从而用户体验更好。\",\"使用 Core-js 对 js 进行兼容性处理，让我们代码能运行在低版本浏览器。\",\"使用 PWA 能让代码离线也能访问，从而提升用户体验。\"]},\"443\":{\"h\":\"提升开发体验\"},\"444\":{\"h\":\"SourceMap\"},\"445\":{\"h\":\"为什么\",\"t\":[\"开发时我们运行的代码是经过 webpack 编译后的，例如下面这个样子：\",\"/* * ATTENTION: The \\\"eval\\\" devtool has been used (maybe by default in mode: \\\"development\\\"). * This devtool is neither made for production nor for readable output files. * It uses \\\"eval()\\\" calls to create a separate source file in the browser devtools. * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/) * or disable the default devtool with \\\"devtool: false\\\". * If you are looking for production-ready output files, see mode: \\\"production\\\" (https://webpack.js.org/configuration/mode/). */ /******/ (() => { // webpackBootstrap /******/ \\\"use strict\\\"; /******/ var __webpack_modules__ = ({ /***/ \\\"./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js!./src/less/index.less\\\": /*!**********************************************************************************************************!*\\\\ !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js!./src/less/index.less ***! \\\\**********************************************************************************************************/ /***/ ((module, __webpack_exports__, __webpack_require__) => { eval(\\\"__webpack_require__.r(__webpack_exports__);\\\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\\\n/* harmony export */ \\\\\\\"default\\\\\\\": () => (__WEBPACK_DEFAULT_EXPORT__)\\\\n/* harmony export */ });\\\\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \\\\\\\"./node_modules/css-loader/dist/runtime/noSourceMaps.js\\\\\\\");\\\\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\\\\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \\\\\\\"./node_modules/css-loader/dist/runtime/api.js\\\\\\\");\\\\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\\\\n// Imports\\\\n\\\\n\\\\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\\\\n// Module\\\\n___CSS_LOADER_EXPORT___.push([module.id, \\\\\\\".box2 {\\\\\\\\n width: 100px;\\\\\\\\n height: 100px;\\\\\\\\n background-color: deeppink;\\\\\\\\n}\\\\\\\\n\\\\\\\", \\\\\\\"\\\\\\\"]);\\\\n// Exports\\\\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\\\\n\\\\n\\\\n//# sourceURL=webpack://webpack5/./src/less/index.less?./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js\\\"); /***/ }), // 其他省略 \",\"所有 css 和 js 合并成了一个文件，并且多了其他代码。此时如果代码运行出错那么提示代码错误位置我们是看不懂的。一旦将来开发代码文件很多，那么很难去发现错误出现在哪里。\",\"所以我们需要更加准确的错误提示，来帮助我们更好的开发代码。\"]},\"446\":{\"h\":\"是什么\",\"t\":[\"SourceMap（源代码映射）是一个用来生成源代码与构建后代码一一映射的文件的方案。\",\"它会生成一个 xxx.map 文件，里面包含源代码和构建后代码每一行、每一列的映射关系。当构建后代码出错了，会通过 xxx.map 文件，从构建后代码出错位置找到映射后源代码出错位置，从而让浏览器提示源代码文件出错位置，帮助我们更快的找到错误根源。\"]},\"447\":{\"h\":\"怎么用\",\"t\":[\"通过查看Webpack DevTool 文档可知，SourceMap 的值有很多种情况.\",\"但实际开发时我们只需要关注两种情况即可：\",\"开发模式：cheap-module-source-map\",\"优点：打包编译速度快，只包含行映射\",\"缺点：没有列映射\",\"module.exports = { // 其他省略 mode: \\\"development\\\", devtool: \\\"cheap-module-source-map\\\", }; \",\"生产模式：source-map\",\"优点：包含行/列映射\",\"缺点：打包编译速度更慢\",\"module.exports = { // 其他省略 mode: \\\"production\\\", devtool: \\\"source-map\\\", }; \"]},\"448\":{\"h\":\"提升打包构建速度\"},\"449\":{\"h\":\"HotModuleReplacement\"},\"450\":{\"h\":\"为什么\",\"t\":[\"开发时我们修改了其中一个模块代码，Webpack 默认会将所有模块全部重新打包编译，速度很慢。\",\"所以我们需要做到修改某个模块代码，就只有这个模块代码需要重新打包编译，其他模块不变，这样打包速度就能很快。\"]},\"451\":{\"h\":\"是什么\",\"t\":[\"HotModuleReplacement（HMR/热模块替换）：在程序运行中，替换、添加或删除模块，而无需重新加载整个页面。\"]},\"452\":{\"h\":\"怎么用\",\"t\":[\"基本配置\",\"module.exports = { // 其他省略 devServer: { host: \\\"localhost\\\", // 启动服务器域名 port: \\\"3000\\\", // 启动服务器端口号 open: true, // 是否自动打开浏览器 hot: true, // 开启HMR功能（只能用于开发环境，生产环境不需要了） }, }; \",\"此时 css 样式经过 style-loader 处理，已经具备 HMR 功能了。 但是 js 还不行。\",\"JS 配置\",\"// main.js import count from \\\"./js/count\\\"; import sum from \\\"./js/sum\\\"; // 引入资源，Webpack才会对其打包 import \\\"./css/iconfont.css\\\"; import \\\"./css/index.css\\\"; import \\\"./less/index.less\\\"; import \\\"./sass/index.sass\\\"; import \\\"./sass/index.scss\\\"; import \\\"./styl/index.styl\\\"; const result1 = count(2, 1); console.log(result1); const result2 = sum(1, 2, 3, 4); console.log(result2); // 判断是否支持HMR功能 if (module.hot) { module.hot.accept(\\\"./js/count.js\\\", function (count) { const result1 = count(2, 1); console.log(result1); }); module.hot.accept(\\\"./js/sum.js\\\", function (sum) { const result2 = sum(1, 2, 3, 4); console.log(result2); }); } \",\"上面这样写会很麻烦，所以实际开发我们会使用其他 loader 来解决。\",\"比如：vue-loader, react-hot-loader。\"]},\"453\":{\"h\":\"OneOf\"},\"454\":{\"h\":\"为什么\",\"t\":[\"打包时每个文件都会经过所有 loader 处理，虽然因为 test 正则原因实际没有处理上，但是都要过一遍。比较慢。\"]},\"455\":{\"h\":\"是什么\",\"t\":[\"顾名思义就是只能匹配上一个 loader, 剩下的就不匹配了。\"]},\"456\":{\"h\":\"怎么用\",\"t\":[\"const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); module.exports = { entry: \\\"./src/main.js\\\", output: { path: undefined, // 开发模式没有输出，不需要指定输出目录 filename: \\\"static/js/main.js\\\", // 将 js 文件输出到 static/js 目录中 // clean: true, // 开发模式没有输出，不需要清空输出结果 }, module: { rules: [ { oneOf: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: [\\\"style-loader\\\", \\\"css-loader\\\"], }, { test: /\\\\.less$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"less-loader\\\"], }, { test: /\\\\.s[ac]ss$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"sass-loader\\\"], }, { test: /\\\\.styl$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"stylus-loader\\\"], }, { test: /\\\\.(png|jpe?g|gif|webp)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, generator: { // 将图片文件输出到 static/imgs 目录中 // 将图片文件命名 [hash:8][ext][query] // [hash:8]: hash值取8位 // [ext]: 使用之前的文件扩展名 // [query]: 添加之前的query参数 filename: \\\"static/imgs/[hash:8][ext][query]\\\", }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", generator: { filename: \\\"static/media/[hash:8][ext][query]\\\", }, }, { test: /\\\\.js$/, exclude: /node_modules/, // 排除node_modules代码不编译 loader: \\\"babel-loader\\\", }, ], }, ], }, plugins: [ new ESLintWebpackPlugin({ // 指定检查文件的根目录 context: path.resolve(__dirname, \\\"../src\\\"), }), new HtmlWebpackPlugin({ // 以 public/index.html 为模板创建文件 // 新的html文件有两个特点：1. 内容和源文件一致 2. 自动引入打包生成的js等资源 template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), ], // 开发服务器 devServer: { host: \\\"localhost\\\", // 启动服务器域名 port: \\\"3000\\\", // 启动服务器端口号 open: true, // 是否自动打开浏览器 hot: true, // 开启HMR功能 }, mode: \\\"development\\\", devtool: \\\"cheap-module-source-map\\\", }; \",\"生产模式也是如此配置。\"]},\"457\":{\"h\":\"Include/Exclude\"},\"458\":{\"h\":\"为什么\",\"t\":[\"开发时我们需要使用第三方的库或插件，所有文件都下载到 node_modules 中了。而这些文件是不需要编译可以直接使用的。\",\"所以我们在对 js 文件处理时，要排除 node_modules 下面的文件。\"]},\"459\":{\"h\":\"是什么\",\"t\":[\"include\",\"包含，只处理 xxx 文件\",\"exclude\",\"排除，除了 xxx 文件以外其他文件都处理\"]},\"460\":{\"h\":\"怎么用\",\"t\":[\"const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); module.exports = { entry: \\\"./src/main.js\\\", output: { path: undefined, // 开发模式没有输出，不需要指定输出目录 filename: \\\"static/js/main.js\\\", // 将 js 文件输出到 static/js 目录中 // clean: true, // 开发模式没有输出，不需要清空输出结果 }, module: { rules: [ { oneOf: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: [\\\"style-loader\\\", \\\"css-loader\\\"], }, { test: /\\\\.less$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"less-loader\\\"], }, { test: /\\\\.s[ac]ss$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"sass-loader\\\"], }, { test: /\\\\.styl$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"stylus-loader\\\"], }, { test: /\\\\.(png|jpe?g|gif|webp)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, generator: { // 将图片文件输出到 static/imgs 目录中 // 将图片文件命名 [hash:8][ext][query] // [hash:8]: hash值取8位 // [ext]: 使用之前的文件扩展名 // [query]: 添加之前的query参数 filename: \\\"static/imgs/[hash:8][ext][query]\\\", }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", generator: { filename: \\\"static/media/[hash:8][ext][query]\\\", }, }, { test: /\\\\.js$/, // exclude: /node_modules/, // 排除node_modules代码不编译 include: path.resolve(__dirname, \\\"../src\\\"), // 也可以用包含 loader: \\\"babel-loader\\\", }, ], }, ], }, plugins: [ new ESLintWebpackPlugin({ // 指定检查文件的根目录 context: path.resolve(__dirname, \\\"../src\\\"), exclude: \\\"node_modules\\\", // 默认值 }), new HtmlWebpackPlugin({ // 以 public/index.html 为模板创建文件 // 新的html文件有两个特点：1. 内容和源文件一致 2. 自动引入打包生成的js等资源 template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), ], // 开发服务器 devServer: { host: \\\"localhost\\\", // 启动服务器域名 port: \\\"3000\\\", // 启动服务器端口号 open: true, // 是否自动打开浏览器 hot: true, // 开启HMR功能 }, mode: \\\"development\\\", devtool: \\\"cheap-module-source-map\\\", }; \",\"生产模式也是如此配置。\"]},\"461\":{\"h\":\"Cache\"},\"462\":{\"h\":\"为什么\",\"t\":[\"每次打包时 js 文件都要经过 Eslint 检查 和 Babel 编译，速度比较慢。\",\"我们可以缓存之前的 Eslint 检查 和 Babel 编译结果，这样第二次打包时速度就会更快了。\"]},\"463\":{\"h\":\"是什么\",\"t\":[\"对 Eslint 检查 和 Babel 编译结果进行缓存。\"]},\"464\":{\"h\":\"怎么用\",\"t\":[\"const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); module.exports = { entry: \\\"./src/main.js\\\", output: { path: undefined, // 开发模式没有输出，不需要指定输出目录 filename: \\\"static/js/main.js\\\", // 将 js 文件输出到 static/js 目录中 // clean: true, // 开发模式没有输出，不需要清空输出结果 }, module: { rules: [ { oneOf: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: [\\\"style-loader\\\", \\\"css-loader\\\"], }, { test: /\\\\.less$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"less-loader\\\"], }, { test: /\\\\.s[ac]ss$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"sass-loader\\\"], }, { test: /\\\\.styl$/, use: [\\\"style-loader\\\", \\\"css-loader\\\", \\\"stylus-loader\\\"], }, { test: /\\\\.(png|jpe?g|gif|webp)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, generator: { // 将图片文件输出到 static/imgs 目录中 // 将图片文件命名 [hash:8][ext][query] // [hash:8]: hash值取8位 // [ext]: 使用之前的文件扩展名 // [query]: 添加之前的query参数 filename: \\\"static/imgs/[hash:8][ext][query]\\\", }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", generator: { filename: \\\"static/media/[hash:8][ext][query]\\\", }, }, { test: /\\\\.js$/, // exclude: /node_modules/, // 排除node_modules代码不编译 include: path.resolve(__dirname, \\\"../src\\\"), // 也可以用包含 loader: \\\"babel-loader\\\", options: { cacheDirectory: true, // 开启babel编译缓存 cacheCompression: false, // 缓存文件不要压缩 }, }, ], }, ], }, plugins: [ new ESLintWebpackPlugin({ // 指定检查文件的根目录 context: path.resolve(__dirname, \\\"../src\\\"), exclude: \\\"node_modules\\\", // 默认值 cache: true, // 开启缓存 // 缓存目录 cacheLocation: path.resolve( __dirname, \\\"../node_modules/.cache/.eslintcache\\\" ), }), new HtmlWebpackPlugin({ // 以 public/index.html 为模板创建文件 // 新的html文件有两个特点：1. 内容和源文件一致 2. 自动引入打包生成的js等资源 template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), ], // 开发服务器 devServer: { host: \\\"localhost\\\", // 启动服务器域名 port: \\\"3000\\\", // 启动服务器端口号 open: true, // 是否自动打开浏览器 hot: true, // 开启HMR功能 }, mode: \\\"development\\\", devtool: \\\"cheap-module-source-map\\\", }; \"]},\"465\":{\"h\":\"Thead\"},\"466\":{\"h\":\"为什么\",\"t\":[\"当项目越来越庞大时，打包速度越来越慢，甚至于需要一个下午才能打包出来代码。这个速度是比较慢的。\",\"我们想要继续提升打包速度，其实就是要提升 js 的打包速度，因为其他文件都比较少。\",\"而对 js 文件处理主要就是 eslint 、babel、Terser 三个工具，所以我们要提升它们的运行速度。\",\"我们可以开启多进程同时处理 js 文件，这样速度就比之前的单进程打包更快了。\"]},\"467\":{\"h\":\"是什么\",\"t\":[\"多进程打包：开启电脑的多个进程同时干一件事，速度更快。\",\"需要注意：请仅在特别耗时的操作中使用，因为每个进程启动就有大约为 600ms 左右开销。\"]},\"468\":{\"h\":\"怎么用\",\"t\":[\"我们启动进程的数量就是我们 CPU 的核数。\",\"如何获取 CPU 的核数，因为每个电脑都不一样。\",\"// nodejs核心模块，直接使用 const os = require(\\\"os\\\"); // cpu核数 const threads = os.cpus().length; \",\"下载包\",\"npm i thread-loader -D \",\"使用\",\"const os = require(\\\"os\\\"); const path = require(\\\"path\\\"); const ESLintWebpackPlugin = require(\\\"eslint-webpack-plugin\\\"); const HtmlWebpackPlugin = require(\\\"html-webpack-plugin\\\"); const MiniCssExtractPlugin = require(\\\"mini-css-extract-plugin\\\"); const CssMinimizerPlugin = require(\\\"css-minimizer-webpack-plugin\\\"); const TerserPlugin = require(\\\"terser-webpack-plugin\\\"); // cpu核数 const threads = os.cpus().length; // 获取处理样式的Loaders const getStyleLoaders = (preProcessor) => { return [ MiniCssExtractPlugin.loader, \\\"css-loader\\\", { loader: \\\"postcss-loader\\\", options: { postcssOptions: { plugins: [ \\\"postcss-preset-env\\\", // 能解决大多数样式兼容性问题 ], }, }, }, preProcessor, ].filter(Boolean); }; module.exports = { entry: \\\"./src/main.js\\\", output: { path: path.resolve(__dirname, \\\"../dist\\\"), // 生产模式需要输出 filename: \\\"static/js/main.js\\\", // 将 js 文件输出到 static/js 目录中 clean: true, }, module: { rules: [ { oneOf: [ { // 用来匹配 .css 结尾的文件 test: /\\\\.css$/, // use 数组里面 Loader 执行顺序是从右到左 use: getStyleLoaders(), }, { test: /\\\\.less$/, use: getStyleLoaders(\\\"less-loader\\\"), }, { test: /\\\\.s[ac]ss$/, use: getStyleLoaders(\\\"sass-loader\\\"), }, { test: /\\\\.styl$/, use: getStyleLoaders(\\\"stylus-loader\\\"), }, { test: /\\\\.(png|jpe?g|gif|webp)$/, type: \\\"asset\\\", parser: { dataUrlCondition: { maxSize: 10 * 1024, // 小于10kb的图片会被base64处理 }, }, generator: { // 将图片文件输出到 static/imgs 目录中 // 将图片文件命名 [hash:8][ext][query] // [hash:8]: hash值取8位 // [ext]: 使用之前的文件扩展名 // [query]: 添加之前的query参数 filename: \\\"static/imgs/[hash:8][ext][query]\\\", }, }, { test: /\\\\.(ttf|woff2?)$/, type: \\\"asset/resource\\\", generator: { filename: \\\"static/media/[hash:8][ext][query]\\\", }, }, { test: /\\\\.js$/, // exclude: /node_modules/, // 排除node_modules代码不编译 include: path.resolve(__dirname, \\\"../src\\\"), // 也可以用包含 use: [ { loader: \\\"thread-loader\\\", // 开启多进程 options: { workers: threads, // 数量 }, }, { loader: \\\"babel-loader\\\", options: { cacheDirectory: true, // 开启babel编译缓存 }, }, ], }, ], }, ], }, plugins: [ new ESLintWebpackPlugin({ // 指定检查文件的根目录 context: path.resolve(__dirname, \\\"../src\\\"), exclude: \\\"node_modules\\\", // 默认值 cache: true, // 开启缓存 // 缓存目录 cacheLocation: path.resolve( __dirname, \\\"../node_modules/.cache/.eslintcache\\\" ), threads, // 开启多进程 }), new HtmlWebpackPlugin({ // 以 public/index.html 为模板创建文件 // 新的html文件有两个特点：1. 内容和源文件一致 2. 自动引入打包生成的js等资源 template: path.resolve(__dirname, \\\"../public/index.html\\\"), }), // 提取css成单独文件 new MiniCssExtractPlugin({ // 定义输出文件名和目录 filename: \\\"static/css/main.css\\\", }), // css压缩 // new CssMinimizerPlugin(), ], optimization: { minimize: true, minimizer: [ // css压缩也可以写到optimization.minimizer里面，效果一样的 new CssMinimizerPlugin(), // 当生产模式会默认开启TerserPlugin，但是我们需要进行其他配置，就要重新写了 new TerserPlugin({ parallel: threads // 开启多进程 }) ], }, // devServer: { // host: \\\"localhost\\\", // 启动服务器域名 // port: \\\"3000\\\", // 启动服务器端口号 // open: true, // 是否自动打开浏览器 // }, mode: \\\"production\\\", devtool: \\\"source-map\\\", }; \",\"我们目前打包的内容都很少，所以因为启动进程开销原因，使用多进程打包实际上会显著的让我们打包时间变得很长。\"]},\"469\":{\"h\":\"第1题\",\"t\":[\"Implement the built-in ReturnType<T> generic without using it.\",\"For example\",\"const fn = (v: boolean) => { if (v) return 1 else return 2 } type a = MyReturnType<typeof fn> // should be \\\"1 | 2\\\" \",\"答案\",\"type MyReturnType<T extends (...args: any) => any> = T extends (...args: any) => infer p ? p : never; // infer p 表示T是一个函数类型，且返回值类型为P // never 代表T不是一个函数类型 \"]},\"470\":{\"h\":\"第2题\",\"t\":[\"Implement the built-in Omit<T, K> generic without using it.\",\"Constructs a type by picking all properties from T and then removing K\",\"For example\",\"interface Todo { title: string description: string completed: boolean } type TodoPreview = MyOmit<Todo, 'description' | 'title'> const todo: TodoPreview = { completed: false, } \",\"答案\",\"type MyOmit<T, K> = { [key in keyof T as key extends K ? never : key] : T[key] }; \",\"todo的类型去掉了description, title，这个时候给todo中加title会报错的。\"]},\"471\":{\"h\":\"第3题\",\"t\":[\"Implement the built-in Pick<T, K> generic without using it. Constructs a type by picking the set of properties K from T\",\"For example:\",\"interface Todo { title: string description: string completed: boolean } type TodoPreview = MyPick<Todo, 'title' | 'completed'> const todo: TodoPreview = { title: 'Clean room', completed: false, } \",\"答案：\",\"type MyPick<T, K extends keyof T> = { [key in K] : T[key] }; \"]},\"472\":{\"h\":\"第4题\",\"t\":[\"Implement a generic GetReadonlyKeys<T> that returns a union of the readonly keys of an Object.\",\"For example\",\"interface Todo { readonly title: string readonly description: string completed: boolean } type Keys = GetReadonlyKeys<Todo> // expected to be \\\"title\\\" | \\\"description\\\" \",\"答案： 首先要声明一个Equal类型，满足以下条件\",\"type User1 = { name?: string; age: number; address: string; } type User2 = { name?: string; } & { age: number; address: string; } type Y1 = Equal<string, string>; // true type Y2 = Equal<string, number>; // false type Y3 = Equal<{ name: string }, { name: string }>; // true type Y4 = Equal<{ name: string }, { age: number }>; // false type Y5 = Equal<{ name: string }, { name?: string }>; // false type Y6 = Equal<User1, User2>; // true type Y7 = Equal<true, boolean>; // false type Y8 = Equal<1 | 2, 1>; // false type Y9 = Equal<any, string>; // false type Y10 = Equal<{ name: string }, { readonly name: string }>; // false \",\"方案一：\",\"type Equal<T, K> = T extends K ? (K extends T ? true : false) : false; \",\"这种方法对Y7，返回的是boolean，不正确\",\"方案二：\",\"type Equal<T, K> = [T, K] extends [K, T] ? true : false; \",\"这种方法对Y9，返回的是true，不正确\",\"方案三：\",\"type Equal<X, Y> = (<T>() => T extends X ? 1 : 2) extends (<T>() => T extends Y ? 1 : 2) ? true : false; \",\"正确\",\"所以本题的解为：\",\"// 方法一： type GetReadonlyKeys<T> = keyof { [K in keyof T as Equal<Pick<T, K>, Readonly<Pick<T, K>>> extends true ? K : never]: T[K] }; // 方法二： type GetReadonlyKeys<T> = { [P in keyof Required<T>]: Equal< {[k in P]: T[k]}, { -readonly [R in P] : T[R]} > extends true ? never : P; }[keyof T]; // 通过keyof过滤never \"]},\"473\":{\"h\":\"React\"},\"474\":{\"h\":\"算法\"},\"475\":{\"h\":\"Webpack终极篇\"},\"476\":{\"h\":\"Webpack\"},\"477\":{\"h\":\"原理\"},\"478\":{\"h\":\"基础部分\"},\"479\":{\"h\":\"项目\"},\"480\":{\"h\":\"高级部分\"},\"481\":{\"h\":\"Ts\"}},\"dirtCount\":0,\"index\":[[\"算法\",{\"0\":{\"474\":1}}],[\"满足以下条件\",{\"1\":{\"472\":1}}],[\"满足条件才会代码分割\",{\"1\":{\"394\":1,\"396\":1,\"406\":1,\"408\":1}}],[\"k\",{\"1\":{\"470\":2,\"471\":3,\"472\":9}}],[\"k>>>\",{\"1\":{\"472\":1}}],[\"k>\",{\"1\":{\"470\":2,\"471\":1,\"472\":3}}],[\"keccak256\",{\"1\":{\"56\":4,\"59\":1,\"73\":1,\"83\":1,\"84\":1,\"85\":1,\"90\":1}}],[\"keyof\",{\"1\":{\"470\":1,\"471\":1,\"472\":4}}],[\"keywords\",{\"1\":{\"215\":1,\"339\":1,\"340\":1,\"345\":1}}],[\"key\",{\"1\":{\"31\":9,\"33\":5,\"158\":5,\"159\":11,\"470\":4,\"471\":2}}],[\"keys\",{\"1\":{\"31\":1,\"33\":1,\"159\":1,\"216\":1,\"219\":1,\"472\":2}}],[\"keep\",{\"1\":{\"2\":1}}],[\"且返回值类型为p\",{\"1\":{\"469\":1}}],[\"答案\",{\"1\":{\"469\":1,\"470\":1,\"471\":1,\"472\":1}}],[\"第4题\",{\"0\":{\"472\":1}}],[\"第3题\",{\"0\":{\"471\":1}}],[\"第2题\",{\"0\":{\"470\":1}}],[\"第1题\",{\"0\":{\"469\":1}}],[\"第二项值是value\",{\"1\":{\"218\":1}}],[\"剔除了没有使用的多余代码\",{\"1\":{\"442\":1}}],[\"进程启动通信都有开销的\",{\"1\":{\"442\":1}}],[\"进行兼容性处理\",{\"1\":{\"442\":1}}],[\"进行依赖文件解析\",{\"1\":{\"417\":1}}],[\"进行处理\",{\"1\":{\"279\":1,\"442\":1}}],[\"进行编译\",{\"1\":{\"210\":1,\"308\":1}}],[\"进行异步操作会等异步操作做完再继续往下执行\",{\"1\":{\"214\":1}}],[\"进行异步操作是不会等待异步操作执行完成的\",{\"1\":{\"214\":1}}],[\"进行异步操作\",{\"1\":{\"193\":1}}],[\"进行状态检查\",{\"1\":{\"141\":1}}],[\"进行测试回归\",{\"1\":{\"136\":1}}],[\"任务\",{\"1\":{\"442\":1}}],[\"旧的\",{\"1\":{\"426\":1}}],[\"离线\",{\"1\":{\"425\":1}}],[\"离不开这些钩子\",{\"1\":{\"206\":1}}],[\"体验的\",{\"1\":{\"425\":1}}],[\"体积更小\",{\"1\":{\"442\":1}}],[\"体积更大\",{\"1\":{\"394\":1,\"406\":1}}],[\"体积太大了\",{\"1\":{\"390\":1,\"402\":1,\"422\":1}}],[\"体积就太大了\",{\"1\":{\"377\":1,\"430\":1}}],[\"体积变得更大\",{\"1\":{\"285\":1}}],[\"渐进式网络应用程序\",{\"1\":{\"425\":1}}],[\"了\",{\"1\":{\"422\":1}}],[\"了解tcp\",{\"0\":{\"8\":1}}],[\"智能预设\",{\"1\":{\"422\":1}}],[\"智能预设来处理兼容性问题\",{\"1\":{\"420\":1}}],[\"我需要手动引入库很麻烦\",{\"1\":{\"422\":1}}],[\"我们从\",{\"1\":{\"442\":1}}],[\"我们希望给项目提供离线体验\",{\"1\":{\"424\":1}}],[\"我们希望一切自动化\",{\"1\":{\"319\":1}}],[\"我们只想引入\",{\"1\":{\"422\":1}}],[\"我们只需要简单配置即可处理图片资源\",{\"1\":{\"279\":1}}],[\"我们发现\",{\"1\":{\"422\":1}}],[\"我们最终输出三个文件\",{\"1\":{\"418\":1}}],[\"我们就需要用上\",{\"1\":{\"412\":1}}],[\"我们想在浏览器空闲时间\",{\"1\":{\"412\":1}}],[\"我们想要继续提升打包速度\",{\"1\":{\"372\":1,\"466\":1}}],[\"我们也叫懒加载\",{\"1\":{\"412\":1}}],[\"我们也一起处理了\",{\"1\":{\"276\":1}}],[\"我们前面已经做了代码分割\",{\"1\":{\"412\":1}}],[\"我们定义的文件体积太小了\",{\"1\":{\"394\":1,\"406\":1}}],[\"我们不希望这份代码被打包到两个文件中\",{\"1\":{\"394\":1,\"406\":1}}],[\"我们不能由肉眼去检测代码格式\",{\"1\":{\"266\":1}}],[\"我们如果只要渲染首页\",{\"1\":{\"390\":1,\"402\":1}}],[\"我们目前打包的内容都很少\",{\"1\":{\"374\":1,\"468\":1}}],[\"我们启动进程的数量就是我们\",{\"1\":{\"374\":1,\"468\":1}}],[\"我们会分别创建新的文件来演示\",{\"1\":{\"392\":1,\"404\":1}}],[\"我们会从以下角度来进行优化\",{\"1\":{\"348\":1,\"399\":1}}],[\"我们会使用框架\",{\"1\":{\"243\":1}}],[\"我们分别准备两个配置文件来放不同的配置\",{\"1\":{\"327\":1}}],[\"我们并不需要知道\",{\"1\":{\"322\":1}}],[\"我们找\",{\"1\":{\"293\":1}}],[\"我们处理图片资源通过\",{\"1\":{\"279\":1}}],[\"我们\",{\"1\":{\"271\":1,\"417\":1}}],[\"我们的规则会覆盖掉react\",{\"1\":{\"269\":1}}],[\"我们以无损压缩配置为例\",{\"1\":{\"387\":1,\"440\":1}}],[\"我们以\",{\"1\":{\"269\":1,\"274\":1}}],[\"我们先完成\",{\"1\":{\"266\":1}}],[\"我们使用\",{\"1\":{\"266\":2,\"267\":1}}],[\"我们后面会以两个模式来分别搭建\",{\"1\":{\"260\":1}}],[\"我们查看\",{\"1\":{\"252\":1}}],[\"我们将指令定义在\",{\"1\":{\"331\":1}}],[\"我们将\",{\"1\":{\"245\":1}}],[\"我们应该是单独的\",{\"1\":{\"221\":1}}],[\"我们需要提取多入口的重复代码\",{\"1\":{\"394\":1,\"406\":1}}],[\"我们需要安装两个文件到\",{\"1\":{\"387\":1,\"440\":1}}],[\"我们需要得到代码将来部署上线\",{\"1\":{\"326\":1}}],[\"我们需要对\",{\"1\":{\"255\":1}}],[\"我们需要借助\",{\"1\":{\"219\":1}}],[\"我们需要分析资源大小同时添加上分析后的\",{\"1\":{\"218\":1}}],[\"我们建议尽可能地使你的\",{\"1\":{\"193\":1}}],[\"我们调用\",{\"1\":{\"125\":1}}],[\"我们可以去\",{\"1\":{\"413\":1}}],[\"我们可以发现\",{\"1\":{\"395\":1,\"407\":1}}],[\"我们可以对图片进行压缩\",{\"1\":{\"385\":1,\"438\":1}}],[\"我们可以开启多进程同时处理\",{\"1\":{\"372\":1,\"466\":1}}],[\"我们可以缓存之前的\",{\"1\":{\"368\":1,\"462\":1}}],[\"我们可以这样写配置\",{\"1\":{\"269\":1}}],[\"我们可以在\",{\"1\":{\"228\":1}}],[\"我们可以通过\",{\"1\":{\"209\":1}}],[\"我们可以逐步传递参数\",{\"1\":{\"120\":1}}],[\"我们可以将这个函数转换为一系列单参数函数\",{\"1\":{\"120\":1}}],[\"手动按需引入\",{\"1\":{\"422\":1}}],[\"手动全部引入\",{\"1\":{\"422\":1}}],[\"手写\",{\"0\":{\"197\":1,\"198\":1,\"199\":1,\"200\":1,\"201\":1}}],[\"补丁\",{\"1\":{\"421\":1}}],[\"点点点运算符等\",{\"1\":{\"420\":1}}],[\"点击绿色的图标进入调试模式\",{\"1\":{\"215\":1}}],[\"点击等\",{\"1\":{\"134\":1}}],[\"点击run\",{\"1\":{\"133\":1}}],[\"间接导致\",{\"1\":{\"418\":1}}],[\"明明我们只修改\",{\"1\":{\"418\":1}}],[\"问题\",{\"1\":{\"418\":1}}],[\"根据文件内容生成\",{\"1\":{\"417\":1}}],[\"根据文件内容生产一个新的文件名称\",{\"1\":{\"200\":1}}],[\"根据不同的入口文件\",{\"1\":{\"417\":1}}],[\"值和它们与文件关系\",{\"1\":{\"418\":1}}],[\"值单独保管在一个\",{\"1\":{\"418\":1}}],[\"值也发生了变化\",{\"1\":{\"418\":1}}],[\"值发生了变化\",{\"1\":{\"418\":1}}],[\"值是独享且不同的\",{\"1\":{\"417\":1}}],[\"值才会变化\",{\"1\":{\"417\":1}}],[\"值\",{\"1\":{\"417\":3}}],[\"兼容性问题彻底解决\",{\"1\":{\"420\":1}}],[\"兼容性好一点\",{\"1\":{\"413\":1}}],[\"兼容性较差\",{\"1\":{\"413\":1}}],[\"兼容性处理\",{\"0\":{\"225\":1},\"1\":{\"266\":1}}],[\"告诉浏览器在空闲时才开始加载资源\",{\"1\":{\"413\":1}}],[\"告诉浏览器立即加载资源\",{\"1\":{\"413\":1}}],[\"技术实现的\",{\"1\":{\"425\":1}}],[\"技术\",{\"1\":{\"412\":1}}],[\"技术选型网站\",{\"1\":{\"26\":1}}],[\"想要实现按需加载\",{\"1\":{\"395\":1,\"407\":1}}],[\"想要知道更多的\",{\"1\":{\"228\":1}}],[\"个角度对\",{\"1\":{\"442\":1}}],[\"个\",{\"1\":{\"394\":1,\"406\":1}}],[\"个核心概念\",{\"1\":{\"325\":1}}],[\"越大越高\",{\"1\":{\"394\":2,\"396\":1,\"406\":2,\"408\":1}}],[\"权重\",{\"1\":{\"394\":2,\"396\":1,\"406\":2,\"408\":1}}],[\"权重最低\",{\"1\":{\"341\":1,\"347\":1}}],[\"哪些模块要打包到一个组\",{\"1\":{\"394\":2,\"396\":1,\"406\":2,\"408\":1}}],[\"超过50kb一定会单独打包\",{\"1\":{\"394\":1,\"396\":1,\"406\":1,\"408\":1}}],[\"至都将改变\",{\"1\":{\"417\":1}}],[\"至少被引用的次数\",{\"1\":{\"394\":1,\"396\":1,\"406\":1,\"408\":1}}],[\"至少输出几个\",{\"1\":{\"393\":1,\"405\":1}}],[\"至于代码被编译成什么样子\",{\"1\":{\"322\":1}}],[\"单入口\",{\"0\":{\"396\":1,\"408\":1},\"1\":{\"393\":1,\"394\":1,\"396\":2,\"405\":1,\"406\":1,\"408\":2}}],[\"单元测试\",{\"0\":{\"128\":1},\"1\":{\"133\":1}}],[\"禁用了\",{\"1\":{\"382\":1,\"435\":1}}],[\"禁止使用分号\",{\"1\":{\"269\":1}}],[\"效果一样的\",{\"1\":{\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"468\":1}}],[\"左右开销\",{\"1\":{\"373\":1,\"467\":1}}],[\"三个工具\",{\"1\":{\"372\":1,\"466\":1}}],[\"甚至于需要一个下午才能打包出来代码\",{\"1\":{\"372\":1,\"466\":1}}],[\"速度很快\",{\"1\":{\"416\":1}}],[\"速度很慢\",{\"1\":{\"356\":1,\"450\":1}}],[\"速度就更快\",{\"1\":{\"390\":1,\"402\":1}}],[\"速度更快\",{\"1\":{\"373\":1,\"442\":3,\"467\":1}}],[\"速度比较慢\",{\"1\":{\"368\":1,\"462\":1}}],[\"剩下的就不匹配了\",{\"1\":{\"361\":1,\"455\":1}}],[\"剩余的gas量\",{\"1\":{\"50\":1}}],[\"顾名思义就是只能匹配上一个\",{\"1\":{\"361\":1,\"455\":1}}],[\"正确\",{\"1\":{\"472\":1}}],[\"正则原因实际没有处理上\",{\"1\":{\"360\":1,\"454\":1}}],[\"正如其名\",{\"1\":{\"77\":1}}],[\"虽然因为\",{\"1\":{\"360\":1,\"454\":1}}],[\"虽然可以通过一些手段\",{\"1\":{\"4\":1}}],[\"替换\",{\"1\":{\"357\":1,\"451\":1}}],[\"热模块替换\",{\"0\":{\"355\":1},\"1\":{\"357\":1,\"451\":1}}],[\"列映射\",{\"1\":{\"353\":1,\"447\":1}}],[\"怎么用\",{\"0\":{\"353\":1,\"358\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"379\":1,\"383\":1,\"387\":1,\"392\":1,\"404\":1,\"414\":1,\"418\":1,\"422\":1,\"426\":1,\"432\":1,\"436\":1,\"440\":1,\"447\":1,\"452\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"怎么平衡大家的抗拒心理\",{\"0\":{\"181\":1}}],[\"路径别名\",{\"1\":{\"347\":1}}],[\"按需加载core\",{\"1\":{\"422\":1}}],[\"按需加载时并行加载的文件的最大数量\",{\"1\":{\"394\":1,\"396\":1,\"406\":1,\"408\":1}}],[\"按需加载\",{\"0\":{\"395\":1,\"407\":1},\"1\":{\"391\":1,\"403\":1}}],[\"按需加载element\",{\"1\":{\"347\":1}}],[\"按值传递\",{\"1\":{\"58\":1}}],[\"那么用户会感觉到明显卡顿效果\",{\"1\":{\"412\":1}}],[\"那么我们需要这样配置\",{\"1\":{\"396\":1,\"408\":1}}],[\"那么打包生成两个js文件都会叫做main\",{\"1\":{\"393\":1,\"394\":1,\"396\":1,\"405\":1,\"406\":1,\"408\":1}}],[\"那么打包输出文件会比较大\",{\"1\":{\"341\":1,\"347\":1}}],[\"那么就不需要了\",{\"1\":{\"385\":1,\"438\":1,\"442\":1}}],[\"那么图片体积会比较大\",{\"1\":{\"385\":1,\"438\":1}}],[\"那么很难去发现错误出现在哪里\",{\"1\":{\"351\":1,\"445\":1}}],[\"那怎么知道parser分析完成了呢\",{\"1\":{\"160\":1}}],[\"全局主色\",{\"1\":{\"341\":1}}],[\"全局变量\",{\"0\":{\"50\":1}}],[\"缓存目录\",{\"1\":{\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"464\":1,\"468\":1}}],[\"缓存文件不要压缩\",{\"1\":{\"340\":1,\"370\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"464\":1}}],[\"缓存机制允许浏览器在再次请求相同资源时\",{\"1\":{\"5\":1}}],[\"脚手架\",{\"0\":{\"336\":1,\"342\":1}}],[\"脚本指令用法\",{\"1\":{\"325\":1}}],[\"脚本中配置\",{\"1\":{\"131\":1}}],[\"略\",{\"1\":{\"328\":1}}],[\"两种开发模式\",{\"1\":{\"325\":1}}],[\"掌握了以下功能\",{\"1\":{\"325\":1}}],[\"树立代码规范\",{\"1\":{\"324\":1}}],[\"图片\",{\"1\":{\"398\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1}}],[\"图片资源\",{\"1\":{\"324\":1}}],[\"图片是\",{\"1\":{\"200\":1}}],[\"太麻烦了\",{\"1\":{\"319\":1}}],[\"冒号\",{\"1\":{\"316\":1}}],[\"依赖\",{\"1\":{\"308\":1}}],[\"依赖收集完成后\",{\"1\":{\"38\":1}}],[\"容器\",{\"1\":{\"298\":1,\"316\":1}}],[\"容量相对较小\",{\"1\":{\"4\":1}}],[\"容量\",{\"1\":{\"3\":1,\"4\":1}}],[\"都叫\",{\"1\":{\"416\":1}}],[\"都有缓存\",{\"1\":{\"413\":1}}],[\"都只会加载资源\",{\"1\":{\"413\":1}}],[\"都应该去官方文档中找到对应的\",{\"1\":{\"293\":1}}],[\"都是低级函数\",{\"1\":{\"75\":1}}],[\"都是用于在客户端和服务器之间保持状态的机制\",{\"1\":{\"3\":1}}],[\"介绍\",{\"0\":{\"293\":1,\"399\":1}}],[\"本章节主要介绍\",{\"1\":{\"399\":1}}],[\"本章节我们学会了\",{\"1\":{\"325\":1}}],[\"本章节我们学习使用\",{\"1\":{\"292\":1}}],[\"本地项目静态图片才需要进行压缩\",{\"1\":{\"385\":1,\"438\":1,\"442\":1}}],[\"本身是不能识别样式资源的\",{\"1\":{\"293\":1}}],[\"本身只能处理\",{\"1\":{\"256\":1}}],[\"本身功能比较少\",{\"1\":{\"254\":1}}],[\"本身功能是有限的\",{\"1\":{\"246\":1}}],[\"统一命名配置\",{\"1\":{\"398\":1,\"410\":1}}],[\"统一团队编码风格\",{\"1\":{\"324\":1}}],[\"统一下载到本地\",{\"1\":{\"288\":1}}],[\"统一处理即可\",{\"1\":{\"277\":1}}],[\"格式\",{\"1\":{\"285\":1}}],[\"形式内置到\",{\"1\":{\"285\":1}}],[\"形式\",{\"1\":{\"285\":1,\"290\":1}}],[\"形成新的函数\",{\"1\":{\"120\":1}}],[\"形成一个链式调用的过程\",{\"1\":{\"120\":1}}],[\"里面包含源代码和构建后代码每一行\",{\"1\":{\"352\":1,\"446\":1}}],[\"里面\",{\"1\":{\"331\":1}}],[\"里面放置\",{\"1\":{\"296\":1}}],[\"里面去了\",{\"1\":{\"284\":1}}],[\"里面写上各种\",{\"1\":{\"267\":1}}],[\"里了\",{\"1\":{\"279\":1}}],[\"忽略文件\",{\"1\":{\"337\":1,\"338\":1,\"341\":1}}],[\"忽略文件解决\",{\"1\":{\"271\":1}}],[\"忽略dist目录下所有文件\",{\"1\":{\"271\":1}}],[\"强制使用\",{\"1\":{\"269\":1}}],[\"强制数组方法的回调函数中有\",{\"1\":{\"269\":1}}],[\"强行执行组件两次\",{\"1\":{\"141\":1}}],[\"程序会退出\",{\"1\":{\"269\":1}}],[\"继承现有的规则\",{\"1\":{\"269\":1}}],[\"继承\",{\"1\":{\"269\":1,\"270\":1,\"339\":1,\"398\":1,\"410\":1,\"422\":1}}],[\"继承其他规则\",{\"1\":{\"269\":1}}],[\"继承调用\",{\"0\":{\"71\":1}}],[\"区别在于配置格式不一样\",{\"1\":{\"268\":1}}],[\"区别是什么\",{\"0\":{\"179\":1}}],[\"位于项目根目录\",{\"1\":{\"268\":1,\"273\":2}}],[\"关键是写\",{\"1\":{\"267\":1}}],[\"关闭性能分析\",{\"1\":{\"341\":1}}],[\"关闭规则\",{\"1\":{\"269\":1}}],[\"关闭自动上报给组件库官方\",{\"1\":{\"25\":1}}],[\"关闭连接\",{\"1\":{\"1\":1}}],[\"检查\",{\"1\":{\"368\":2,\"369\":1,\"462\":2,\"463\":1}}],[\"检查了\",{\"1\":{\"271\":1}}],[\"检查效果\",{\"1\":{\"270\":1}}],[\"检查工具\",{\"1\":{\"267\":1}}],[\"检测代码格式无误后\",{\"1\":{\"266\":1}}],[\"检测不必要的重新渲染\",{\"1\":{\"116\":1}}],[\"做代码兼容性处理\",{\"1\":{\"266\":1}}],[\"做兼容性处理\",{\"1\":{\"243\":1}}],[\"针对代码格式\",{\"1\":{\"266\":1}}],[\"针对\",{\"1\":{\"266\":1}}],[\"团队对代码格式是有严格要求的\",{\"1\":{\"266\":1}}],[\"再完成生产模式\",{\"1\":{\"260\":1}}],[\"再重新打包才有效果\",{\"1\":{\"240\":1,\"285\":1}}],[\"先进行开发模式\",{\"1\":{\"260\":1}}],[\"先安装react\",{\"1\":{\"25\":1}}],[\"专门用来处理文件路径\",{\"1\":{\"258\":1}}],[\"准备一个使用样式的\",{\"1\":{\"298\":1,\"316\":1}}],[\"准备\",{\"0\":{\"257\":1}}],[\"扩展\",{\"1\":{\"256\":1,\"274\":1}}],[\"才能看到效果\",{\"1\":{\"298\":1}}],[\"才能解析\",{\"1\":{\"256\":1}}],[\"才能运行\",{\"1\":{\"243\":1}}],[\"加载\",{\"1\":{\"413\":2}}],[\"加载后续需要使用的资源\",{\"1\":{\"412\":1}}],[\"加载器\",{\"1\":{\"256\":1,\"257\":1,\"258\":1}}],[\"加入自定义的构建行为\",{\"1\":{\"203\":1}}],[\"之前\",{\"1\":{\"255\":1}}],[\"之间的区别主要是由于它们的设计目标和实现机制不同\",{\"1\":{\"4\":1}}],[\"观察打包输出\",{\"1\":{\"398\":1,\"410\":1}}],[\"观察\",{\"1\":{\"335\":1}}],[\"观察输出文件\",{\"0\":{\"252\":1}}],[\"观察和衔接dep\",{\"1\":{\"29\":1,\"34\":1}}],[\"环境\",{\"1\":{\"251\":1}}],[\"环境配置\",{\"1\":{\"209\":1}}],[\"启用浏览器中全局变量\",{\"1\":{\"270\":1,\"398\":1,\"410\":1,\"422\":1}}],[\"启用node中全局变量\",{\"1\":{\"270\":1,\"398\":1,\"410\":1,\"422\":1}}],[\"启用\",{\"0\":{\"251\":1}}],[\"启动的服务器我们\",{\"1\":{\"426\":1}}],[\"启动开发服务器\",{\"1\":{\"325\":1}}],[\"启动服务器端口号\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"321\":1,\"329\":1,\"330\":1,\"358\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"452\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"启动服务器域名\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"321\":1,\"329\":1,\"330\":1,\"358\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"452\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"启动调试\",{\"0\":{\"215\":1}}],[\"项目一旦处于网络离线情况\",{\"1\":{\"424\":1}}],[\"项目也就没法更新了\",{\"1\":{\"416\":1}}],[\"项目html文件\",{\"1\":{\"328\":1}}],[\"项目\",{\"0\":{\"479\":1},\"1\":{\"269\":1,\"424\":1}}],[\"项目主文件\",{\"1\":{\"248\":1}}],[\"项目源码目录\",{\"1\":{\"248\":1,\"328\":1}}],[\"项目根目录\",{\"1\":{\"248\":1,\"328\":1}}],[\"项目中eslint是如何配置的\",{\"0\":{\"181\":1}}],[\"功能了\",{\"1\":{\"358\":1,\"452\":1}}],[\"功能内置到\",{\"1\":{\"279\":1}}],[\"功能\",{\"1\":{\"274\":1}}],[\"功能介绍\",{\"0\":{\"246\":1,\"296\":1,\"302\":1,\"308\":1,\"314\":1}}],[\"功能和性能\",{\"1\":{\"134\":1}}],[\"除了\",{\"1\":{\"365\":1,\"459\":1}}],[\"除了index\",{\"1\":{\"337\":1,\"338\":1,\"341\":1}}],[\"除了html其他都在src里面\",{\"1\":{\"328\":1}}],[\"除了少数情况下不会有警告\",{\"1\":{\"269\":1}}],[\"除此之外\",{\"1\":{\"243\":1}}],[\"除非你正在使用\",{\"1\":{\"21\":1}}],[\"除非这个连接需要保持活动状态以获取其他资源\",{\"1\":{\"1\":1}}],[\"等未来需要使用时就能直接使用\",{\"1\":{\"442\":1}}],[\"等浏览器运行\",{\"1\":{\"266\":1}}],[\"等资源\",{\"1\":{\"256\":1}}],[\"等其他资源就会报错\",{\"1\":{\"254\":1}}],[\"等语法\",{\"1\":{\"243\":1}}],[\"等\",{\"1\":{\"243\":1,\"420\":1}}],[\"等等完整配置信息\",{\"1\":{\"209\":1}}],[\"等等配置信息\",{\"1\":{\"209\":1}}],[\"│\",{\"1\":{\"240\":1,\"248\":2,\"328\":4}}],[\"└──\",{\"1\":{\"240\":4,\"248\":3,\"328\":4,\"393\":2,\"405\":2}}],[\"├──\",{\"1\":{\"240\":2,\"248\":2,\"328\":8,\"393\":4,\"405\":4}}],[\"例子\",{\"0\":{\"235\":1,\"241\":1,\"253\":1,\"259\":1,\"286\":1,\"318\":1,\"323\":1,\"332\":1,\"427\":1,\"441\":1}}],[\"例如下面这个样子\",{\"1\":{\"351\":1,\"445\":1}}],[\"例如在react项目中\",{\"1\":{\"269\":1}}],[\"例如\",{\"1\":{\"120\":1,\"122\":5,\"123\":1,\"125\":1,\"187\":1}}],[\"例如图片\",{\"1\":{\"1\":1}}],[\"压缩图片\",{\"1\":{\"340\":1,\"341\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"440\":1}}],[\"压缩js\",{\"1\":{\"340\":1,\"341\":1}}],[\"压缩css\",{\"1\":{\"340\":1,\"341\":1}}],[\"压缩的操作\",{\"1\":{\"338\":1,\"340\":1,\"341\":1,\"344\":1,\"346\":1,\"347\":1}}],[\"压缩和\",{\"1\":{\"236\":1}}],[\"压缩\",{\"0\":{\"231\":1,\"236\":1},\"1\":{\"236\":1,\"325\":1}}],[\"合并成了一个文件\",{\"1\":{\"351\":1,\"445\":1}}],[\"合并开发和生产配置\",{\"0\":{\"340\":1,\"346\":1}}],[\"合并配置\",{\"0\":{\"229\":1}}],[\"合约ide\",{\"0\":{\"93\":1}}],[\"合约的两个重要网站\",{\"0\":{\"91\":1}}],[\"合约创建被视为external\",{\"1\":{\"86\":1}}],[\"合约内部创建合约\",{\"0\":{\"80\":1}}],[\"合约转账\",{\"1\":{\"77\":1}}],[\"合约地址的调用\",{\"0\":{\"72\":1}}],[\"合约地址\",{\"1\":{\"56\":1}}],[\"合约掉合约\",{\"1\":{\"56\":1}}],[\"合约不修改状态变量的值\",{\"1\":{\"51\":1}}],[\"控制兼容性\",{\"0\":{\"228\":1}}],[\"能让代码离线也能访问\",{\"1\":{\"442\":1}}],[\"能对输出资源文件进行更好的命名\",{\"1\":{\"442\":1}}],[\"能识别的模块\",{\"1\":{\"296\":1}}],[\"能识别的资源\",{\"1\":{\"290\":2}}],[\"能编译\",{\"1\":{\"246\":1}}],[\"能解决大多数样式兼容性问题\",{\"1\":{\"227\":4,\"229\":1,\"233\":1,\"337\":1,\"338\":1,\"340\":1,\"343\":1,\"344\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"468\":1}}],[\"能够编译es6语法\",{\"1\":{\"422\":1}}],[\"能够减小\",{\"1\":{\"157\":1}}],[\"能够访问到其外部函数的变量\",{\"1\":{\"125\":1}}],[\"排除或只检测某些文件\",{\"1\":{\"442\":1}}],[\"排除\",{\"1\":{\"365\":1,\"459\":1}}],[\"排除node\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"263\":1,\"275\":1,\"321\":1,\"329\":1,\"330\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"排序\",{\"0\":{\"152\":1}}],[\"结尾的文件\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"280\":1,\"285\":1,\"290\":1,\"297\":1,\"303\":1,\"309\":1,\"315\":1,\"321\":1,\"329\":1,\"330\":1,\"334\":1,\"337\":1,\"338\":1,\"340\":1,\"343\":1,\"344\":1,\"346\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"结构\",{\"1\":{\"28\":1}}],[\"成单独文件\",{\"0\":{\"221\":1}}],[\"成功event\",{\"1\":{\"86\":1}}],[\"额外发送请求性能不好\",{\"1\":{\"219\":1}}],[\"名称\",{\"1\":{\"218\":1}}],[\"二维数组中第一项值是key\",{\"1\":{\"218\":1}}],[\"二进制编码\",{\"1\":{\"73\":2}}],[\"遍历文件\",{\"1\":{\"217\":1}}],[\"遍历所有插件\",{\"1\":{\"213\":1,\"214\":1}}],[\"读取当前目录下所有文件\",{\"1\":{\"217\":1}}],[\"操作文件\",{\"1\":{\"217\":1}}],[\"覆盖资源\",{\"1\":{\"216\":1}}],[\"调试控制台\",{\"1\":{\"215\":1}}],[\"调用插件的\",{\"1\":{\"213\":1,\"214\":1}}],[\"调用template生成最终代码\",{\"1\":{\"160\":1}}],[\"调用的结果必须直接返回\",{\"1\":{\"123\":1}}],[\"调用selfdestruct销毁合约\",{\"1\":{\"82\":1}}],[\"调用合约\",{\"0\":{\"68\":1}}],[\"调用合约的人\",{\"1\":{\"61\":1}}],[\"调用者\",{\"1\":{\"50\":1}}],[\"此时通过\",{\"1\":{\"426\":1}}],[\"此时页面会去请求\",{\"1\":{\"426\":1}}],[\"此时就会自动根据我们代码中使用的语法\",{\"1\":{\"422\":1}}],[\"此时观察打包输出的\",{\"1\":{\"422\":1}}],[\"此时我们会发现生成\",{\"1\":{\"394\":1,\"406\":1}}],[\"此时会忽略minremainingsize\",{\"1\":{\"394\":1,\"396\":1,\"406\":1,\"408\":1}}],[\"此时会生成一个基础的\",{\"1\":{\"250\":1}}],[\"此时在\",{\"1\":{\"393\":1,\"405\":1}}],[\"此时如果直接通过\",{\"1\":{\"426\":1}}],[\"此时如果代码运行出错那么提示代码错误位置我们是看不懂的\",{\"1\":{\"351\":1,\"445\":1}}],[\"此时如果查看\",{\"1\":{\"284\":1}}],[\"此时将所有node\",{\"1\":{\"341\":1,\"347\":1}}],[\"此时样式就会以\",{\"1\":{\"296\":1}}],[\"此时输出的图片文件就只有两张\",{\"1\":{\"285\":1}}],[\"此时输出文件目录\",{\"1\":{\"240\":1}}],[\"此时\",{\"1\":{\"265\":1,\"358\":1,\"422\":1,\"452\":1}}],[\"此时功能和之前一样\",{\"1\":{\"258\":1}}],[\"此时控制台会显示一个绿色的图标\",{\"1\":{\"215\":1}}],[\"此时控制台输出以下内容\",{\"1\":{\"215\":1}}],[\"此时loader执行顺序\",{\"1\":{\"187\":2}}],[\"特点就是异步任务顺序执行\",{\"1\":{\"214\":1}}],[\"特点就是异步任务同时执行\",{\"1\":{\"214\":1}}],[\"特别是对于递归调用层次很深的函数\",{\"1\":{\"123\":1}}],[\"注入\",{\"1\":{\"382\":1,\"435\":1}}],[\"注入进去\",{\"1\":{\"219\":1}}],[\"注册\",{\"0\":{\"214\":1},\"1\":{\"214\":1}}],[\"注意用hash\",{\"1\":{\"398\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1}}],[\"注意是前面的xxx\",{\"1\":{\"393\":1,\"394\":1,\"396\":1,\"405\":1,\"406\":1,\"408\":1}}],[\"注意运行指令发生了变化\",{\"1\":{\"322\":1}}],[\"注意字体文件路径需要修改\",{\"1\":{\"289\":1}}],[\"注意\",{\"1\":{\"76\":1,\"240\":1,\"285\":1,\"295\":1,\"307\":1,\"378\":1,\"385\":1,\"431\":1,\"438\":1}}],[\"入口文件打包输出资源命名方式\",{\"1\":{\"398\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1}}],[\"入口文件引入的资源组成一个\",{\"1\":{\"210\":1}}],[\"入口js文件最大并行请求数量\",{\"1\":{\"394\":1,\"396\":1,\"406\":1,\"408\":1}}],[\"入口\",{\"1\":{\"256\":1,\"257\":1,\"258\":1}}],[\"入参和必要条件检测\",{\"1\":{\"56\":1}}],[\"组名\",{\"1\":{\"394\":2,\"396\":1,\"406\":2,\"408\":1}}],[\"组\",{\"1\":{\"394\":2,\"396\":1,\"406\":2,\"408\":1}}],[\"组成而来的一个代码块\",{\"1\":{\"210\":1}}],[\"组件外状态\",{\"1\":{\"142\":1}}],[\"组件内状态\",{\"1\":{\"140\":1}}],[\"组件性能的详细信息\",{\"1\":{\"116\":1}}],[\"组件重新渲染可能导致性能问题\",{\"1\":{\"116\":1}}],[\"组件级\",{\"1\":{\"36\":1}}],[\"组件库\",{\"0\":{\"24\":1}}],[\"打包速度更快\",{\"1\":{\"442\":1}}],[\"打包速度越来越慢\",{\"1\":{\"372\":1,\"466\":1}}],[\"打包体积更小\",{\"1\":{\"422\":1}}],[\"打包的资源就是chunk\",{\"1\":{\"393\":1,\"394\":1,\"396\":1,\"405\":1,\"406\":1,\"408\":1}}],[\"打包的每一个文件都是一个模块\",{\"1\":{\"210\":1}}],[\"打包代码时会将所有\",{\"1\":{\"390\":1,\"402\":1}}],[\"打包时会出现报错\",{\"1\":{\"387\":1,\"440\":1}}],[\"打包时每个文件都会经过所有\",{\"1\":{\"360\":1,\"454\":1}}],[\"打包编译速度更慢\",{\"1\":{\"353\":1,\"447\":1}}],[\"打包编译速度快\",{\"1\":{\"353\":1,\"447\":1}}],[\"打包完的文件输出到哪里去\",{\"1\":{\"256\":1}}],[\"打包工具还能压缩代码\",{\"1\":{\"243\":1}}],[\"打包生成的\",{\"1\":{\"219\":1}}],[\"打包资源大小\",{\"1\":{\"218\":1}}],[\"打包输出前将上次打包内容清空\",{\"1\":{\"217\":1}}],[\"打断点\",{\"1\":{\"215\":1}}],[\"打开阿里巴巴矢量图标库\",{\"1\":{\"288\":1}}],[\"打开打包后的\",{\"1\":{\"275\":1}}],[\"打开终端\",{\"1\":{\"250\":1}}],[\"打开浏览器调试控制台\",{\"1\":{\"215\":1}}],[\"打开\",{\"1\":{\"215\":1,\"271\":1,\"278\":1,\"283\":1,\"291\":1,\"299\":1,\"305\":1,\"311\":1,\"317\":1}}],[\"打印渲染信息\",{\"1\":{\"117\":1}}],[\"打印日志如下\",{\"1\":{\"117\":1}}],[\"哈希\",{\"1\":{\"210\":1}}],[\"封存\",{\"1\":{\"210\":1}}],[\"生产环境不需要了\",{\"1\":{\"358\":1,\"452\":1}}],[\"生产模式也是如此配置\",{\"1\":{\"362\":1,\"366\":1,\"456\":1,\"460\":1}}],[\"生产模式配置\",{\"0\":{\"338\":1,\"344\":1}}],[\"生产模式配置文件\",{\"1\":{\"328\":1}}],[\"生产模式准备\",{\"0\":{\"327\":1}}],[\"生产模式是开发完成代码后\",{\"1\":{\"326\":1}}],[\"生产模式介绍\",{\"0\":{\"326\":1}}],[\"生产模式\",{\"1\":{\"246\":1,\"251\":1,\"256\":1,\"325\":2,\"331\":1,\"353\":1,\"447\":1}}],[\"生产模式需要输出\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"330\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"468\":1}}],[\"生命周期简图\",{\"0\":{\"211\":1}}],[\"生命周期中植入不同的逻辑\",{\"1\":{\"209\":1}}],[\"生成对应的哈希值\",{\"1\":{\"417\":1}}],[\"生成多个\",{\"1\":{\"390\":1,\"391\":1,\"402\":1,\"403\":1}}],[\"生成的输出是一个序列化的\",{\"1\":{\"157\":1}}],[\"生成更高效的代码\",{\"1\":{\"157\":1}}],[\"生成一个详细的\",{\"1\":{\"131\":1}}],[\"生成一格组件内部的id\",{\"1\":{\"19\":1}}],[\"生成详细的测试报告\",{\"1\":{\"136\":1}}],[\"生成详细的\",{\"1\":{\"131\":1}}],[\"生成tailwind\",{\"1\":{\"25\":1}}],[\"仅能编译\",{\"1\":{\"246\":1}}],[\"仅仅会创建一次的对象\",{\"1\":{\"209\":1}}],[\"仅限内部访问\",{\"1\":{\"51\":1}}],[\"方案三\",{\"1\":{\"472\":1}}],[\"方案二\",{\"1\":{\"472\":1}}],[\"方案一\",{\"1\":{\"472\":1}}],[\"方式注册异步钩子\",{\"1\":{\"207\":1}}],[\"方法二\",{\"1\":{\"472\":1}}],[\"方法一\",{\"1\":{\"472\":1}}],[\"方法返回一个绝对路径\",{\"1\":{\"258\":1}}],[\"方法名\",{\"1\":{\"196\":1}}],[\"方法则更灵活\",{\"1\":{\"192\":1}}],[\"方法\",{\"1\":{\"2\":1,\"195\":2,\"213\":2,\"214\":2}}],[\"回调方式注册异步钩子\",{\"1\":{\"207\":1}}],[\"还需要额外配置\",{\"1\":{\"395\":1,\"407\":1}}],[\"还有剩下包需要下载\",{\"1\":{\"387\":1,\"440\":1}}],[\"还不行\",{\"1\":{\"358\":1,\"452\":1}}],[\"还会将其依赖也一起打包进来\",{\"1\":{\"251\":1}}],[\"还能压缩\",{\"1\":{\"246\":1}}],[\"还统一暴露了三个方法给插件\",{\"1\":{\"207\":1}}],[\"还是\",{\"1\":{\"78\":1,\"102\":1}}],[\"他们是\",{\"1\":{\"207\":1}}],[\"源代码映射\",{\"1\":{\"352\":1,\"446\":1}}],[\"源码中可以看到\",{\"1\":{\"207\":1}}],[\"源文件的内容\",{\"1\":{\"190\":1}}],[\"钩子\",{\"1\":{\"206\":1,\"207\":1,\"216\":1,\"217\":1}}],[\"钩子的本质就是\",{\"1\":{\"206\":1}}],[\"钩子事件\",{\"1\":{\"204\":1}}],[\"往上面挂上自己的任务\",{\"1\":{\"204\":1}}],[\"往数组添加依赖\",{\"1\":{\"35\":1}}],[\"站在代码逻辑的角度就是\",{\"1\":{\"204\":1}}],[\"深入浅出\",{\"1\":{\"204\":1}}],[\"要在比较多代码处理时使用才有效果\",{\"1\":{\"442\":1}}],[\"要排除\",{\"1\":{\"364\":1,\"458\":1}}],[\"要经过一系列处理流程后才能将源文件转换成输出结果\",{\"1\":{\"204\":1}}],[\"要求\",{\"1\":{\"201\":1,\"269\":1}}],[\"拥有更强的构建能力\",{\"1\":{\"203\":1}}],[\"希望得到\",{\"1\":{\"201\":1}}],[\"插入\",{\"1\":{\"201\":1}}],[\"插件对\",{\"1\":{\"442\":1}}],[\"插件生命周期\",{\"1\":{\"211\":1}}],[\"插件注册的事件就会随着钩子的触发而执行了\",{\"1\":{\"204\":1}}],[\"插件所做的\",{\"1\":{\"204\":1}}],[\"插件只需要监听它所关心的事件\",{\"1\":{\"204\":1}}],[\"插件就像是一个插入到生产线中的一个功能\",{\"1\":{\"204\":1}}],[\"插件集成\",{\"1\":{\"131\":1}}],[\"插件\",{\"0\":{\"271\":1},\"1\":{\"131\":1,\"256\":1,\"257\":1,\"258\":1,\"271\":1,\"274\":1}}],[\"动态导入语法进行按需加载\",{\"1\":{\"442\":1}}],[\"动态导入语法来进行代码按需加载\",{\"1\":{\"412\":1}}],[\"动态导入语法导入模块\",{\"1\":{\"395\":1,\"407\":1}}],[\"动态导入输出资源命名方式\",{\"1\":{\"398\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1}}],[\"动态导入模块\",{\"1\":{\"395\":1,\"407\":1}}],[\"动态导入\",{\"0\":{\"395\":1,\"407\":1},\"1\":{\"395\":1,\"407\":1}}],[\"动态创建style标签\",{\"1\":{\"201\":1}}],[\"动态创建\",{\"1\":{\"201\":1}}],[\"动态数组不允许不存在的下标\",{\"1\":{\"53\":1}}],[\"动态数组\",{\"1\":{\"53\":1}}],[\"记得加上\",{\"1\":{\"200\":1}}],[\"记录amount和gas\",{\"1\":{\"79\":1}}],[\"暴露出去\",{\"1\":{\"200\":1}}],[\"下一个页面需要使用的资源用\",{\"1\":{\"413\":1}}],[\"下面\",{\"1\":{\"387\":2,\"440\":2}}],[\"下面的文件\",{\"1\":{\"271\":2,\"364\":1,\"458\":1}}],[\"下面是一个简单的\",{\"1\":{\"121\":1}}],[\"下面是\",{\"1\":{\"28\":1}}],[\"下载字体图标文件\",{\"0\":{\"288\":1}}],[\"下载\",{\"1\":{\"271\":1}}],[\"下载包存放目录\",{\"1\":{\"328\":1}}],[\"下载包\",{\"0\":{\"222\":1,\"226\":1,\"232\":1,\"262\":1,\"295\":1,\"301\":1,\"307\":1,\"313\":1,\"320\":1},\"1\":{\"200\":1,\"270\":1,\"275\":1,\"374\":1,\"383\":1,\"387\":1,\"393\":1,\"398\":1,\"405\":1,\"410\":1,\"414\":1,\"422\":2,\"426\":2,\"436\":1,\"440\":1,\"468\":1}}],[\"下载依赖\",{\"0\":{\"250\":1},\"1\":{\"199\":1,\"250\":1}}],[\"规则太费劲了\",{\"1\":{\"269\":1}}],[\"规则文档\",{\"1\":{\"269\":1}}],[\"规则\",{\"1\":{\"198\":1,\"267\":1,\"270\":1,\"398\":1,\"410\":1,\"422\":1}}],[\"符合\",{\"1\":{\"198\":1}}],[\"给动态导入文件取名称\",{\"0\":{\"398\":1,\"410\":1}}],[\"给打包输出文件添加注释\",{\"1\":{\"216\":1}}],[\"给js引用\",{\"1\":{\"200\":1}}],[\"给\",{\"1\":{\"198\":1}}],[\"作用\",{\"1\":{\"197\":1,\"198\":1,\"199\":1,\"200\":1,\"201\":1,\"216\":1,\"217\":1,\"218\":1,\"219\":1}}],[\"作为函数返回值\",{\"1\":{\"125\":1}}],[\"官方规则\",{\"1\":{\"339\":1}}],[\"官方的规则\",{\"1\":{\"269\":3}}],[\"官方文档找不到的话\",{\"1\":{\"293\":1}}],[\"官方文档\",{\"1\":{\"219\":1}}],[\"官方\",{\"1\":{\"196\":1,\"293\":1}}],[\"官网地址\",{\"1\":{\"387\":2,\"440\":2}}],[\"官网\",{\"1\":{\"44\":1,\"144\":1}}],[\"更多规则详见\",{\"1\":{\"269\":1}}],[\"更多文档\",{\"1\":{\"196\":1}}],[\"更新后\",{\"1\":{\"418\":1}}],[\"更新前\",{\"1\":{\"418\":1}}],[\"更新之前的配置文件\",{\"1\":{\"397\":1,\"409\":1}}],[\"更新配置\",{\"0\":{\"397\":1,\"409\":1}}],[\"更新或优化时\",{\"1\":{\"136\":1}}],[\"更新服务器上的资源\",{\"1\":{\"2\":1}}],[\"产生一个文件\",{\"1\":{\"196\":1}}],[\"链被阻断\",{\"1\":{\"195\":1}}],[\"链中的每个\",{\"1\":{\"195\":2}}],[\"则它将被重用\",{\"1\":{\"394\":2,\"396\":1,\"406\":2,\"408\":1}}],[\"则\",{\"1\":{\"195\":1}}],[\"则需要将域名解析为对应的\",{\"1\":{\"1\":1}}],[\"上面这样写会很麻烦\",{\"1\":{\"358\":1,\"452\":1}}],[\"上的普通\",{\"1\":{\"195\":1}}],[\"上的\",{\"1\":{\"195\":1}}],[\"上述例子表示缓存的有效性受到请求头中的\",{\"1\":{\"7\":1}}],[\"开始使用\",{\"0\":{\"247\":1}}],[\"开头\",{\"1\":{\"201\":1}}],[\"开启多进程\",{\"1\":{\"374\":3,\"383\":3,\"387\":3,\"397\":3,\"398\":3,\"409\":3,\"410\":3,\"414\":3,\"418\":6,\"426\":3,\"436\":3,\"440\":3,\"468\":3}}],[\"开启电脑的多个进程同时干一件事\",{\"1\":{\"373\":1,\"467\":1}}],[\"开启hmr功能\",{\"1\":{\"358\":1,\"362\":1,\"366\":1,\"370\":1,\"452\":1,\"456\":1,\"460\":1,\"464\":1}}],[\"开启缓存\",{\"1\":{\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"464\":1,\"468\":1}}],[\"开启babel编译缓存\",{\"1\":{\"340\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"464\":1,\"468\":1}}],[\"开启js的hmr功能\",{\"1\":{\"337\":1}}],[\"开启规则\",{\"1\":{\"269\":2}}],[\"开启\",{\"1\":{\"194\":1}}],[\"开发\",{\"1\":{\"424\":1}}],[\"开发如果项目中引用了较多图片\",{\"1\":{\"385\":1,\"438\":1}}],[\"开发服务器\",{\"0\":{\"319\":1},\"1\":{\"321\":1,\"362\":1,\"366\":1,\"370\":1,\"456\":1,\"460\":1,\"464\":1}}],[\"开发中可能还存在一些其他资源\",{\"1\":{\"276\":1}}],[\"开发中一点点写\",{\"1\":{\"269\":1}}],[\"开发模式配置\",{\"0\":{\"337\":1,\"343\":1}}],[\"开发模式配置文件\",{\"1\":{\"328\":1}}],[\"开发模式没有输出\",{\"1\":{\"329\":2,\"362\":2,\"366\":2,\"370\":2,\"456\":2,\"460\":2,\"464\":2}}],[\"开发模式顾名思义就是我们开发代码时使用的模式\",{\"1\":{\"324\":1}}],[\"开发模式介绍\",{\"0\":{\"324\":1}}],[\"开发模式\",{\"1\":{\"246\":1,\"251\":1,\"256\":1,\"258\":1,\"325\":2,\"331\":1,\"353\":1,\"447\":1}}],[\"开发时我们可能是单页面应用\",{\"1\":{\"396\":1,\"408\":1}}],[\"开发时我们定义了一些工具函数库\",{\"1\":{\"377\":1,\"430\":1}}],[\"开发时我们需要使用第三方的库或插件\",{\"1\":{\"364\":1,\"458\":1}}],[\"开发时我们修改了其中一个模块代码\",{\"1\":{\"356\":1,\"450\":1}}],[\"开发时我们运行的代码是经过\",{\"1\":{\"351\":1,\"445\":1}}],[\"开发时我们有样式资源\",{\"1\":{\"324\":1}}],[\"开发时我们只关心代码能运行\",{\"1\":{\"322\":1}}],[\"开发时\",{\"1\":{\"243\":1}}],[\"开发思路\",{\"1\":{\"216\":1,\"217\":1,\"218\":1,\"219\":1}}],[\"开发插件\",{\"1\":{\"206\":1}}],[\"开发一个插件\",{\"0\":{\"212\":1}}],[\"开发一个\",{\"0\":{\"188\":1}}],[\"开发人员应该仔细考虑其是否适用于特定项目\",{\"1\":{\"157\":1}}],[\"开发人员可以更容易地进行视觉回归测试\",{\"1\":{\"136\":1}}],[\"开发的\",{\"1\":{\"157\":1}}],[\"开发团队可以更有信心地发布他们的应用程序\",{\"1\":{\"134\":1}}],[\"开发者还会使用混合渲染的方法\",{\"1\":{\"102\":1}}],[\"开发者需要根据具体情况选择合适的缓存配置\",{\"1\":{\"7\":1}}],[\"开发者根据具体需求选择使用其中的一种或结合使用\",{\"1\":{\"4\":1}}],[\"默认值\",{\"1\":{\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"默认会将所有模块全部重新打包编译\",{\"1\":{\"356\":1,\"450\":1}}],[\"默认都不能处理这些资源\",{\"1\":{\"324\":1}}],[\"默认\",{\"1\":{\"252\":1}}],[\"默认生产模式已经开启了\",{\"1\":{\"236\":1}}],[\"默认情况下会被添加到每一个需要它的文件中\",{\"1\":{\"381\":1,\"434\":1}}],[\"默认情况下\",{\"1\":{\"194\":1}}],[\"默认是0\",{\"1\":{\"92\":1}}],[\"异步回调\",{\"1\":{\"196\":1}}],[\"异步化\",{\"1\":{\"193\":1}}],[\"异步\",{\"0\":{\"193\":1}}],[\"异步操作\",{\"1\":{\"141\":1}}],[\"异步操作完成后\",{\"1\":{\"141\":1}}],[\"让辅助代码从中引入\",{\"1\":{\"442\":1}}],[\"让第二次打包速度更快\",{\"1\":{\"442\":1}}],[\"让资源文件一旦被某个\",{\"1\":{\"442\":1}}],[\"让开发时只重新编译打包更新变化了的代码\",{\"1\":{\"442\":1}}],[\"让开发或上线时代码报错能有更加准确的错误提示\",{\"1\":{\"442\":1}}],[\"让我们代码能运行在低版本浏览器\",{\"1\":{\"442\":1}}],[\"让我们代码在编译\",{\"1\":{\"399\":1}}],[\"让我们在不兼容某些新特性的浏览器上\",{\"1\":{\"421\":1}}],[\"让我们先看一个简单的例子\",{\"1\":{\"125\":1}}],[\"让vue可以使用\",{\"1\":{\"343\":1}}],[\"让jsx可以使用\",{\"1\":{\"337\":1}}],[\"让其运行性能更好\",{\"1\":{\"326\":1}}],[\"让代码体积更小\",{\"1\":{\"442\":1}}],[\"让代码更优雅美观\",{\"1\":{\"324\":1}}],[\"让代码运行时能更加健壮\",{\"1\":{\"324\":1}}],[\"让下一个loader接收到其他参数\",{\"1\":{\"192\":1}}],[\"让source\",{\"1\":{\"192\":1}}],[\"传递meta\",{\"1\":{\"192\":1}}],[\"传递map\",{\"1\":{\"192\":1}}],[\"传输方式\",{\"1\":{\"3\":1}}],[\"同步\",{\"0\":{\"192\":1},\"1\":{\"193\":1}}],[\"同时会使用\",{\"1\":{\"412\":1}}],[\"同时会添加到dep中\",{\"1\":{\"38\":1}}],[\"同时也能按需加载了\",{\"1\":{\"395\":1,\"407\":1}}],[\"同时也提供了更好的测试和扩展性\",{\"1\":{\"28\":1}}],[\"同时小于某个大小的资源会处理成\",{\"1\":{\"290\":1}}],[\"同时对options内容进行校验\",{\"1\":{\"198\":1}}],[\"同时在服务器端创建一个与该标识符相关联的\",{\"1\":{\"3\":1}}],[\"跳过terser压缩js\",{\"1\":{\"337\":1,\"338\":1,\"341\":1}}],[\"跳过\",{\"1\":{\"187\":3}}],[\"跳过其他类型\",{\"1\":{\"187\":1}}],[\"处理的结果进行缓存\",{\"1\":{\"442\":1}}],[\"处理的文件更少\",{\"1\":{\"442\":1}}],[\"处理了\",{\"1\":{\"442\":1}}],[\"处理样式资源\",{\"0\":{\"292\":1}}],[\"处理字体图标资源\",{\"0\":{\"287\":1}}],[\"处理图片资源\",{\"0\":{\"279\":1}}],[\"处理其他资源\",{\"0\":{\"276\":1}}],[\"处理是有限的\",{\"1\":{\"266\":1}}],[\"处理\",{\"0\":{\"220\":1,\"261\":1,\"266\":1,\"294\":1,\"300\":1,\"306\":1,\"312\":1},\"1\":{\"187\":1,\"358\":1,\"360\":1,\"452\":1,\"454\":1}}],[\"处理下call的返回值\",{\"1\":{\"79\":1}}],[\"处理下send的返回值\",{\"1\":{\"79\":1}}],[\"含义\",{\"1\":{\"187\":1,\"196\":1}}],[\"普通\",{\"1\":{\"187\":1}}],[\"前言\",{\"0\":{\"242\":1}}],[\"前将内联\",{\"1\":{\"219\":1}}],[\"前置\",{\"1\":{\"187\":1}}],[\"前端架构指南\",{\"0\":{\"103\":1}}],[\"帮助我们更快的找到错误根源\",{\"1\":{\"352\":1,\"446\":1}}],[\"帮助\",{\"1\":{\"186\":1}}],[\"帮助你优化应用程序\",{\"1\":{\"116\":1}}],[\"帮助你理解为何触发了重新渲染\",{\"1\":{\"116\":1}}],[\"概念\",{\"0\":{\"186\":1}}],[\"原生应用程序\",{\"1\":{\"425\":1}}],[\"原因\",{\"1\":{\"418\":2}}],[\"原因是\",{\"1\":{\"266\":1}}],[\"原理\",{\"0\":{\"185\":1,\"202\":1,\"477\":1}}],[\"原子状态\",{\"1\":{\"23\":1}}],[\"各自的优缺点是什么\",{\"0\":{\"184\":1}}],[\"综合聊一下你会前端工程化的理解\",{\"0\":{\"183\":1}}],[\"综合考虑\",{\"1\":{\"3\":1}}],[\"说一下sonar的具体配置\",{\"0\":{\"174\":1}}],[\"说一下webpack的热更新原理\",{\"0\":{\"171\":1}}],[\"详细描述swc原理\",{\"0\":{\"168\":1}}],[\"详细描述babel原理\",{\"0\":{\"167\":1}}],[\"分割代码最小的大小\",{\"1\":{\"394\":1,\"396\":1,\"406\":1,\"408\":1}}],[\"分割文件\",{\"1\":{\"391\":1,\"403\":1}}],[\"分号\",{\"1\":{\"316\":1}}],[\"分支\",{\"1\":{\"269\":1}}],[\"分析打包资源大小\",{\"1\":{\"218\":1}}],[\"分析\",{\"1\":{\"218\":1}}],[\"分析文件\",{\"1\":{\"217\":1}}],[\"分析出来后放到module中\",{\"1\":{\"160\":1}}],[\"分块\",{\"1\":{\"210\":1}}],[\"分开\",{\"1\":{\"187\":1}}],[\"分类\",{\"0\":{\"191\":1},\"1\":{\"187\":1}}],[\"分别是什么作用\",{\"0\":{\"163\":1}}],[\"高级部分\",{\"0\":{\"480\":1}}],[\"高级配置\",{\"1\":{\"399\":1}}],[\"高频考题\",{\"0\":{\"161\":1}}],[\"高阶函数的使用有助于提高代码的可读性\",{\"1\":{\"122\":1}}],[\"高阶函数也可以返回一个新的函数\",{\"1\":{\"122\":1}}],[\"高阶函数可以接受其他函数作为参数\",{\"1\":{\"122\":1}}],[\"高阶函数是一种强大的抽象工具\",{\"1\":{\"122\":1}}],[\"高阶函数是指接受一个或多个函数作为参数\",{\"1\":{\"122\":1}}],[\"高阶函数\",{\"0\":{\"122\":1},\"1\":{\"119\":1}}],[\"把编译过程中触发的各类关键事件封装成事件接口暴露了出来\",{\"1\":{\"206\":1}}],[\"把data的内容放在了的数组中\",{\"1\":{\"159\":1}}],[\"把数据处理成响应式数据\",{\"1\":{\"33\":1}}],[\"总结\",{\"0\":{\"325\":1,\"442\":1},\"1\":{\"393\":1,\"405\":1,\"413\":1}}],[\"总是返回\",{\"1\":{\"192\":1}}],[\"总体而言\",{\"1\":{\"157\":1}}],[\"总的来说\",{\"1\":{\"25\":1}}],[\"工作原理\",{\"0\":{\"204\":1}}],[\"工作方式\",{\"1\":{\"100\":1,\"101\":1}}],[\"工具和工作流程兼容\",{\"1\":{\"157\":1}}],[\"序列化的\",{\"1\":{\"157\":1}}],[\"预设\",{\"1\":{\"274\":2}}],[\"预处理器等语法进行开发\",{\"1\":{\"243\":1}}],[\"预处理优化可以减轻客户端设备的负担\",{\"1\":{\"157\":1}}],[\"预处理阶段的优化\",{\"1\":{\"157\":1}}],[\"预言机\",{\"1\":{\"91\":1}}],[\"捆绑包的大小\",{\"1\":{\"157\":1}}],[\"精简的代码捆绑包\",{\"1\":{\"157\":1}}],[\"优先考虑前面内容\",{\"1\":{\"341\":1,\"347\":1}}],[\"优化配置\",{\"0\":{\"341\":1,\"347\":1}}],[\"优化代码打包速度\",{\"1\":{\"326\":1}}],[\"优化代码运行性能\",{\"0\":{\"388\":1,\"400\":1},\"1\":{\"326\":1,\"348\":1,\"399\":1,\"442\":1}}],[\"优化主要从两个角度出发\",{\"1\":{\"326\":1}}],[\"优化\",{\"1\":{\"210\":1,\"399\":1}}],[\"优化工具\",{\"1\":{\"157\":1}}],[\"优点\",{\"1\":{\"100\":1,\"101\":1,\"285\":1,\"353\":2,\"447\":2}}],[\"空间复杂度最好是o\",{\"1\":{\"154\":1}}],[\"quicksort\",{\"1\":{\"154\":3}}],[\"queue\",{\"1\":{\"40\":3}}],[\"queuewatcher\",{\"1\":{\"34\":1}}],[\"query\",{\"1\":{\"23\":1,\"223\":4,\"227\":4,\"229\":4,\"233\":4,\"238\":3,\"263\":4,\"270\":4,\"275\":4,\"277\":4,\"290\":4,\"321\":4,\"329\":4,\"330\":4,\"334\":4,\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"362\":4,\"366\":4,\"370\":4,\"374\":4,\"383\":4,\"387\":4,\"397\":4,\"398\":4,\"409\":4,\"410\":4,\"414\":4,\"418\":8,\"426\":4,\"436\":4,\"440\":4,\"456\":4,\"460\":4,\"464\":4,\"468\":4}}],[\"快排\",{\"0\":{\"154\":1}}],[\"快速首次加载\",{\"1\":{\"101\":1}}],[\"快速导航\",{\"1\":{\"100\":1}}],[\"归并排序\",{\"0\":{\"153\":1}}],[\"搭建组件库\",{\"0\":{\"148\":1}}],[\"来按需加载相应的\",{\"1\":{\"422\":1}}],[\"来进行\",{\"1\":{\"422\":1}}],[\"来避免重复引入\",{\"1\":{\"381\":1,\"434\":1}}],[\"来解决\",{\"1\":{\"358\":1,\"452\":1}}],[\"来帮助我们更好的开发代码\",{\"1\":{\"351\":1,\"445\":1}}],[\"来帮助\",{\"1\":{\"293\":1}}],[\"来完成\",{\"1\":{\"266\":2}}],[\"来增强\",{\"1\":{\"260\":1}}],[\"来到项目根目录\",{\"1\":{\"250\":1}}],[\"来介绍使用打包工具\",{\"1\":{\"244\":1}}],[\"来控制样式的兼容性做到什么程度\",{\"1\":{\"228\":1}}],[\"来实现\",{\"1\":{\"219\":1}}],[\"来组织这条复杂的生产线\",{\"1\":{\"204\":1}}],[\"来保存状态的引用\",{\"1\":{\"141\":1}}],[\"来捕捉基准屏幕截图\",{\"1\":{\"136\":1}}],[\"清理函数\",{\"1\":{\"141\":1}}],[\"尝试更新组件状态\",{\"1\":{\"141\":1}}],[\"什么是chunk\",{\"1\":{\"393\":1,\"394\":1,\"396\":1,\"405\":1,\"406\":1,\"408\":1}}],[\"什么是钩子\",{\"0\":{\"206\":1}}],[\"什么是状态撕裂\",{\"0\":{\"141\":1}}],[\"什么是why\",{\"0\":{\"116\":1}}],[\"捕捉基准屏幕截图\",{\"1\":{\"136\":1}}],[\"运行时性能更好~\",{\"1\":{\"399\":1}}],[\"运行时性能更好\",{\"1\":{\"348\":1}}],[\"运行生产模式的指令\",{\"1\":{\"330\":1}}],[\"运行开发模式的指令\",{\"1\":{\"329\":1}}],[\"运行的\",{\"1\":{\"257\":1}}],[\"运行以下指令\",{\"1\":{\"250\":1}}],[\"运行指令\",{\"0\":{\"224\":1,\"230\":1,\"234\":1,\"240\":1,\"265\":1,\"278\":1,\"283\":1,\"291\":1,\"299\":1,\"305\":1,\"311\":1,\"317\":1,\"322\":1,\"335\":1},\"1\":{\"215\":1,\"258\":1,\"270\":1,\"275\":1,\"393\":1,\"394\":1,\"395\":1,\"398\":1,\"405\":1,\"406\":1,\"407\":1,\"410\":1,\"422\":1,\"426\":2}}],[\"运行\",{\"1\":{\"136\":3}}],[\"运行服务器端的脚本等操作\",{\"1\":{\"1\":1}}],[\"到你的项目中\",{\"1\":{\"136\":1}}],[\"展示页面的每个视图和检测到的差异\",{\"1\":{\"136\":1}}],[\"展示一下钱包的余额\",{\"1\":{\"90\":1}}],[\"命令行工具\",{\"1\":{\"136\":1}}],[\"比较慢\",{\"1\":{\"360\":1,\"454\":1}}],[\"比较设置等\",{\"1\":{\"136\":1}}],[\"比如箭头函数\",{\"1\":{\"420\":1}}],[\"比如路由懒加载就是这样实现的\",{\"1\":{\"412\":1}}],[\"比如\",{\"1\":{\"209\":1,\"358\":1,\"381\":1,\"393\":1,\"394\":1,\"396\":1,\"405\":1,\"406\":1,\"408\":1,\"412\":1,\"434\":1,\"452\":1}}],[\"比如console\",{\"1\":{\"47\":1}}],[\"比如游戏\",{\"1\":{\"23\":1}}],[\"比如缓存\",{\"1\":{\"1\":1}}],[\"比如网页的\",{\"1\":{\"1\":1}}],[\"视口大小\",{\"1\":{\"136\":1}}],[\"视图状态变量\",{\"1\":{\"49\":1}}],[\"视图发生操作触发数据更新\",{\"1\":{\"28\":1}}],[\"视图通常是用户界面的\",{\"1\":{\"28\":1}}],[\"视图通常是由模板或页面组成\",{\"1\":{\"28\":1}}],[\"视图是用户界面的表示\",{\"1\":{\"28\":1}}],[\"视图模型通常是由\",{\"1\":{\"28\":1}}],[\"视图模型从模型中获取数据\",{\"1\":{\"28\":1}}],[\"视图模型是连接视图和模型的桥梁\",{\"1\":{\"28\":1}}],[\"视图模型\",{\"1\":{\"28\":2}}],[\"视图\",{\"1\":{\"28\":2}}],[\"你有开发过自己的脚手架吗\",{\"0\":{\"182\":1}}],[\"你的项目ci\",{\"0\":{\"175\":1}}],[\"你的项目工程化sonar是如何配置的\",{\"0\":{\"173\":1}}],[\"你需要运行\",{\"1\":{\"136\":1}}],[\"你可以将这些辅助代码作为一个独立模块\",{\"1\":{\"381\":1,\"434\":1}}],[\"你可以通过命令行运行测试\",{\"1\":{\"136\":1}}],[\"你可以通过运行命令行命令或在\",{\"1\":{\"131\":1}}],[\"你可以根据项目需求进行配置\",{\"1\":{\"136\":1}}],[\"你可以配置不同的主题和样式\",{\"1\":{\"131\":1}}],[\"你可以手动实现柯里化\",{\"1\":{\"120\":1}}],[\"你可以选择对哪些组件启用\",{\"1\":{\"116\":1}}],[\"基本功能\",{\"1\":{\"325\":1}}],[\"基本配置\",{\"0\":{\"255\":1},\"1\":{\"358\":1,\"452\":1}}],[\"基本使用\",{\"0\":{\"245\":1},\"1\":{\"325\":1}}],[\"基准截图\",{\"1\":{\"136\":1}}],[\"基础部分\",{\"0\":{\"46\":1,\"478\":1}}],[\"布局或内容发生的变化\",{\"1\":{\"136\":1}}],[\"推出的开源工具\",{\"1\":{\"134\":1}}],[\"界面问题等\",{\"1\":{\"134\":1}}],[\"自动按需引入\",{\"1\":{\"422\":1}}],[\"自动对每个文件的\",{\"1\":{\"382\":1,\"435\":1}}],[\"自动引入我们定义的scss文件\",{\"1\":{\"347\":1}}],[\"自动引入打包生成的js等资源\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"263\":1,\"321\":1,\"329\":1,\"330\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"自动补全文件扩展名\",{\"1\":{\"337\":1,\"343\":1}}],[\"自动清空上次打包资源\",{\"0\":{\"333\":1}}],[\"自动将上次打包目录资源清空\",{\"1\":{\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"290\":1,\"321\":1,\"334\":1}}],[\"自动化\",{\"0\":{\"319\":1},\"1\":{\"134\":1}}],[\"自定义主题\",{\"1\":{\"347\":2}}],[\"自定义ssr\",{\"0\":{\"151\":1}}],[\"自定义error\",{\"1\":{\"56\":1}}],[\"自定义结构\",{\"0\":{\"55\":1}}],[\"自定义控制类\",{\"1\":{\"51\":1}}],[\"自定义修饰符\",{\"0\":{\"57\":1},\"1\":{\"51\":1}}],[\"性能优化\",{\"1\":{\"157\":1}}],[\"性能测试\",{\"1\":{\"134\":1}}],[\"性能要求以及开发者的偏好\",{\"1\":{\"102\":1}}],[\"多进程处理\",{\"1\":{\"442\":1}}],[\"多进程打包\",{\"1\":{\"373\":1,\"467\":1}}],[\"多入口\",{\"0\":{\"393\":1,\"405\":1},\"1\":{\"393\":1,\"394\":1,\"396\":1,\"405\":1,\"406\":1,\"408\":1}}],[\"多个流程之间有存在依赖关系\",{\"1\":{\"204\":1}}],[\"多端测试\",{\"1\":{\"134\":1}}],[\"多路复用等\",{\"1\":{\"1\":1}}],[\"填写表单\",{\"1\":{\"134\":1}}],[\"整个文件体积就比较小\",{\"1\":{\"418\":1}}],[\"整个项目的文件缓存都将失效\",{\"1\":{\"417\":1}}],[\"整个过程称为浏览器的\",{\"1\":{\"1\":1}}],[\"整体测试\",{\"1\":{\"134\":1}}],[\"端到端测试\",{\"1\":{\"134\":1}}],[\"允许您使用最新的\",{\"1\":{\"274\":1}}],[\"允许在最后注释\",{\"1\":{\"269\":1}}],[\"允许在单个连接上发送多个请求和响应\",{\"1\":{\"2\":1}}],[\"允许你跟踪测试运行的变化\",{\"1\":{\"131\":1}}],[\"历史记录\",{\"1\":{\"131\":1}}],[\"易于集成\",{\"1\":{\"131\":1}}],[\"报错\",{\"1\":{\"422\":1}}],[\"报告和可视化\",{\"1\":{\"136\":1}}],[\"报告的外观和内容是可定制的\",{\"1\":{\"131\":1}}],[\"报告\",{\"1\":{\"131\":3}}],[\"报文结构\",{\"1\":{\"2\":1}}],[\"测试框架\",{\"1\":{\"134\":1}}],[\"测试工具包括\",{\"1\":{\"134\":1}}],[\"测试工具允许开发人员评估应用程序的性能\",{\"1\":{\"134\":1}}],[\"测试脚本通过编程语言或测试工具自动执行\",{\"1\":{\"134\":1}}],[\"测试脚本会模拟用户在浏览器中的交互\",{\"1\":{\"134\":1}}],[\"测试通常是自动化的\",{\"1\":{\"134\":1}}],[\"测试通常涵盖了\",{\"1\":{\"134\":1}}],[\"测试可以在多种浏览器\",{\"1\":{\"134\":1}}],[\"测试尝试模拟用户的实际行为\",{\"1\":{\"134\":1}}],[\"测试覆盖了整个应用程序\",{\"1\":{\"134\":1}}],[\"测试覆盖了整个应用程序或系统\",{\"1\":{\"134\":1}}],[\"测试覆盖率等\",{\"1\":{\"131\":1}}],[\"测试应用程序的交互\",{\"1\":{\"134\":1}}],[\"测试模拟用户的实际使用场景\",{\"1\":{\"134\":1}}],[\"测试运行中\",{\"1\":{\"131\":1}}],[\"测试运行的结果\",{\"1\":{\"131\":1}}],[\"测试报告的工具\",{\"1\":{\"131\":1}}],[\"测试\",{\"0\":{\"127\":1},\"1\":{\"134\":2}}],[\"测试和并发执行\",{\"1\":{\"119\":1}}],[\"保存状态\",{\"1\":{\"125\":1}}],[\"访问打包后页面\",{\"1\":{\"426\":1}}],[\"访问外部函数的变量\",{\"1\":{\"125\":1}}],[\"访问全球的区块链数据\",{\"1\":{\"91\":1}}],[\"后置\",{\"1\":{\"187\":1}}],[\"后\",{\"1\":{\"125\":1,\"131\":1}}],[\"后续导航可能会稍慢\",{\"1\":{\"101\":1}}],[\"后续导航可以更快\",{\"1\":{\"100\":1}}],[\"变化的是\",{\"1\":{\"418\":1}}],[\"变量\",{\"1\":{\"125\":1}}],[\"变长数据类型二选一\",{\"1\":{\"58\":1}}],[\"被设计为与现有的\",{\"1\":{\"157\":1}}],[\"被调用时\",{\"1\":{\"125\":1}}],[\"被称为\",{\"1\":{\"102\":1}}],[\"闭包问题\",{\"1\":{\"141\":1}}],[\"闭包是一种常见且强大的编程模式\",{\"1\":{\"125\":1}}],[\"闭包在很多情况下都是非常有用的\",{\"1\":{\"125\":1}}],[\"闭包在很多编程语言中都是一种强大的概念\",{\"1\":{\"125\":1}}],[\"闭包被用作函数的返回值\",{\"1\":{\"125\":1}}],[\"闭包具有以下特点\",{\"1\":{\"125\":1}}],[\"闭包\",{\"0\":{\"125\":1},\"1\":{\"125\":1}}],[\"目录我们能看到输出了两个\",{\"1\":{\"393\":1,\"405\":1}}],[\"目录资源情况\",{\"1\":{\"335\":1}}],[\"目录的话\",{\"1\":{\"284\":1}}],[\"目录就会输出一个\",{\"1\":{\"265\":1}}],[\"目录下的打包后文件就会报错\",{\"1\":{\"271\":1}}],[\"目录下文件情况就好了\",{\"1\":{\"252\":1}}],[\"目录下\",{\"1\":{\"252\":1,\"284\":1,\"322\":1}}],[\"目录中\",{\"1\":{\"223\":2,\"227\":2,\"229\":2,\"233\":2,\"238\":2,\"263\":2,\"270\":2,\"275\":2,\"277\":2,\"290\":2,\"321\":2,\"329\":2,\"330\":2,\"334\":1,\"362\":2,\"366\":2,\"370\":2,\"374\":2,\"383\":2,\"387\":2,\"397\":2,\"398\":1,\"409\":2,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":2,\"440\":2,\"456\":2,\"460\":2,\"464\":2,\"468\":2}}],[\"目前市面上最流量的是\",{\"1\":{\"244\":1}}],[\"目前你了解的前端构建工具都有哪些\",{\"0\":{\"179\":1}}],[\"目前对尾调用的优化支持较低\",{\"1\":{\"124\":1}}],[\"目标合约地址\",{\"1\":{\"73\":2}}],[\"避免了栈的不断增长\",{\"1\":{\"124\":1}}],[\"避免使用可变状态和可变数据\",{\"1\":{\"119\":1}}],[\"计算阶乘\",{\"1\":{\"124\":1}}],[\"计算一个10以内的随机数\",{\"1\":{\"90\":1}}],[\"具体规则\",{\"1\":{\"269\":1}}],[\"具体检查规则\",{\"1\":{\"269\":1}}],[\"具体配置\",{\"0\":{\"269\":1,\"274\":1}}],[\"具体过期规则由服务器管理\",{\"1\":{\"4\":1}}],[\"具有直观的\",{\"1\":{\"134\":1}}],[\"具有尾调用的特性\",{\"1\":{\"124\":1}}],[\"尾递归调用\",{\"1\":{\"124\":1}}],[\"尾递归的阶乘函数\",{\"1\":{\"124\":1}}],[\"尾递归是一种通常推荐的写法\",{\"1\":{\"124\":1}}],[\"尾递归是一种特殊的递归形式\",{\"1\":{\"124\":1}}],[\"尾递归是指在递归函数中\",{\"1\":{\"124\":1}}],[\"尾递归\",{\"0\":{\"124\":1}}],[\"尾调用\",{\"1\":{\"123\":1}}],[\"尾调用是指一个函数的最后一个操作是调用另一个函数\",{\"1\":{\"123\":1}}],[\"尾调用优化后\",{\"1\":{\"123\":1}}],[\"尾调用优化通过复用当前函数的栈帧\",{\"1\":{\"123\":1}}],[\"尾调用优化\",{\"0\":{\"123\":1},\"1\":{\"123\":1}}],[\"然而\",{\"1\":{\"123\":1,\"157\":1}}],[\"然后使用\",{\"1\":{\"293\":1}}],[\"然后再从右到左执行\",{\"1\":{\"195\":1}}],[\"然后传给\",{\"1\":{\"194\":1}}],[\"然后将\",{\"1\":{\"125\":1}}],[\"然后将它们组合起来形成一个渲染列表\",{\"1\":{\"1\":1}}],[\"然后通过调用\",{\"1\":{\"121\":1}}],[\"然后在后续导航时切换为\",{\"1\":{\"102\":1}}],[\"然后浏览器下载并执行\",{\"1\":{\"100\":1}}],[\"累积结果\",{\"1\":{\"122\":1}}],[\"累加求和\",{\"1\":{\"51\":2}}],[\"现在\",{\"1\":{\"279\":1}}],[\"现在是\",{\"1\":{\"122\":3}}],[\"现有以下较为有名的规则\",{\"1\":{\"269\":1}}],[\"现代css统称css\",{\"1\":{\"106\":1}}],[\"某些情况下\",{\"1\":{\"121\":1}}],[\"示例来说明反柯里化\",{\"1\":{\"121\":1}}],[\"反柯里化也能够提高代码的可读性和易用性\",{\"1\":{\"121\":1}}],[\"反柯里化的目的通常是为了在函数式编程中更方便地使用那些本来是多参数的函数\",{\"1\":{\"121\":1}}],[\"反柯里化的实现\",{\"1\":{\"121\":1}}],[\"反柯里化\",{\"1\":{\"121\":1}}],[\"固定一部分参数\",{\"1\":{\"120\":1}}],[\"参数复用\",{\"1\":{\"120\":1}}],[\"考虑一个普通的二元函数\",{\"1\":{\"120\":1}}],[\"直接使用\",{\"1\":{\"374\":1,\"468\":1}}],[\"直接使用本地缓存而不是向服务器重新请求\",{\"1\":{\"5\":1}}],[\"直接打包输出\",{\"1\":{\"325\":1}}],[\"直接删除\",{\"1\":{\"217\":1}}],[\"直接进入上一个\",{\"1\":{\"195\":1}}],[\"直接保存依赖的源文件\",{\"1\":{\"160\":1}}],[\"直到所有参数都被收集完毕\",{\"1\":{\"120\":1}}],[\"柯里化是一种自然而然的编程风格\",{\"1\":{\"120\":1}}],[\"柯里化是实现函数组合的一种方式\",{\"1\":{\"120\":1}}],[\"柯里化使得函数更加灵活\",{\"1\":{\"120\":1}}],[\"柯里化的例子\",{\"1\":{\"121\":1}}],[\"柯里化的优势包括\",{\"1\":{\"120\":1}}],[\"柯里化的名字来源于数学家\",{\"1\":{\"120\":1}}],[\"柯里化\",{\"1\":{\"120\":1}}],[\"简单理解\",{\"1\":{\"274\":1}}],[\"简述一下编写plugin的思路\",{\"0\":{\"166\":1}}],[\"简述一下编写loader的思路\",{\"0\":{\"165\":1}}],[\"简称tco\",{\"1\":{\"123\":1}}],[\"简称fp\",{\"1\":{\"119\":1}}],[\"简洁性和复用性\",{\"1\":{\"122\":1}}],[\"简洁和可维护的代码\",{\"1\":{\"119\":1}}],[\"惰性求值\",{\"1\":{\"119\":1}}],[\"表达式是一种匿名函数\",{\"1\":{\"119\":1}}],[\"表达式\",{\"1\":{\"119\":1}}],[\"表示t是一个函数类型\",{\"1\":{\"469\":1}}],[\"表示响应可以被任何缓存存储\",{\"1\":{\"7\":1}}],[\"表示服务器对请求的处理结果\",{\"1\":{\"2\":1}}],[\"表示请求成功\",{\"1\":{\"1\":1}}],[\"递归调用\",{\"1\":{\"124\":1}}],[\"递归调用是函数的最后一步操作\",{\"1\":{\"124\":1}}],[\"递归是一种自身调用的技术\",{\"1\":{\"119\":1}}],[\"递归\",{\"1\":{\"119\":1}}],[\"也是用来启动开发服务器来部署代码查看效果的\",{\"1\":{\"426\":1}}],[\"也是可以的\",{\"1\":{\"193\":1}}],[\"也发生了变化\",{\"1\":{\"418\":1}}],[\"也会变身变化呢\",{\"1\":{\"418\":1}}],[\"也会代码分割\",{\"1\":{\"395\":1,\"407\":1}}],[\"也不能处理样式资源\",{\"1\":{\"258\":1}}],[\"也不读取状态变量的值\",{\"1\":{\"51\":1}}],[\"也就是异步串行钩子\",{\"1\":{\"214\":1}}],[\"也就是异步并行钩子\",{\"1\":{\"214\":1}}],[\"也就是同步钩子\",{\"1\":{\"214\":1}}],[\"也就是注册事件\",{\"1\":{\"204\":1}}],[\"也就是css\",{\"1\":{\"201\":1}}],[\"也就是外面我们style\",{\"1\":{\"201\":1}}],[\"也在许多编程语言中得到广泛应用\",{\"1\":{\"122\":1}}],[\"也可以加载下一个页面需要使用的资源\",{\"1\":{\"413\":1}}],[\"也可以用包含\",{\"1\":{\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"也可以使用一些库来简化这个过程\",{\"1\":{\"120\":1}}],[\"也可以作为返回值\",{\"1\":{\"119\":1}}],[\"就能注册成功了\",{\"1\":{\"426\":1}}],[\"就能加入到这条生产线中\",{\"1\":{\"204\":1}}],[\"就没法访问了\",{\"1\":{\"424\":1}}],[\"就应该只加载首页的\",{\"1\":{\"390\":1,\"402\":1}}],[\"就要重新写了\",{\"1\":{\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"468\":1}}],[\"就只有这个模块代码需要重新打包编译\",{\"1\":{\"356\":1,\"450\":1}}],[\"就不会继续遍历了\",{\"1\":{\"442\":1}}],[\"就不会有警告了\",{\"1\":{\"269\":1}}],[\"就不能被修改\",{\"1\":{\"119\":1}}],[\"就需要开启\",{\"1\":{\"269\":1}}],[\"就可以在浏览器段运行了\",{\"1\":{\"245\":1}}],[\"就是用社区上提供的一段代码\",{\"1\":{\"421\":1}}],[\"就是在处理字体图标资源基础上增加其他文件类型\",{\"1\":{\"277\":1}}],[\"就是一组\",{\"1\":{\"274\":1}}],[\"就是主要学习如何处理其他资源\",{\"1\":{\"254\":1}}],[\"就是找到相应的钩子\",{\"1\":{\"204\":1}}],[\"就是通过柯里化的方式部分应用了\",{\"1\":{\"120\":1}}],[\"就像一条生产线\",{\"1\":{\"204\":1}}],[\"就会执行render\",{\"1\":{\"38\":1}}],[\"相当于url\",{\"1\":{\"290\":1}}],[\"相当于file\",{\"1\":{\"290\":1}}],[\"相当于\",{\"1\":{\"209\":1}}],[\"相同优先级的\",{\"1\":{\"187\":1}}],[\"相同的输入始终产生相同的输出\",{\"1\":{\"119\":1}}],[\"相对于\",{\"1\":{\"413\":1}}],[\"相对路径和绝对路径都行\",{\"1\":{\"258\":1}}],[\"相对路径的路径分隔符必须是\",{\"1\":{\"201\":1}}],[\"相对路径必须以\",{\"1\":{\"201\":1}}],[\"相对安全\",{\"1\":{\"3\":1}}],[\"相对不安全\",{\"1\":{\"3\":1}}],[\"新建文件\",{\"1\":{\"268\":1,\"273\":2,\"393\":1,\"405\":1}}],[\"新建wdyr\",{\"1\":{\"117\":1}}],[\"新的html文件有两个特点\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"263\":1,\"321\":1,\"329\":1,\"330\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"新的特性和优化被引入以适应不断变化的网络环境\",{\"1\":{\"2\":1}}],[\"主要观察打包输出的结果\",{\"1\":{\"393\":1,\"405\":1}}],[\"主要做了两件事\",{\"1\":{\"391\":1,\"403\":1}}],[\"主要是针对js\",{\"1\":{\"366\":1}}],[\"主要由两种模式\",{\"1\":{\"256\":1}}],[\"主要用于将\",{\"1\":{\"272\":1}}],[\"主要用于改善\",{\"1\":{\"157\":1}}],[\"主要用于开发环境\",{\"1\":{\"116\":1}}],[\"主要功能包括\",{\"1\":{\"116\":1}}],[\"请仅在特别耗时的操作中使用\",{\"1\":{\"373\":1,\"467\":1}}],[\"请删除\",{\"1\":{\"341\":2,\"347\":2}}],[\"请查阅\",{\"1\":{\"196\":1}}],[\"请你描述下目前的monorepo的方案有哪些\",{\"0\":{\"184\":1}}],[\"请注意\",{\"1\":{\"116\":1}}],[\"请求速度更快\",{\"1\":{\"442\":1}}],[\"请求路径是\",{\"1\":{\"426\":1}}],[\"请求都会携带\",{\"1\":{\"4\":1}}],[\"请求一起发送到服务器\",{\"1\":{\"3\":1}}],[\"请求报文\",{\"1\":{\"2\":1}}],[\"请求成功\",{\"1\":{\"2\":1}}],[\"请求服务器删除指定的资源\",{\"1\":{\"2\":1}}],[\"请求和响应都由多行文本组成\",{\"1\":{\"2\":1}}],[\"请求后\",{\"1\":{\"1\":1}}],[\"请求\",{\"1\":{\"1\":1,\"2\":1}}],[\"标准\",{\"1\":{\"422\":1}}],[\"标签的形式在页面上生效\",{\"1\":{\"296\":1}}],[\"标签加载性能才好\",{\"1\":{\"221\":1}}],[\"标签来生成样式\",{\"1\":{\"221\":1}}],[\"标签\",{\"1\":{\"201\":1,\"296\":1}}],[\"标记重新渲染原因\",{\"1\":{\"116\":1}}],[\"标志\",{\"1\":{\"4\":1}}],[\"尤其在进行代码更改\",{\"1\":{\"136\":1}}],[\"尤其在使用现代\",{\"1\":{\"28\":1}}],[\"尤其是在应用程序进行频繁更改时\",{\"1\":{\"134\":1}}],[\"尤其是在与某些\",{\"1\":{\"121\":1}}],[\"尤其是在组件层次较深或者组件包含大量数据的情况下\",{\"1\":{\"116\":1}}],[\"配置了几个入口\",{\"1\":{\"393\":1,\"405\":1}}],[\"配置运行指令\",{\"0\":{\"331\":1}}],[\"配置指令\",{\"1\":{\"215\":1}}],[\"配置\",{\"0\":{\"223\":1,\"227\":1,\"233\":1,\"238\":1,\"263\":1,\"277\":1,\"280\":1,\"290\":1,\"297\":1,\"303\":1,\"309\":1,\"315\":1,\"321\":1,\"334\":1},\"1\":{\"200\":1,\"228\":1,\"270\":1,\"275\":1,\"325\":1,\"358\":1,\"383\":1,\"387\":1,\"393\":1,\"398\":2,\"405\":1,\"410\":2,\"414\":1,\"436\":1,\"440\":1,\"452\":1}}],[\"配置方式\",{\"1\":{\"187\":1}}],[\"配置文件为例\",{\"1\":{\"269\":1,\"274\":1}}],[\"配置文件由很多种写法\",{\"1\":{\"268\":1,\"273\":1}}],[\"配置文件\",{\"0\":{\"257\":1,\"268\":1,\"273\":1},\"1\":{\"136\":1,\"258\":1,\"267\":1,\"270\":1,\"275\":1,\"325\":1}}],[\"配置文件中添加所有模板文件的路径\",{\"1\":{\"106\":1}}],[\"配置灵活\",{\"1\":{\"116\":1}}],[\"配置webpack\",{\"1\":{\"109\":1}}],[\"修改配置\",{\"1\":{\"394\":1,\"406\":1}}],[\"修改配置文件\",{\"0\":{\"258\":1},\"1\":{\"394\":1,\"406\":1,\"422\":1,\"426\":1}}],[\"修改文件\",{\"1\":{\"394\":1,\"395\":1,\"398\":1,\"406\":1,\"407\":1,\"410\":1}}],[\"修改运行指令\",{\"1\":{\"340\":1}}],[\"修改\",{\"0\":{\"239\":1,\"264\":1,\"329\":1,\"330\":1},\"1\":{\"239\":1,\"270\":1,\"275\":1,\"422\":1,\"426\":1}}],[\"修改输出资源的名称和路径\",{\"0\":{\"237\":1}}],[\"修改webpack编译css\",{\"0\":{\"109\":1}}],[\"修饰符\",{\"0\":{\"52\":1}}],[\"取8位长度\",{\"1\":{\"418\":2,\"426\":1}}],[\"取消异步操作或清理资源\",{\"1\":{\"141\":1}}],[\"取决于项目的需求\",{\"1\":{\"102\":1}}],[\"取钱\",{\"1\":{\"61\":1}}],[\"选择想要的图标添加到购物车\",{\"1\":{\"288\":1}}],[\"选择\",{\"1\":{\"102\":1}}],[\"选择器折叠等\",{\"1\":{\"25\":1}}],[\"混合渲染\",{\"0\":{\"102\":1}}],[\"导致代码重复\",{\"1\":{\"394\":1,\"406\":1}}],[\"导致\",{\"1\":{\"266\":1}}],[\"导致回调函数中的状态访问的是旧的状态而不是最新的状态\",{\"1\":{\"141\":1}}],[\"导航时的性能\",{\"1\":{\"101\":1}}],[\"导入postcss\",{\"1\":{\"25\":1}}],[\"友好\",{\"1\":{\"101\":1}}],[\"造成一定挑战\",{\"1\":{\"100\":1}}],[\"初始化package\",{\"1\":{\"250\":1}}],[\"初始化配置文件\",{\"1\":{\"136\":1}}],[\"初始化tailwind\",{\"0\":{\"106\":1}}],[\"初始化依赖收集的过程\",{\"1\":{\"33\":1}}],[\"初次渲染的\",{\"1\":{\"100\":1}}],[\"难度\",{\"1\":{\"100\":1}}],[\"首先要声明一个equal类型\",{\"1\":{\"472\":1}}],[\"首次加载慢\",{\"1\":{\"100\":1}}],[\"首部字段\",{\"1\":{\"2\":1}}],[\"缺点\",{\"1\":{\"100\":1,\"101\":1,\"285\":1,\"353\":2,\"447\":2}}],[\"灵活性\",{\"1\":{\"100\":1}}],[\"由于return导致熔断\",{\"1\":{\"201\":1}}],[\"由于同步计算过于耗时\",{\"1\":{\"193\":1}}],[\"由于状态更新不同步而导致的问题\",{\"1\":{\"141\":1}}],[\"由于\",{\"1\":{\"134\":1}}],[\"由于函数是一等公民\",{\"1\":{\"125\":1}}],[\"由于闭包可以访问外部函数的变量\",{\"1\":{\"125\":1}}],[\"由于它是一门多范式的语言\",{\"1\":{\"120\":1}}],[\"由于它的数据存储在服务器上\",{\"1\":{\"4\":1}}],[\"由于搜索引擎可以直接获取到完整的\",{\"1\":{\"101\":1}}],[\"由服务器生成并发送给浏览器\",{\"1\":{\"100\":1}}],[\"流行的js项目\",{\"0\":{\"97\":1}}],[\"其实就是要提升\",{\"1\":{\"372\":1,\"466\":1}}],[\"其次开发中\",{\"1\":{\"266\":1}}],[\"其他内容用默认配置即可\",{\"1\":{\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1}}],[\"其他没有写的配置会使用上面的默认值\",{\"1\":{\"394\":2,\"396\":1,\"406\":2,\"408\":1}}],[\"其他文件引用它就好\",{\"1\":{\"394\":1,\"406\":1}}],[\"其他文件不应该加载\",{\"1\":{\"390\":1,\"402\":1}}],[\"其他模块不变\",{\"1\":{\"356\":1,\"450\":1}}],[\"其他主题色\",{\"1\":{\"341\":1}}],[\"其他都用默认值\",{\"1\":{\"340\":1}}],[\"其他配置\",{\"0\":{\"339\":1,\"345\":1}}],[\"其他不做处理\",{\"1\":{\"290\":1}}],[\"其他特性\",{\"1\":{\"269\":1}}],[\"其他规则详见\",{\"1\":{\"269\":1}}],[\"其他资源需要借助\",{\"1\":{\"256\":1}}],[\"其他省略\",{\"1\":{\"228\":2,\"329\":1,\"331\":1,\"351\":1,\"353\":2,\"358\":1,\"445\":1,\"447\":2,\"452\":1}}],[\"其他网站\",{\"0\":{\"95\":1}}],[\"其中最重要的是\",{\"1\":{\"425\":1}}],[\"其中使用\",{\"1\":{\"420\":1}}],[\"其中有一个就是提取的公共模块\",{\"1\":{\"394\":1,\"406\":1}}],[\"其中定义了测试场景\",{\"1\":{\"136\":1}}],[\"其中包含有关测试运行的各种信息\",{\"1\":{\"131\":1}}],[\"其中包含满足给定函数条件的元素\",{\"1\":{\"122\":1}}],[\"其中包含了请求资源的信息\",{\"1\":{\"1\":1}}],[\"其输出仅由输入决定\",{\"1\":{\"119\":1}}],[\"查询合约地址是否开源\",{\"0\":{\"94\":1}}],[\"查看browserslist\",{\"1\":{\"228\":1}}],[\"查看\",{\"1\":{\"91\":1}}],[\"查看本地编译器的版本\",{\"1\":{\"46\":1}}],[\"查看css排行\",{\"1\":{\"41\":1}}],[\"红色按钮花账户中的钱和gas\",{\"1\":{\"93\":1}}],[\"红包的数量\",{\"1\":{\"90\":1}}],[\"红包的金额\",{\"1\":{\"90\":1}}],[\"红包合约\",{\"0\":{\"90\":1}}],[\"黄色按钮花gas\",{\"1\":{\"93\":1}}],[\"浅蓝色按钮不要钱\",{\"1\":{\"93\":1}}],[\"转移的这部分钱会扣除allowance\",{\"1\":{\"92\":1}}],[\"转账amount个代币到账户to\",{\"1\":{\"92\":1}}],[\"转账地址转一些基础的代币\",{\"1\":{\"62\":1}}],[\"余额\",{\"1\":{\"92\":1}}],[\"释放条件\",{\"1\":{\"92\":2}}],[\"去掉引入的\",{\"1\":{\"264\":1}}],[\"去改变生产线的运作\",{\"1\":{\"204\":1}}],[\"去中心化节点\",{\"1\":{\"91\":1}}],[\"去触发修改指令\",{\"1\":{\"34\":1}}],[\"字体等资源命名方式\",{\"1\":{\"398\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1}}],[\"字体图标\",{\"1\":{\"324\":1}}],[\"字段不能叫做\",{\"1\":{\"250\":1}}],[\"字符串\",{\"1\":{\"194\":1}}],[\"字符串转16进制\",{\"1\":{\"90\":1}}],[\"字节数组\",{\"1\":{\"48\":1}}],[\"字节类型\",{\"1\":{\"48\":1}}],[\"已经默认开启了这个功能\",{\"1\":{\"379\":1,\"432\":1}}],[\"已经具备\",{\"1\":{\"358\":1,\"452\":1}}],[\"已经将两个\",{\"1\":{\"279\":1}}],[\"已经执行完毕\",{\"1\":{\"125\":1}}],[\"已经抢过这个红包了\",{\"1\":{\"90\":1}}],[\"已经被内建函数blockhash所代替\",{\"1\":{\"50\":1}}],[\"临时变量\",{\"1\":{\"90\":1}}],[\"定义环境变量\",{\"1\":{\"340\":1,\"346\":1,\"347\":1}}],[\"定义变量\",{\"1\":{\"270\":1,\"398\":1,\"410\":1,\"422\":1}}],[\"定义\",{\"1\":{\"270\":1,\"275\":1}}],[\"定义输出文件名和目录\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"468\":1}}],[\"定义一个发红包的主体\",{\"1\":{\"90\":1}}],[\"定时器等\",{\"1\":{\"141\":1}}],[\"定长数组不允许push\",{\"1\":{\"53\":1}}],[\"定长数组\",{\"1\":{\"53\":1}}],[\"故会进入该分支\",{\"1\":{\"86\":1}}],[\"类似于minsize\",{\"1\":{\"394\":1,\"396\":1,\"406\":1,\"408\":1}}],[\"类似前端的变量\",{\"1\":{\"47\":1}}],[\"类似前端的document\",{\"1\":{\"46\":1}}],[\"类\",{\"1\":{\"187\":1}}],[\"类型定义\",{\"1\":{\"207\":1}}],[\"类型检查\",{\"0\":{\"130\":1}}],[\"类型\",{\"1\":{\"86\":1}}],[\"声明onlyeven合约变量\",{\"1\":{\"86\":1}}],[\"失败event\",{\"1\":{\"86\":1}}],[\"输出出去叫bundle\",{\"1\":{\"393\":1,\"394\":1,\"396\":1,\"405\":1,\"406\":1,\"408\":1}}],[\"输出资源情况\",{\"0\":{\"284\":1}}],[\"输出的文件叫做\",{\"1\":{\"245\":1}}],[\"输出的文件就是编译好的文件\",{\"1\":{\"245\":1}}],[\"输出文件名\",{\"1\":{\"258\":1}}],[\"输出文件\",{\"1\":{\"200\":1}}],[\"输出转换后的\",{\"1\":{\"189\":1}}],[\"输出\",{\"1\":{\"120\":2,\"121\":1,\"122\":1,\"123\":1,\"124\":1,\"125\":1,\"155\":2,\"219\":1,\"256\":1,\"257\":1,\"258\":1}}],[\"输出selector\",{\"1\":{\"85\":1}}],[\"输入\",{\"1\":{\"134\":1}}],[\"输入奇数时revert\",{\"1\":{\"86\":1}}],[\"输入参数\",{\"1\":{\"85\":1}}],[\"销毁合约时被调用\",{\"1\":{\"82\":1}}],[\"析构函数\",{\"1\":{\"82\":1}}],[\"删除多余的\",{\"1\":{\"219\":1}}],[\"删除\",{\"1\":{\"217\":1}}],[\"删除目录所有文件\",{\"1\":{\"217\":1}}],[\"删除合约\",{\"0\":{\"82\":1}}],[\"删除数组元素等操作会导致内存段中的数据频繁发生改变\",{\"1\":{\"32\":1}}],[\"收到eth事件\",{\"1\":{\"79\":1}}],[\"收集依赖\",{\"1\":{\"33\":2,\"35\":1}}],[\"收集的是watcher\",{\"1\":{\"29\":1}}],[\"构造函数\",{\"1\":{\"79\":1}}],[\"构建对应的\",{\"1\":{\"417\":1}}],[\"构建对象\",{\"0\":{\"208\":1}}],[\"构建时它都是一个独一无二\",{\"1\":{\"209\":1}}],[\"构建的时候\",{\"1\":{\"204\":1}}],[\"构建\",{\"1\":{\"1\":1}}],[\"业务太复杂执行时间长\",{\"1\":{\"78\":1}}],[\"否\",{\"1\":{\"78\":2}}],[\"否则警告\",{\"1\":{\"269\":3}}],[\"否则下一步会报错\",{\"1\":{\"250\":1}}],[\"否则我们引入的css资源会缺少\",{\"1\":{\"201\":1}}],[\"否则你应该使用\",{\"1\":{\"21\":1}}],[\"否则可能会展示错误页面或者执行相应的错误处理\",{\"1\":{\"1\":1}}],[\"接受的参数\",{\"0\":{\"190\":1}}],[\"接受一个函数\",{\"1\":{\"122\":1}}],[\"接受一个函数和一个列表\",{\"1\":{\"122\":2}}],[\"接受两个参数\",{\"1\":{\"121\":1}}],[\"接收eth时被触发\",{\"1\":{\"79\":2}}],[\"接收eth\",{\"0\":{\"78\":1},\"1\":{\"78\":1}}],[\"接着\",{\"1\":{\"1\":1}}],[\"黑洞合约\",{\"1\":{\"77\":1}}],[\"必须返回promise\",{\"1\":{\"214\":1}}],[\"必须调用\",{\"1\":{\"214\":1}}],[\"必须要有这么多\",{\"1\":{\"77\":1}}],[\"必须是绝对路径\",{\"1\":{\"258\":1}}],[\"必须是相对路径\",{\"1\":{\"201\":1}}],[\"必须是本人\",{\"1\":{\"61\":1}}],[\"必须是sha256\",{\"1\":{\"56\":1}}],[\"烧掉\",{\"1\":{\"77\":1}}],[\"燃烧代币\",{\"0\":{\"77\":1}}],[\"别人会把钱全部转走\",{\"1\":{\"76\":1}}],[\"别的合约的msg\",{\"1\":{\"74\":2}}],[\"小结\",{\"0\":{\"254\":1,\"260\":1}}],[\"小于40kb的图片会被base64处理\",{\"1\":{\"334\":1}}],[\"小于10kb的图片会被base64处理\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"285\":1,\"290\":1,\"321\":1,\"329\":1,\"330\":1,\"337\":1,\"338\":1,\"340\":1,\"343\":1,\"344\":1,\"346\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"小于当前账户余额\",{\"1\":{\"61\":1}}],[\"小心某些平台会把余额填满\",{\"1\":{\"76\":1}}],[\"将打包生成的文件进行分割\",{\"1\":{\"391\":1,\"403\":1}}],[\"将vue相关的库单独打包\",{\"1\":{\"347\":1}}],[\"将react相关的库单独打包\",{\"1\":{\"341\":1}}],[\"将public下面的资源复制到dist目录去\",{\"1\":{\"337\":1,\"338\":1,\"341\":1}}],[\"将文件转化成\",{\"1\":{\"290\":2}}],[\"将文件原封不动输出出去\",{\"1\":{\"200\":1}}],[\"将小于某个大小的图片转化成\",{\"1\":{\"285\":1}}],[\"将来好做缓存\",{\"1\":{\"442\":1}}],[\"将来开发时我们对静态资源会使用缓存来优化\",{\"1\":{\"416\":1}}],[\"将来就会作为\",{\"1\":{\"398\":1,\"410\":1}}],[\"将来请求速度比较慢\",{\"1\":{\"385\":1,\"438\":1}}],[\"将来运行\",{\"1\":{\"267\":1}}],[\"将来都通过\",{\"1\":{\"260\":1}}],[\"将我们整个项目所有文件编译组合成一个或多个文件输出出去\",{\"1\":{\"245\":1}}],[\"将图片文件命名\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"290\":1,\"321\":1,\"329\":1,\"330\":1,\"334\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"将图片文件输出到\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"290\":1,\"321\":1,\"329\":1,\"330\":1,\"334\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"将产生的错误返回出去\",{\"1\":{\"217\":1}}],[\"将style标签内容设置为处理后的css代码\",{\"1\":{\"201\":1}}],[\"将路径转化为相对路径\",{\"1\":{\"201\":1}}],[\"将\",{\"1\":{\"199\":1,\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"290\":1,\"321\":1,\"329\":1,\"330\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"409\":1,\"418\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"将console\",{\"1\":{\"197\":1}}],[\"将资源中的\",{\"1\":{\"187\":1}}],[\"将不同类型的文件转换为\",{\"1\":{\"186\":1}}],[\"将异步加载内容installedchunks到\",{\"1\":{\"159\":1}}],[\"将其转化为迭代形式\",{\"1\":{\"124\":1}}],[\"将其存储在一个\",{\"1\":{\"3\":1}}],[\"将列表中的元素逐个应用到函数上\",{\"1\":{\"122\":1}}],[\"将改变合约b里的状态变量\",{\"1\":{\"75\":1}}],[\"将改变合约c里的状态变量\",{\"1\":{\"75\":1}}],[\"语句中有\",{\"1\":{\"269\":1}}],[\"语句中显式指定\",{\"1\":{\"187\":1}}],[\"语句\",{\"1\":{\"269\":1}}],[\"语法并没有编译转换\",{\"1\":{\"422\":1}}],[\"语法已经转换了\",{\"1\":{\"275\":1}}],[\"语法的预设\",{\"1\":{\"274\":2}}],[\"语法的工具\",{\"1\":{\"267\":1}}],[\"语法编写的代码转换为向后兼容的\",{\"1\":{\"272\":1}}],[\"语法版本\",{\"1\":{\"269\":1}}],[\"语法\",{\"1\":{\"141\":1,\"199\":1,\"246\":2,\"269\":1,\"272\":1,\"325\":2}}],[\"语法高亮\",{\"1\":{\"25\":1}}],[\"语境为b\",{\"1\":{\"75\":1}}],[\"语境为\",{\"1\":{\"75\":1}}],[\"钱\",{\"1\":{\"73\":1}}],[\"^17\",{\"1\":{\"345\":1}}],[\"^18\",{\"1\":{\"339\":2,\"340\":2}}],[\"^12\",{\"1\":{\"339\":1,\"340\":1,\"345\":1}}],[\"^10\",{\"1\":{\"339\":4,\"340\":3,\"345\":3}}],[\"^2\",{\"1\":{\"339\":1,\"340\":1,\"345\":2}}],[\"^8\",{\"1\":{\"339\":3,\"340\":3,\"345\":4}}],[\"^no\",{\"1\":{\"269\":1}}],[\"^4\",{\"1\":{\"215\":1,\"339\":3,\"340\":2,\"345\":4}}],[\"^5\",{\"1\":{\"215\":1,\"339\":2,\"340\":2,\"345\":3}}],[\"^3\",{\"1\":{\"215\":1,\"339\":4,\"340\":4,\"345\":4}}],[\"^6\",{\"1\":{\"215\":1,\"339\":4,\"340\":3,\"345\":2}}],[\"^7\",{\"1\":{\"215\":2,\"339\":6,\"340\":5,\"345\":6}}],[\"^\",{\"1\":{\"159\":1}}],[\"^0\",{\"1\":{\"73\":1,\"74\":1,\"75\":1,\"79\":1,\"80\":1,\"82\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"339\":2,\"340\":2}}],[\"^on\",{\"1\":{\"25\":1}}],[\"引用的\",{\"1\":{\"418\":2}}],[\"引用址\",{\"1\":{\"58\":2}}],[\"引入打包后的js文件\",{\"1\":{\"298\":1}}],[\"引入\",{\"1\":{\"298\":1}}],[\"引入资源\",{\"1\":{\"270\":1,\"275\":1,\"289\":1,\"304\":1,\"310\":1,\"316\":1,\"358\":1,\"398\":1,\"410\":1,\"422\":4,\"426\":1,\"452\":1}}],[\"引入css\",{\"1\":{\"201\":1}}],[\"引入tailwindcss样式\",{\"0\":{\"108\":1}}],[\"引入node\",{\"1\":{\"67\":1}}],[\"`runtime~$\",{\"1\":{\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"418\":1}}],[\"`export\",{\"1\":{\"200\":1}}],[\"`$\",{\"1\":{\"198\":1,\"217\":1}}],[\"`\",{\"1\":{\"109\":1,\"198\":3,\"200\":1,\"201\":2,\"216\":2,\"217\":1,\"218\":1,\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":3,\"418\":1}}],[\"`value`\",{\"1\":{\"92\":1}}],[\"`string`\",{\"1\":{\"66\":3}}],[\"`uint256`\",{\"1\":{\"66\":3}}],[\"大核心概念\",{\"0\":{\"256\":1}}],[\"大小\",{\"1\":{\"218\":1}}],[\"大神的函数库\",{\"1\":{\"66\":1}}],[\"大数据表格虚拟滚动\",{\"1\":{\"26\":1}}],[\"好用的寒暑假的集合\",{\"1\":{\"66\":1}}],[\"省gas\",{\"1\":{\"66\":1}}],[\"面向对象的语言\",{\"1\":{\"63\":1}}],[\"索引\",{\"1\":{\"62\":1}}],[\"带有indexed属性的这个状态是存储在一个\",{\"1\":{\"62\":1}}],[\"日志的抽象\",{\"1\":{\"62\":1}}],[\"日期等\",{\"1\":{\"1\":1}}],[\"事件\",{\"0\":{\"62\":1},\"1\":{\"206\":1}}],[\"事物回滚\",{\"1\":{\"56\":1}}],[\"事物控制与异常\",{\"0\":{\"56\":1}}],[\"部署合约的人就是发红包的人\",{\"1\":{\"90\":1}}],[\"部署合约的人\",{\"1\":{\"61\":1}}],[\"需要修改eslint配置文件\",{\"1\":{\"398\":1,\"410\":1}}],[\"需要打包到一起的模块\",{\"1\":{\"394\":2,\"396\":1,\"406\":2,\"408\":1}}],[\"需要打包输出前添加注释\",{\"1\":{\"216\":1}}],[\"需要哪个文件就加载哪个文件\",{\"1\":{\"391\":1,\"403\":1}}],[\"需要复制到\",{\"1\":{\"387\":2,\"440\":2}}],[\"需要注意\",{\"1\":{\"373\":1,\"467\":1}}],[\"需要注意的是\",{\"1\":{\"121\":1,\"124\":1,\"250\":1,\"442\":2}}],[\"需要通过\",{\"1\":{\"340\":1,\"346\":1,\"347\":1}}],[\"需要下载两个\",{\"1\":{\"295\":1,\"307\":1}}],[\"需要将上次打包生成的文件清空\",{\"1\":{\"240\":1,\"285\":1}}],[\"需要将绝对路径转化成相对路径\",{\"1\":{\"201\":1}}],[\"需要处理文件\",{\"1\":{\"216\":1}}],[\"需要使用专业的工具来检测\",{\"1\":{\"266\":1}}],[\"需要使用\",{\"1\":{\"216\":1,\"217\":1}}],[\"需要用\",{\"0\":{\"132\":1}}],[\"需要等待下载和执行\",{\"1\":{\"100\":1}}],[\"需要memory修饰一下\",{\"1\":{\"58\":1}}],[\"需要重新部署合约\",{\"1\":{\"42\":1}}],[\"得硬编码\",{\"1\":{\"56\":1}}],[\"跟用户打交道的\",{\"1\":{\"56\":1}}],[\"跟踪用户行为等\",{\"1\":{\"3\":1,\"4\":1}}],[\"退还gas\",{\"1\":{\"56\":1}}],[\"错误判断\",{\"1\":{\"56\":1}}],[\"错误等\",{\"1\":{\"1\":1}}],[\"又能省gas\",{\"1\":{\"56\":1}}],[\"消耗gas最低\",{\"1\":{\"56\":1}}],[\"消息的发送方\",{\"1\":{\"50\":1}}],[\"y>\",{\"1\":{\"472\":1}}],[\"y9\",{\"1\":{\"472\":1}}],[\"y8\",{\"1\":{\"472\":1}}],[\"y7\",{\"1\":{\"472\":1}}],[\"y6\",{\"1\":{\"472\":1}}],[\"y5\",{\"1\":{\"472\":1}}],[\"y4\",{\"1\":{\"472\":1}}],[\"y3\",{\"1\":{\"472\":1}}],[\"y2\",{\"1\":{\"472\":1}}],[\"y10\",{\"1\":{\"472\":1}}],[\"y1\",{\"1\":{\"472\":1}}],[\"yyy\",{\"1\":{\"418\":2}}],[\"yargs\",{\"1\":{\"109\":1}}],[\"your\",{\"1\":{\"159\":2}}],[\"you\",{\"0\":{\"114\":1,\"116\":1},\"1\":{\"90\":1,\"115\":1,\"116\":6,\"117\":1,\"159\":1,\"351\":2,\"445\":2}}],[\"y\",{\"1\":{\"87\":2,\"120\":6,\"121\":4,\"122\":2,\"249\":2,\"250\":1,\"472\":1}}],[\"yd\",{\"1\":{\"70\":2,\"145\":1,\"158\":2,\"159\":3}}],[\"yideng2\",{\"1\":{\"53\":1}}],[\"yideng\",{\"0\":{\"69\":1},\"1\":{\"53\":1,\"59\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":2,\"90\":3,\"92\":1,\"158\":2,\"159\":2}}],[\"yjs\",{\"1\":{\"23\":1}}],[\"xmlnsorder\",{\"1\":{\"338\":1,\"340\":1,\"341\":1,\"344\":1,\"346\":1,\"347\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"440\":1}}],[\"xiongjian\",{\"1\":{\"215\":1}}],[\"x\",{\"1\":{\"66\":1,\"72\":5,\"73\":3,\"83\":5,\"87\":2,\"120\":6,\"121\":4,\"122\":9,\"239\":1,\"249\":2,\"264\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1,\"395\":1,\"407\":1,\"472\":1}}],[\"xxx\",{\"1\":{\"73\":1,\"352\":2,\"365\":2,\"393\":1,\"394\":1,\"396\":1,\"405\":1,\"406\":1,\"408\":1,\"418\":2,\"446\":2,\"459\":2}}],[\"xx\",{\"1\":{\"52\":9,\"73\":2}}],[\"xstate官网\",{\"1\":{\"143\":1}}],[\"xstate\",{\"0\":{\"143\":1},\"1\":{\"23\":1}}],[\"顺序搜索\",{\"0\":{\"155\":1}}],[\"顺序\",{\"1\":{\"51\":1}}],[\"资源等\",{\"1\":{\"324\":1}}],[\"资源\",{\"0\":{\"261\":1,\"266\":1,\"294\":1,\"298\":1,\"300\":1,\"304\":1,\"306\":1,\"310\":1,\"312\":1,\"316\":1},\"1\":{\"254\":1,\"266\":1,\"298\":1}}],[\"资源目录\",{\"0\":{\"248\":1}}],[\"资源路径\",{\"1\":{\"239\":1}}],[\"资源大小\",{\"1\":{\"216\":1}}],[\"资源内容\",{\"1\":{\"216\":1}}],[\"资源文件会被转化为\",{\"1\":{\"194\":1}}],[\"资源未找到\",{\"1\":{\"2\":1}}],[\"资金控制类的\",{\"1\":{\"51\":1}}],[\"设计以太币的转移\",{\"1\":{\"51\":1}}],[\"设计用于在客户端存储小型的用户数据\",{\"1\":{\"4\":1}}],[\"纯函数是没有副作用的函数\",{\"1\":{\"119\":1}}],[\"纯函数\",{\"1\":{\"51\":1,\"119\":1}}],[\"既不修改\",{\"1\":{\"51\":1}}],[\"外部函数\",{\"1\":{\"51\":1}}],[\"外部无法访问\",{\"1\":{\"51\":1}}],[\"外部状态变量\",{\"1\":{\"49\":1}}],[\"子类不能继承\",{\"1\":{\"51\":1}}],[\"子类可以继承\",{\"1\":{\"51\":3}}],[\"只引入打包\",{\"1\":{\"422\":1}}],[\"只打包生成一个\",{\"1\":{\"394\":1,\"406\":1}}],[\"只处理\",{\"1\":{\"365\":1,\"459\":1}}],[\"只包含行映射\",{\"1\":{\"353\":1,\"447\":1}}],[\"只能用于开发环境\",{\"1\":{\"358\":1,\"452\":1}}],[\"只能用tap注册\",{\"1\":{\"214\":1}}],[\"只能编译\",{\"1\":{\"266\":1}}],[\"只能处理\",{\"1\":{\"254\":1}}],[\"只有文件内容变化了\",{\"1\":{\"417\":1}}],[\"只有一个入口\",{\"1\":{\"396\":1,\"408\":1}}],[\"只有完成当前处理后才能交给下一个流程去处理\",{\"1\":{\"204\":1}}],[\"只有该合约可以调用\",{\"1\":{\"51\":1}}],[\"只是用我们指定的inline\",{\"1\":{\"201\":1}}],[\"只使用inline\",{\"1\":{\"201\":1}}],[\"只要勾住\",{\"1\":{\"160\":1}}],[\"只需要利用`abi\",{\"1\":{\"85\":1}}],[\"只监听一开始的key\",{\"1\":{\"32\":1}}],[\"所谓高级配置其实就是进行\",{\"1\":{\"399\":1}}],[\"所以本题的解为\",{\"1\":{\"472\":1}}],[\"所以此时我们\",{\"1\":{\"420\":1}}],[\"所以变化重新请求的代价也小\",{\"1\":{\"418\":1}}],[\"所以一旦修改了任何一个文件\",{\"1\":{\"417\":1}}],[\"所以要改打包的最小文件体积\",{\"1\":{\"394\":1,\"406\":1}}],[\"所以因为启动进程开销原因\",{\"1\":{\"374\":1,\"468\":1}}],[\"所以只处理babel和eslint\",{\"1\":{\"366\":1}}],[\"所以实际开发我们会使用其他\",{\"1\":{\"358\":1,\"452\":1}}],[\"所以所有绝对路径需要回退一层目录才能找到对应的文件\",{\"1\":{\"329\":1}}],[\"所以没有额外输出出来\",{\"1\":{\"284\":1}}],[\"所以可以使用\",{\"1\":{\"271\":1}}],[\"所以想要修改规则直接改就是了\",{\"1\":{\"269\":1}}],[\"所以有更好的办法\",{\"1\":{\"269\":1}}],[\"所以以上配置文件只需要存在一个即可\",{\"1\":{\"268\":1,\"273\":1}}],[\"所以采用\",{\"1\":{\"257\":1}}],[\"所以我们想要将\",{\"1\":{\"420\":1}}],[\"所以我们从文件名入手\",{\"1\":{\"416\":1}}],[\"所以我们要提升它们的运行速度\",{\"1\":{\"372\":1,\"466\":1}}],[\"所以我们要加载配置来编译这些资源\",{\"1\":{\"324\":1}}],[\"所以我们在对\",{\"1\":{\"364\":1,\"458\":1}}],[\"所以我们将node\",{\"1\":{\"341\":1,\"347\":1}}],[\"所以我们需要使用\",{\"1\":{\"422\":1}}],[\"所以我们需要将打包生成的文件进行代码分割\",{\"1\":{\"390\":1,\"402\":1}}],[\"所以我们需要做到修改某个模块代码\",{\"1\":{\"356\":1,\"450\":1}}],[\"所以我们需要更加准确的错误提示\",{\"1\":{\"351\":1,\"445\":1}}],[\"所以我们需要借助\",{\"1\":{\"293\":1}}],[\"所以我们需要打包工具帮我们做完这些事\",{\"1\":{\"243\":1}}],[\"所以我们希望做一些兼容性处理\",{\"1\":{\"266\":1}}],[\"所以我们学习\",{\"1\":{\"254\":1}}],[\"所以我们主要以\",{\"1\":{\"244\":1}}],[\"所以我们可以这样设置\",{\"1\":{\"228\":1}}],[\"所以需要将其内联到\",{\"1\":{\"219\":1}}],[\"所以其他loader不执行了\",{\"1\":{\"201\":1}}],[\"所以\",{\"1\":{\"201\":1}}],[\"所有文件\",{\"1\":{\"417\":1}}],[\"所有文件名的\",{\"1\":{\"417\":1}}],[\"所有文件都下载到\",{\"1\":{\"364\":1,\"458\":1}}],[\"所有\",{\"1\":{\"351\":1,\"445\":1}}],[\"所有路由组件都要使用的\",{\"1\":{\"341\":1,\"347\":1}}],[\"所有代码都会在内存中编译打包\",{\"1\":{\"322\":1}}],[\"所有指令必须在这个目录运行\",{\"1\":{\"248\":1}}],[\"所有的pair合约地址\",{\"1\":{\"80\":1}}],[\"所有维护的watcher队列\",{\"1\":{\"40\":1}}],[\"所发送的消息中的wei\",{\"1\":{\"50\":1}}],[\"返回的是true\",{\"1\":{\"472\":1}}],[\"返回的是boolean\",{\"1\":{\"472\":1}}],[\"返回给parser\",{\"1\":{\"160\":1}}],[\"返回\",{\"1\":{\"125\":1,\"196\":1}}],[\"返回一个绝对路径\",{\"1\":{\"196\":1}}],[\"返回一个相对路径\",{\"1\":{\"196\":1}}],[\"返回一个新的列表\",{\"1\":{\"122\":1}}],[\"返回一个函数\",{\"1\":{\"120\":1}}],[\"返回owner账户授权给spender账户额度\",{\"1\":{\"92\":1}}],[\"返回账户owner授权给spender账户可以从自己的账户转移的代币数量\",{\"1\":{\"92\":1}}],[\"返回账户accout所持有的代币数量\",{\"1\":{\"92\":1}}],[\"返回true\",{\"1\":{\"92\":1}}],[\"返回代币的总供给\",{\"1\":{\"92\":1}}],[\"返回合约eth余额\",{\"1\":{\"79\":1}}],[\"返回指定块的哈希值\",{\"1\":{\"50\":1}}],[\"返回数据\",{\"1\":{\"33\":1}}],[\"函数时\",{\"1\":{\"192\":1}}],[\"函数作为返回值\",{\"1\":{\"122\":1}}],[\"函数作为参数\",{\"1\":{\"122\":1}}],[\"函数的最后一个操作必须是对另一个函数的调用\",{\"1\":{\"123\":1}}],[\"函数的参数和返回值的结构可能不够一致\",{\"1\":{\"121\":1}}],[\"函数的反柯里化\",{\"0\":{\"121\":1}}],[\"函数的重载\",{\"0\":{\"65\":1}}],[\"函数可以用于柯里化\",{\"1\":{\"120\":1}}],[\"函数可以作为参数传递给其他函数\",{\"1\":{\"119\":1}}],[\"函数组合\",{\"1\":{\"120\":1}}],[\"函数柯里化\",{\"0\":{\"120\":1}}],[\"函数式编程的一个优点是它有助于编写清晰\",{\"1\":{\"119\":1}}],[\"函数式编程语言通常支持惰性求值\",{\"1\":{\"119\":1}}],[\"函数式编程语言通常提供一些不可变的数据结构\",{\"1\":{\"119\":1}}],[\"函数式编程鼓励使用递归而不是循环\",{\"1\":{\"119\":1}}],[\"函数式编程强调数据的不可变性\",{\"1\":{\"119\":1}}],[\"函数式编程强调使用纯函数\",{\"1\":{\"119\":1}}],[\"函数式编程思维\",{\"0\":{\"119\":1}}],[\"函数式编程\",{\"0\":{\"118\":1},\"1\":{\"119\":1}}],[\"函数执行\",{\"1\":{\"117\":1}}],[\"函数选择器\",{\"0\":{\"85\":1},\"1\":{\"83\":1}}],[\"函数方法的签名\",{\"1\":{\"62\":1}}],[\"函数结尾或者函数头部\",{\"1\":{\"56\":1}}],[\"函数和函数修饰符\",{\"0\":{\"51\":1}}],[\"函数\",{\"1\":{\"50\":1,\"75\":2,\"120\":1,\"122\":1,\"420\":1}}],[\"函数中的view关键字只对当前的状态读取\",{\"1\":{\"49\":1}}],[\"即可不用编译就能看到错误\",{\"1\":{\"271\":1}}],[\"即是多个\",{\"1\":{\"210\":1}}],[\"即使只被引用了一次\",{\"1\":{\"395\":1,\"407\":1}}],[\"即使外部函数已经执行完毕\",{\"1\":{\"125\":1}}],[\"即使\",{\"1\":{\"125\":1}}],[\"即使在外部函数执行结束后\",{\"1\":{\"125\":1}}],[\"即只在需要时才计算表达式的值\",{\"1\":{\"119\":1}}],[\"即一旦数据被创建\",{\"1\":{\"119\":1}}],[\"即时编译\",{\"0\":{\"105\":1}}],[\"即在首次加载时使用\",{\"1\":{\"102\":1}}],[\"即函数标识符\",{\"1\":{\"50\":1}}],[\"即视图函数\",{\"1\":{\"49\":1}}],[\"即哪些请求头的改变会影响缓存的有效性\",{\"1\":{\"7\":1}}],[\"私有状态变量\",{\"1\":{\"49\":1}}],[\"私仓\",{\"0\":{\"26\":1,\"144\":1}}],[\"公共状态变量\",{\"1\":{\"49\":1}}],[\"内存编译打包没有输出\",{\"1\":{\"325\":1}}],[\"内存状态变量\",{\"1\":{\"49\":1}}],[\"内联方式\",{\"1\":{\"187\":1}}],[\"内联\",{\"1\":{\"187\":1}}],[\"内部通过\",{\"1\":{\"425\":1}}],[\"内部会给vue文件注入hmr功能代码\",{\"1\":{\"343\":1,\"344\":1,\"346\":1,\"347\":1}}],[\"内部的钩子\",{\"0\":{\"205\":1}}],[\"内部变量判断\",{\"1\":{\"56\":1}}],[\"内部不能访问\",{\"1\":{\"51\":1}}],[\"内部正常访问\",{\"1\":{\"51\":1}}],[\"内部函数可以访问外部函数的变量\",{\"1\":{\"125\":1}}],[\"内部函数可以遍历\",{\"1\":{\"88\":1}}],[\"内部函数仍然能够访问并保持对外部函数作用域的引用\",{\"1\":{\"125\":1}}],[\"内部函数\",{\"1\":{\"51\":1}}],[\"内部状态变量\",{\"1\":{\"49\":1}}],[\"内容无关紧要\",{\"1\":{\"393\":1,\"405\":1}}],[\"内容和源文件一致\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"263\":1,\"321\":1,\"329\":1,\"330\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"内容\",{\"1\":{\"1\":1,\"101\":1}}],[\"常量状态变量\",{\"1\":{\"49\":1}}],[\"常量\",{\"1\":{\"48\":1}}],[\"常见的状态码包括\",{\"1\":{\"2\":1}}],[\"86176\",{\"1\":{\"201\":2,\"215\":1,\"387\":2,\"440\":2}}],[\"8\",{\"0\":{\"55\":1,\"79\":1},\"1\":{\"48\":1,\"49\":1,\"66\":1,\"73\":1,\"74\":1,\"75\":1,\"79\":1,\"80\":1,\"82\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"90\":1,\"155\":1,\"159\":1,\"194\":1,\"223\":4,\"227\":4,\"228\":1,\"229\":4,\"233\":4,\"235\":1,\"238\":3,\"239\":1,\"263\":4,\"264\":1,\"270\":4,\"275\":4,\"277\":4,\"289\":1,\"290\":4,\"298\":1,\"304\":1,\"310\":1,\"316\":1,\"321\":4,\"329\":4,\"330\":4,\"334\":4,\"362\":4,\"366\":4,\"370\":4,\"374\":4,\"383\":4,\"387\":4,\"395\":1,\"397\":4,\"398\":4,\"407\":1,\"409\":4,\"410\":4,\"414\":4,\"418\":18,\"426\":9,\"436\":4,\"440\":4,\"456\":4,\"460\":4,\"464\":4,\"468\":4}}],[\"8编码的字符串\",{\"1\":{\"48\":1}}],[\"代表t不是一个函数类型\",{\"1\":{\"469\":1}}],[\"代表禁用所有配置的loader\",{\"1\":{\"201\":1}}],[\"代表要处理的index\",{\"1\":{\"201\":1}}],[\"代表后面还有一个css\",{\"1\":{\"201\":1}}],[\"代表了用户地址\",{\"1\":{\"48\":1}}],[\"代理call\",{\"1\":{\"74\":1}}],[\"代码仍然存在兼容性问题\",{\"1\":{\"420\":1}}],[\"代码分割实现方式有不同的方式\",{\"1\":{\"392\":1,\"404\":1}}],[\"代码分割\",{\"1\":{\"391\":1,\"403\":1}}],[\"代码分割配置\",{\"1\":{\"340\":1,\"341\":1,\"394\":1,\"396\":1,\"397\":1,\"398\":1,\"406\":1,\"408\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1}}],[\"代码编译优化输出\",{\"1\":{\"325\":1}}],[\"代码能编译自动化运行\",{\"1\":{\"325\":1}}],[\"代码质量检查\",{\"1\":{\"324\":1}}],[\"代码就会停止运行\",{\"1\":{\"215\":1}}],[\"代码添加文本注释\",{\"1\":{\"198\":1}}],[\"代码中的console\",{\"1\":{\"197\":1}}],[\"代码进行了兼容性处理\",{\"1\":{\"420\":1}}],[\"代码进行深度优化\",{\"1\":{\"157\":1}}],[\"代码进行预处理和优化\",{\"1\":{\"157\":1}}],[\"代码进行预处理\",{\"1\":{\"157\":1}}],[\"代码将更快地加载和执行\",{\"1\":{\"157\":1}}],[\"代码的性能和加载速度\",{\"1\":{\"157\":1}}],[\"代码执行后\",{\"1\":{\"100\":1}}],[\"代码\",{\"1\":{\"100\":2,\"157\":2,\"189\":1,\"199\":1,\"246\":1,\"325\":1}}],[\"代码层面的错误\",{\"1\":{\"56\":1}}],[\"代码压缩和自动补全等\",{\"1\":{\"25\":1}}],[\"有损\",{\"1\":{\"440\":1}}],[\"有损压缩\",{\"1\":{\"387\":1,\"440\":1}}],[\"有两种模式\",{\"1\":{\"387\":1,\"440\":1}}],[\"有效果即可\",{\"1\":{\"322\":1}}],[\"有一张图片以\",{\"1\":{\"285\":1}}],[\"有一个\",{\"1\":{\"120\":1}}],[\"有人可能会问\",{\"1\":{\"266\":1}}],[\"有哪些打包工具\",{\"0\":{\"244\":1}}],[\"有返回值\",{\"1\":{\"195\":1}}],[\"有时候\",{\"1\":{\"121\":1}}],[\"有时\",{\"1\":{\"102\":1}}],[\"有符号整数\",{\"1\":{\"48\":1}}],[\"有限制跨域访问\",{\"1\":{\"3\":1,\"4\":1}}],[\"600ms\",{\"1\":{\"373\":1,\"467\":1}}],[\"629ea097\",{\"1\":{\"215\":1}}],[\"6\",{\"0\":{\"53\":1,\"75\":1,\"77\":1,\"285\":1,\"398\":1,\"410\":1},\"1\":{\"48\":1,\"49\":1,\"83\":1,\"155\":1,\"269\":1,\"270\":1,\"323\":1,\"339\":2,\"340\":2,\"345\":3,\"398\":1,\"410\":1,\"422\":1}}],[\"5500\",{\"1\":{\"426\":3}}],[\"5\",{\"0\":{\"51\":1,\"52\":1,\"74\":1,\"76\":1,\"109\":1,\"230\":1,\"252\":1,\"256\":1,\"284\":1,\"299\":1,\"305\":1,\"311\":1,\"317\":1,\"397\":1,\"409\":1},\"1\":{\"48\":1,\"49\":1,\"53\":1,\"83\":1,\"109\":2,\"120\":2,\"121\":1,\"122\":4,\"123\":1,\"124\":1,\"155\":2,\"241\":1,\"325\":1,\"338\":1,\"339\":5,\"340\":5,\"341\":1,\"344\":1,\"345\":3,\"346\":1,\"347\":1,\"387\":1,\"394\":1,\"395\":1,\"397\":1,\"398\":1,\"406\":1,\"407\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":3,\"440\":1}}],[\"50000\",{\"1\":{\"394\":1,\"396\":1,\"406\":1,\"408\":1}}],[\"500\",{\"1\":{\"2\":1}}],[\"40\",{\"1\":{\"334\":1,\"341\":1,\"347\":1}}],[\"4011\",{\"1\":{\"215\":1}}],[\"404\",{\"1\":{\"2\":1,\"426\":1}}],[\"4873\",{\"1\":{\"145\":1}}],[\"48\",{\"1\":{\"66\":1}}],[\"4\",{\"0\":{\"50\":1,\"68\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":2,\"74\":1,\"75\":1,\"108\":1,\"195\":1,\"229\":1,\"251\":1,\"265\":1,\"271\":1,\"283\":1,\"291\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1,\"331\":1,\"396\":1,\"408\":1},\"1\":{\"48\":1,\"49\":1,\"52\":1,\"56\":3,\"58\":1,\"66\":3,\"73\":1,\"75\":1,\"79\":1,\"80\":1,\"82\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"122\":5,\"155\":2,\"187\":1,\"214\":1,\"249\":1,\"270\":1,\"275\":1,\"286\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1,\"339\":2,\"340\":1,\"345\":3,\"358\":2,\"394\":2,\"395\":1,\"398\":2,\"406\":2,\"407\":1,\"410\":2,\"422\":4,\"426\":2,\"442\":1,\"452\":2}}],[\"负责将\",{\"1\":{\"296\":1,\"302\":1,\"308\":1,\"314\":1}}],[\"负责呈现数据以供用户查看和操作\",{\"1\":{\"28\":1}}],[\"负数\",{\"1\":{\"48\":1}}],[\"无损压缩的区别\",{\"1\":{\"440\":1}}],[\"无损压缩\",{\"1\":{\"387\":1,\"440\":1}}],[\"无需其他配置\",{\"1\":{\"379\":1,\"432\":1}}],[\"无头浏览器的端到端测试\",{\"1\":{\"134\":1}}],[\"无符号整数\",{\"1\":{\"48\":1}}],[\"无状态\",{\"1\":{\"2\":1}}],[\"另外\",{\"1\":{\"47\":1}}],[\"提前检查代码规范和格式\",{\"1\":{\"324\":1}}],[\"提前检查代码的一些隐患\",{\"1\":{\"324\":1}}],[\"提前发现问题\",{\"1\":{\"134\":1}}],[\"提升\",{\"1\":{\"442\":1}}],[\"提升打包构建速度\",{\"0\":{\"354\":1,\"448\":1},\"1\":{\"348\":1,\"399\":1,\"442\":1}}],[\"提升开发体验\",{\"0\":{\"349\":1,\"443\":1},\"1\":{\"348\":1,\"399\":1,\"442\":1}}],[\"提升代码性能等\",{\"1\":{\"243\":1}}],[\"提升部分\",{\"0\":{\"64\":1}}],[\"提取runtime文件\",{\"1\":{\"418\":1}}],[\"提取重复代码\",{\"0\":{\"394\":1,\"406\":1}}],[\"提取css成单独文件\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"468\":1}}],[\"提取\",{\"0\":{\"221\":1}}],[\"提高webpack构建速度有哪些方案\",{\"0\":{\"162\":1}}],[\"提高应用程序的性能和用户体验\",{\"1\":{\"157\":1}}],[\"提高加载速度\",{\"1\":{\"157\":1}}],[\"提高页面加载速度\",{\"1\":{\"157\":1}}],[\"提高用户体验\",{\"1\":{\"157\":1}}],[\"提高函数灵活性\",{\"1\":{\"120\":1}}],[\"提交表单等\",{\"1\":{\"134\":1}}],[\"提供了统一的插件接口\",{\"1\":{\"207\":1}}],[\"提供了命令行工具\",{\"1\":{\"136\":1}}],[\"提供了一种简化配置并支持两种渲染方式的方式\",{\"1\":{\"102\":1}}],[\"提供强大的自动化功能\",{\"1\":{\"134\":1}}],[\"提供的\",{\"1\":{\"28\":1}}],[\"提示速度\",{\"1\":{\"341\":1}}],[\"提示\",{\"1\":{\"47\":1,\"49\":1,\"53\":1,\"56\":1,\"57\":1,\"59\":1,\"74\":1,\"75\":1,\"76\":1,\"106\":1,\"113\":1,\"141\":1}}],[\"93a7\",{\"1\":{\"215\":1}}],[\"9229\",{\"1\":{\"215\":1}}],[\"9\",{\"0\":{\"56\":1,\"80\":1},\"1\":{\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"61\":1,\"62\":1,\"65\":1,\"66\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"76\":1,\"77\":1,\"78\":1,\"90\":1,\"92\":1,\"122\":1,\"155\":1,\"215\":1,\"339\":2,\"340\":2,\"345\":2,\"441\":1}}],[\"7003350e\",{\"1\":{\"240\":1}}],[\"7b52\",{\"1\":{\"215\":1}}],[\"72\",{\"1\":{\"215\":1,\"339\":1,\"340\":1,\"345\":1}}],[\"7\",{\"0\":{\"54\":1,\"78\":1},\"1\":{\"46\":1,\"47\":1,\"48\":1,\"49\":2,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"61\":1,\"62\":1,\"65\":1,\"66\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"76\":1,\"77\":1,\"78\":1,\"90\":1,\"92\":1,\"155\":1,\"215\":1,\"332\":1,\"339\":1,\"340\":1,\"345\":2}}],[\"走进智能合约的世界\",{\"0\":{\"43\":1}}],[\"批处理构造函数\",{\"1\":{\"40\":1}}],[\"33\",{\"1\":{\"345\":1}}],[\"333\",{\"1\":{\"214\":2}}],[\"30\",{\"1\":{\"341\":1,\"347\":1,\"394\":2,\"396\":2,\"406\":2,\"408\":2}}],[\"3000\",{\"1\":{\"214\":1,\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"321\":1,\"329\":1,\"330\":1,\"337\":1,\"340\":1,\"341\":1,\"343\":1,\"346\":1,\"347\":1,\"358\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"452\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"304\",{\"1\":{\"6\":2}}],[\"3种方法发送eth\",{\"1\":{\"79\":1}}],[\"3\",{\"0\":{\"49\":1,\"67\":1,\"72\":1,\"107\":1,\"194\":1,\"224\":1,\"228\":1,\"234\":1,\"240\":1,\"250\":1,\"264\":1,\"270\":1,\"275\":1,\"282\":1,\"290\":1,\"297\":1,\"303\":1,\"309\":1,\"315\":1,\"322\":1,\"330\":1,\"395\":1,\"407\":1},\"1\":{\"39\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":3,\"50\":1,\"51\":1,\"52\":3,\"53\":1,\"54\":1,\"55\":1,\"56\":3,\"57\":1,\"58\":2,\"59\":1,\"60\":1,\"61\":1,\"62\":2,\"65\":1,\"66\":2,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"76\":1,\"77\":1,\"78\":1,\"90\":1,\"120\":2,\"121\":1,\"122\":3,\"155\":1,\"201\":1,\"213\":1,\"214\":1,\"249\":1,\"270\":1,\"275\":1,\"281\":1,\"282\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1,\"318\":1,\"339\":4,\"340\":4,\"345\":3,\"358\":2,\"387\":1,\"394\":3,\"395\":1,\"398\":2,\"406\":3,\"407\":1,\"410\":2,\"422\":5,\"426\":2,\"440\":1,\"452\":2}}],[\"判断是否支持hmr功能\",{\"1\":{\"358\":1,\"452\":1}}],[\"判断是否是文件夹\",{\"1\":{\"217\":1}}],[\"判断是不是空\",{\"1\":{\"59\":1}}],[\"判断文本节点\",{\"1\":{\"39\":1}}],[\"判断元素节点\",{\"1\":{\"39\":1}}],[\"存在\",{\"1\":{\"78\":1}}],[\"存在于内存中\",{\"1\":{\"39\":1}}],[\"存钱\",{\"1\":{\"61\":1}}],[\"存储状态变量\",{\"1\":{\"49\":1}}],[\"存储的数据相对较大\",{\"1\":{\"3\":1}}],[\"存储的数据有限\",{\"1\":{\"3\":1}}],[\"存储在服务器上\",{\"1\":{\"4\":2}}],[\"存储在服务器端\",{\"1\":{\"3\":1}}],[\"存储在客户端\",{\"1\":{\"3\":2,\"4\":1}}],[\"存储位置\",{\"1\":{\"3\":1,\"4\":1}}],[\"编译结果进行缓存\",{\"1\":{\"369\":1,\"463\":1}}],[\"编译结果\",{\"1\":{\"368\":1,\"462\":1}}],[\"编译后的\",{\"1\":{\"351\":1,\"445\":1}}],[\"编译代码\",{\"1\":{\"324\":1}}],[\"编译模块阶段进行逻辑添加以及修改\",{\"1\":{\"210\":1}}],[\"编译为\",{\"1\":{\"105\":1}}],[\"编译器\",{\"1\":{\"272\":1}}],[\"编译器可以检测到这种尾调用的情况\",{\"1\":{\"123\":1}}],[\"编译器会自动选择memory\",{\"1\":{\"58\":1}}],[\"编译器的版本\",{\"1\":{\"46\":1}}],[\"编译\",{\"0\":{\"39\":1},\"1\":{\"199\":1,\"368\":1,\"462\":1}}],[\"触发各个hooks事件\",{\"1\":{\"214\":1}}],[\"触发此事件\",{\"1\":{\"92\":2}}],[\"触发fallback\",{\"1\":{\"78\":1}}],[\"触发dom\",{\"1\":{\"38\":1}}],[\"触发dep的遍历\",{\"1\":{\"38\":1}}],[\"触发了setter的变化\",{\"1\":{\"38\":1}}],[\"触发render\",{\"1\":{\"34\":1}}],[\"渲染哪个页面就只加载某个\",{\"1\":{\"390\":1,\"402\":1}}],[\"渲染完毕\",{\"1\":{\"38\":1}}],[\"渲染页面\",{\"1\":{\"1\":1}}],[\"执行失败err就是错误原因\",{\"1\":{\"217\":1}}],[\"执行成功err为undefined\",{\"1\":{\"217\":1}}],[\"执行剩下编译流程\",{\"1\":{\"214\":1}}],[\"执行顺序是从右到左\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"280\":1,\"285\":1,\"290\":1,\"297\":1,\"303\":1,\"309\":1,\"315\":1,\"321\":1,\"329\":1,\"330\":1,\"334\":1,\"337\":1,\"338\":1,\"340\":1,\"343\":1,\"344\":1,\"346\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"执行顺序为\",{\"1\":{\"187\":1}}],[\"执行顺序\",{\"0\":{\"187\":1},\"1\":{\"187\":1}}],[\"执行可视化回归测试\",{\"1\":{\"136\":1}}],[\"执行不了\",{\"1\":{\"56\":1}}],[\"执行\",{\"1\":{\"42\":1,\"133\":1}}],[\"执行watcher的update\",{\"1\":{\"38\":1}}],[\"执行render==\",{\"1\":{\"34\":1}}],[\"一些流行的\",{\"1\":{\"134\":1}}],[\"一些\",{\"1\":{\"134\":1}}],[\"一些函数式编程语言\",{\"1\":{\"123\":1}}],[\"一些函数式编程语言包括haskell\",{\"1\":{\"119\":1}}],[\"一些框架\",{\"1\":{\"102\":1}}],[\"一个用来编译\",{\"1\":{\"274\":2}}],[\"一个用于现代\",{\"1\":{\"134\":1}}],[\"一个用于自动化浏览器操作的开源工具\",{\"1\":{\"134\":1}}],[\"一个智能预设\",{\"1\":{\"274\":1}}],[\"一个\",{\"1\":{\"210\":1}}],[\"一个ui测试库\",{\"0\":{\"136\":1}}],[\"一个由\",{\"1\":{\"134\":1}}],[\"一个满足尾调用优化条件的函数必须满足两个条件\",{\"1\":{\"123\":1}}],[\"一个初始值和一个列表\",{\"1\":{\"122\":1}}],[\"一个多参数的函数被转化为一系列单参数的函数\",{\"1\":{\"121\":1}}],[\"一个基于react的个人博客网站\",{\"0\":{\"98\":1}}],[\"一个render会包装成一个watcher\",{\"1\":{\"38\":1}}],[\"一共mint\",{\"1\":{\"92\":1}}],[\"一堆东西打包到一块\",{\"1\":{\"83\":1}}],[\"一般不对外\",{\"1\":{\"56\":1}}],[\"一旦将来发布新版本\",{\"1\":{\"416\":1}}],[\"一旦将来开发代码文件很多\",{\"1\":{\"351\":1,\"445\":1}}],[\"一旦通过\",{\"1\":{\"395\":1,\"407\":1}}],[\"一旦遇到低版本浏览器会直接报错\",{\"1\":{\"420\":1}}],[\"一旦遇到\",{\"1\":{\"254\":1}}],[\"一旦初始页面加载完成\",{\"1\":{\"100\":1}}],[\"一旦页面被完全加载\",{\"1\":{\"1\":1}}],[\"一旦浏览器获得了目标服务器的\",{\"1\":{\"1\":1}}],[\"解决路径问题\",{\"1\":{\"426\":1}}],[\"解决动态导入import语法报错问题\",{\"1\":{\"398\":1,\"410\":1,\"422\":1}}],[\"解决vue\",{\"1\":{\"343\":1,\"346\":1,\"347\":1}}],[\"解决页面警告\",{\"1\":{\"343\":1}}],[\"解决页面报错问题\",{\"1\":{\"339\":1}}],[\"解决react\",{\"1\":{\"337\":1}}],[\"解决js的hmr功能运行时全局变量的问题\",{\"1\":{\"337\":1}}],[\"解决图片重复打包问题\",{\"1\":{\"200\":1}}],[\"解决的是二进制的内容\",{\"1\":{\"200\":1}}],[\"解决了项目的什么问题\",{\"0\":{\"182\":1}}],[\"解决\",{\"1\":{\"141\":1,\"418\":1}}],[\"解析样式资源\",{\"1\":{\"293\":1}}],[\"解析选项\",{\"1\":{\"269\":2}}],[\"解析webpack异步加载文件构建代码\",{\"0\":{\"159\":1}}],[\"解析webpack同步加载文件构建代码\",{\"0\":{\"158\":1}}],[\"解析属性\",{\"1\":{\"39\":1}}],[\"解析完成\",{\"1\":{\"1\":1}}],[\"解释\",{\"0\":{\"38\":1}}],[\"没有列映射\",{\"1\":{\"353\":1,\"447\":1}}],[\"没有enforce就是normal\",{\"1\":{\"187\":1}}],[\"没有css4\",{\"1\":{\"106\":1}}],[\"没有等\",{\"1\":{\"40\":1}}],[\"没有触发\",{\"1\":{\"37\":1}}],[\"没有发生变化\",{\"1\":{\"6\":1}}],[\"监听数据\",{\"1\":{\"37\":1}}],[\"监听的是key\",{\"1\":{\"32\":1}}],[\"电话本\",{\"1\":{\"35\":1}}],[\"获取处理样式的loaders\",{\"1\":{\"229\":1,\"233\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"468\":1}}],[\"获取文件完整路径\",{\"1\":{\"217\":1}}],[\"获取输出文件目录\",{\"1\":{\"217\":1}}],[\"获取操作文件的对象\",{\"1\":{\"217\":1}}],[\"获取打包输出目录\",{\"1\":{\"217\":1}}],[\"获取loader的options\",{\"1\":{\"198\":1}}],[\"获取到对应的pair合约地址\",{\"1\":{\"80\":1}}],[\"获取\",{\"1\":{\"34\":1,\"196\":1}}],[\"获取对应域名的\",{\"1\":{\"1\":1}}],[\"对代码进行提前加载\",{\"1\":{\"442\":1}}],[\"对代码进行分割成多个\",{\"1\":{\"442\":1}}],[\"对项目中图片进行压缩\",{\"1\":{\"442\":1}}],[\"对所有模块都进行分割\",{\"1\":{\"394\":1,\"396\":1,\"397\":1,\"398\":1,\"406\":1,\"408\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1}}],[\"对一些公共方法使用了非常小的辅助代码\",{\"1\":{\"381\":1,\"434\":1}}],[\"对图片资源进行优化\",{\"0\":{\"285\":1}}],[\"对\",{\"1\":{\"266\":1,\"369\":1,\"420\":1,\"442\":2,\"463\":1}}],[\"对象数据情况\",{\"1\":{\"215\":1}}],[\"对象\",{\"1\":{\"213\":1,\"214\":1,\"217\":1,\"420\":1}}],[\"对象会对构建依赖图中所有模块\",{\"1\":{\"210\":1}}],[\"对象代表一次资源的构建\",{\"1\":{\"210\":1}}],[\"对象上访问到\",{\"1\":{\"209\":1}}],[\"对象中保存着完整的\",{\"1\":{\"209\":1}}],[\"对象是分散的\",{\"1\":{\"32\":1}}],[\"对搜索引擎更友好\",{\"1\":{\"101\":1}}],[\"对搜索引擎来说\",{\"1\":{\"100\":1}}],[\"对函数签名进行打包\",{\"1\":{\"83\":1}}],[\"对其进行的修改不会影响到本尊\",{\"1\":{\"58\":1}}],[\"对于高流量的应用\",{\"1\":{\"101\":1}}],[\"对于临时变量\",{\"1\":{\"58\":1}}],[\"对于变长的数据必须写memory\",{\"1\":{\"53\":1}}],[\"对状态变量只读\",{\"1\":{\"51\":1}}],[\"对新增的key无法监听\",{\"1\":{\"32\":1}}],[\"频繁的触发getter和setter\",{\"1\":{\"32\":1}}],[\"添加promise代码\",{\"1\":{\"422\":4,\"426\":1}}],[\"添加或删除模块\",{\"1\":{\"357\":1,\"451\":1}}],[\"添加字体图标资源\",{\"0\":{\"289\":1}}],[\"添加图片资源\",{\"0\":{\"281\":1}}],[\"添加之前的query参数\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"290\":1,\"321\":1,\"329\":1,\"330\":1,\"334\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"添加资源\",{\"1\":{\"218\":1}}],[\"添加到head中生效\",{\"1\":{\"201\":1}}],[\"添加\",{\"0\":{\"298\":1,\"304\":1,\"310\":1,\"316\":1},\"1\":{\"32\":1}}],[\"懒代理\",{\"1\":{\"29\":1}}],[\"worker\",{\"1\":{\"426\":6}}],[\"workers\",{\"1\":{\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"425\":1,\"426\":1,\"436\":1,\"440\":1,\"468\":1}}],[\"workboxplugin\",{\"1\":{\"426\":2}}],[\"workbox\",{\"1\":{\"426\":2}}],[\"world\",{\"1\":{\"33\":2,\"37\":2,\"39\":1,\"65\":1,\"117\":1,\"122\":2}}],[\"woff2\",{\"1\":{\"289\":1}}],[\"woff\",{\"1\":{\"289\":1}}],[\"ws\",{\"1\":{\"215\":1}}],[\"wdyr\",{\"1\":{\"117\":1}}],[\"where\",{\"1\":{\"159\":1}}],[\"when\",{\"1\":{\"159\":1}}],[\"whydidyourender\",{\"1\":{\"117\":3}}],[\"why\",{\"0\":{\"114\":1},\"1\":{\"115\":1,\"116\":6,\"117\":1}}],[\"while循环的写法\",{\"1\":{\"51\":1}}],[\"while\",{\"1\":{\"39\":1,\"51\":1,\"66\":3,\"153\":3,\"159\":1}}],[\"w\",{\"1\":{\"105\":1}}],[\"wtfacademy\",{\"1\":{\"44\":1}}],[\"wtf\",{\"1\":{\"44\":3}}],[\"www\",{\"0\":{\"138\":1},\"1\":{\"44\":1,\"91\":1}}],[\"width=device\",{\"1\":{\"239\":1,\"264\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1,\"395\":1,\"407\":1}}],[\"width\",{\"1\":{\"105\":1,\"239\":1,\"264\":1,\"282\":3,\"289\":1,\"298\":2,\"304\":2,\"310\":3,\"316\":2,\"351\":1,\"395\":1,\"407\":1,\"445\":1}}],[\"window\",{\"1\":{\"40\":1,\"159\":2,\"426\":1}}],[\"without\",{\"1\":{\"469\":1,\"470\":1,\"471\":1}}],[\"withdraw\",{\"1\":{\"61\":2}}],[\"with\",{\"1\":{\"36\":1,\"66\":1,\"351\":1,\"387\":2,\"440\":2,\"445\":1}}],[\"warn\",{\"1\":{\"269\":6}}],[\"waiting\",{\"1\":{\"40\":3}}],[\"watcher\",{\"0\":{\"34\":1},\"1\":{\"29\":1,\"33\":2,\"34\":7,\"35\":2,\"37\":1,\"39\":2,\"40\":2}}],[\"welldone\",{\"0\":{\"114\":1},\"1\":{\"115\":1,\"117\":1}}],[\"we\",{\"1\":{\"88\":1}}],[\"wed\",{\"1\":{\"6\":2}}],[\"webapck\",{\"1\":{\"209\":1}}],[\"webpack终极篇\",{\"0\":{\"475\":1}}],[\"webpackchunkname\",{\"1\":{\"398\":2,\"410\":2}}],[\"webpackchunkyd\",{\"1\":{\"159\":4}}],[\"webpack<\",{\"1\":{\"395\":1,\"407\":1}}],[\"webpackbootstrap\",{\"1\":{\"351\":1,\"445\":1}}],[\"webpackbaseconfig\",{\"1\":{\"109\":2}}],[\"webpack高级部分\",{\"0\":{\"348\":1}}],[\"webpack配置文件目录\",{\"1\":{\"328\":1}}],[\"webpack4\",{\"1\":{\"279\":1,\"417\":1}}],[\"webpack才会对其打包\",{\"1\":{\"270\":1,\"275\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1,\"358\":1,\"398\":1,\"410\":1,\"422\":4,\"426\":1,\"452\":1}}],[\"webpack才能处理\",{\"1\":{\"201\":1}}],[\"webpack创建\",{\"1\":{\"213\":1,\"214\":1}}],[\"webpack读取配置时\",{\"1\":{\"213\":1,\"214\":1}}],[\"webpack文件监听原理是什么\",{\"0\":{\"178\":1}}],[\"webpack源码核心模块有哪几个\",{\"0\":{\"163\":1}}],[\"webpack运行到对应钩子的流程就会把所有插件统一执行\",{\"1\":{\"160\":1}}],[\"webpack留给外界的钩子\",{\"1\":{\"160\":1}}],[\"webpack之间所有的通信靠的就是tapable\",{\"1\":{\"160\":1}}],[\"webpack实例生成\",{\"1\":{\"160\":1}}],[\"webpack原理流程图\",{\"1\":{\"160\":1}}],[\"webpack原理\",{\"0\":{\"160\":1}}],[\"webpackjsonpcallback\",{\"1\":{\"159\":3}}],[\"webpack打包后的js如下\",{\"1\":{\"158\":1,\"159\":1}}],[\"webpack核心原理\",{\"0\":{\"156\":1}}],[\"webpack\",{\"0\":{\"113\":1,\"177\":1,\"205\":1,\"251\":1,\"257\":1,\"270\":1,\"275\":1,\"329\":1,\"330\":1,\"476\":1},\"1\":{\"109\":3,\"113\":3,\"158\":31,\"159\":74,\"186\":2,\"187\":1,\"195\":2,\"196\":1,\"203\":2,\"204\":7,\"206\":1,\"207\":4,\"209\":4,\"211\":1,\"215\":4,\"216\":1,\"217\":2,\"218\":2,\"219\":6,\"223\":3,\"227\":3,\"229\":3,\"232\":1,\"233\":4,\"240\":1,\"244\":3,\"245\":2,\"246\":1,\"248\":1,\"250\":3,\"251\":5,\"252\":1,\"254\":2,\"255\":2,\"256\":5,\"257\":2,\"258\":1,\"260\":4,\"262\":1,\"263\":3,\"265\":1,\"266\":2,\"270\":4,\"275\":3,\"278\":1,\"279\":1,\"283\":1,\"284\":1,\"290\":2,\"291\":1,\"292\":1,\"293\":3,\"296\":2,\"299\":1,\"305\":1,\"311\":1,\"317\":1,\"320\":1,\"321\":3,\"322\":1,\"324\":1,\"325\":6,\"328\":3,\"329\":4,\"330\":4,\"331\":4,\"335\":1,\"337\":5,\"338\":7,\"339\":13,\"340\":19,\"341\":7,\"343\":5,\"344\":7,\"345\":12,\"346\":8,\"347\":9,\"351\":24,\"356\":1,\"362\":2,\"366\":2,\"370\":2,\"374\":4,\"379\":1,\"383\":4,\"386\":1,\"387\":10,\"393\":7,\"394\":3,\"395\":1,\"396\":1,\"397\":6,\"398\":6,\"399\":2,\"405\":7,\"406\":3,\"407\":1,\"408\":1,\"409\":6,\"410\":6,\"414\":8,\"418\":12,\"426\":8,\"432\":1,\"436\":4,\"439\":1,\"440\":10,\"442\":2,\"445\":24,\"450\":1,\"456\":2,\"460\":2,\"464\":2,\"468\":4}}],[\"webpack5<\",{\"1\":{\"239\":1,\"264\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1}}],[\"webpack5用\",{\"1\":{\"113\":1}}],[\"webpack5\",{\"1\":{\"25\":4,\"279\":1,\"351\":1,\"445\":1}}],[\"web3\",{\"0\":{\"41\":1}}],[\"web\",{\"1\":{\"4\":1,\"134\":1,\"424\":1,\"425\":2}}],[\"数量\",{\"1\":{\"50\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"468\":1}}],[\"数组的一些方法\",{\"1\":{\"420\":1}}],[\"数组里面\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"280\":1,\"285\":1,\"290\":1,\"297\":1,\"303\":1,\"309\":1,\"315\":1,\"321\":1,\"329\":1,\"330\":1,\"334\":1,\"337\":1,\"338\":1,\"340\":1,\"343\":1,\"344\":1,\"346\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"数组自定义结构的\",{\"1\":{\"58\":1}}],[\"数组\",{\"0\":{\"53\":1}}],[\"数组在内存中是连续的内存段\",{\"1\":{\"32\":1}}],[\"数组操作\",{\"1\":{\"29\":1}}],[\"数据不准确等\",{\"1\":{\"141\":1}}],[\"数据上链\",{\"1\":{\"90\":1}}],[\"数据是必须编码成字节码才能和智能合约交互\",{\"1\":{\"83\":1}}],[\"数据类型\",{\"0\":{\"48\":1}}],[\"数据发生变更\",{\"1\":{\"38\":1}}],[\"数据发生变化触发视图更新\",{\"1\":{\"28\":1}}],[\"数据返回\",{\"1\":{\"38\":1}}],[\"数据挂载到实例上面去\",{\"1\":{\"37\":1}}],[\"数据可能会影响请求性能\",{\"1\":{\"4\":1}}],[\"数据\",{\"1\":{\"4\":2,\"190\":2,\"200\":1}}],[\"数据存储在服务器上\",{\"1\":{\"3\":1}}],[\"数据通常存储在服务器的内存中或数据库中\",{\"1\":{\"3\":1}}],[\"时应用程序能够继续运行功能\",{\"1\":{\"425\":1}}],[\"时就会以写的规则对代码进行检查\",{\"1\":{\"267\":1}}],[\"时候所有的配置文件\",{\"1\":{\"209\":1}}],[\"时创建\",{\"1\":{\"209\":1}}],[\"时间复杂度最好是o\",{\"1\":{\"154\":1,\"155\":1}}],[\"时间戳等\",{\"1\":{\"51\":1}}],[\"时\",{\"1\":{\"28\":1,\"279\":1}}],[\"框架构建单页面应用\",{\"1\":{\"28\":1}}],[\"框架\",{\"1\":{\"28\":1}}],[\"样式经过\",{\"1\":{\"358\":1,\"452\":1}}],[\"样式资源\",{\"1\":{\"292\":1}}],[\"样式资源打包到\",{\"1\":{\"284\":1}}],[\"样式和布局\",{\"1\":{\"28\":1}}],[\"样式表等\",{\"1\":{\"1\":1}}],[\"样式表\",{\"1\":{\"1\":1}}],[\"的技术\",{\"1\":{\"425\":1}}],[\"的缓存失效\",{\"1\":{\"418\":1}}],[\"的兼容性问题\",{\"1\":{\"413\":1}}],[\"的值显示\",{\"1\":{\"398\":1,\"410\":1}}],[\"的值有很多种情况\",{\"1\":{\"353\":1,\"447\":1}}],[\"的核数\",{\"1\":{\"374\":2,\"468\":2}}],[\"的核心功能库\",{\"1\":{\"207\":1}}],[\"的核心思想是通过视图模型将视图和模型分离\",{\"1\":{\"28\":1}}],[\"的打包速度\",{\"1\":{\"372\":1,\"466\":1}}],[\"的区别\",{\"1\":{\"290\":1}}],[\"的处理\",{\"1\":{\"284\":1}}],[\"的配置\",{\"1\":{\"260\":1}}],[\"的配置有一定的认识\",{\"1\":{\"255\":1}}],[\"的功能\",{\"1\":{\"256\":1,\"260\":1}}],[\"的不同种类\",{\"1\":{\"209\":1,\"210\":1}}],[\"的主环境配置\",{\"1\":{\"209\":1}}],[\"的主要功能和目标\",{\"1\":{\"157\":1}}],[\"的事件流机制保证了插件的有序性\",{\"1\":{\"204\":1}}],[\"的作用\",{\"0\":{\"203\":1}}],[\"的\",{\"1\":{\"196\":1,\"421\":1,\"422\":2}}],[\"的方式\",{\"1\":{\"187\":1}}],[\"的方式返回结果\",{\"1\":{\"121\":1}}],[\"的执行优级为\",{\"1\":{\"187\":1}}],[\"的好处在于通过在构建阶段对\",{\"1\":{\"157\":1}}],[\"的清理函数\",{\"1\":{\"141\":1}}],[\"的一些语法进行编译转换\",{\"1\":{\"420\":1}}],[\"的一些常见方法包括\",{\"1\":{\"141\":1}}],[\"的一些关键特性和用法\",{\"1\":{\"136\":1}}],[\"的一般流程包括\",{\"1\":{\"136\":1}}],[\"的尾调用优化支持度较低\",{\"1\":{\"123\":1}}],[\"的结果\",{\"1\":{\"120\":1}}],[\"的工具\",{\"1\":{\"116\":1,\"136\":1}}],[\"的数组\",{\"1\":{\"88\":1}}],[\"的开发和业务逻辑的开发\",{\"1\":{\"28\":1}}],[\"的目标是分离用户界面\",{\"1\":{\"28\":1}}],[\"的影响\",{\"1\":{\"7\":1}}],[\"模式\",{\"1\":{\"256\":1,\"257\":1,\"258\":1}}],[\"模式匹配是一种在数据结构中查找模式并执行相应操作的技术\",{\"1\":{\"119\":1}}],[\"模式匹配\",{\"1\":{\"119\":1}}],[\"模块就被代码分割\",{\"1\":{\"395\":1,\"407\":1}}],[\"模块内容\",{\"1\":{\"296\":1}}],[\"模块会被加载\",{\"1\":{\"210\":1}}],[\"模块化规范\",{\"1\":{\"257\":1}}],[\"模块化语法\",{\"1\":{\"243\":1,\"266\":1}}],[\"模块化和可复用\",{\"1\":{\"122\":1}}],[\"模块化\",{\"1\":{\"25\":1,\"269\":1}}],[\"模板\",{\"1\":{\"37\":1}}],[\"模版编译是状态机\",{\"1\":{\"29\":1}}],[\"模版编译是通过正则匹配的\",{\"1\":{\"29\":1}}],[\"模型及数据结构\",{\"1\":{\"28\":1}}],[\"模型通常表示应用程序的数据结构\",{\"1\":{\"28\":1}}],[\"模型代表应用程序中的数据和业务逻辑\",{\"1\":{\"28\":1}}],[\"模型\",{\"1\":{\"28\":2}}],[\"$1\",{\"1\":{\"39\":1}}],[\"$frag\",{\"1\":{\"39\":2}}],[\"$\",{\"1\":{\"25\":1,\"109\":3,\"159\":2,\"198\":2,\"200\":2,\"201\":3,\"216\":1,\"217\":1,\"218\":2,\"223\":2,\"227\":2,\"229\":2,\"233\":2,\"238\":1,\"263\":2,\"270\":2,\"275\":2,\"277\":2,\"280\":1,\"285\":1,\"290\":2,\"321\":2,\"329\":2,\"330\":2,\"334\":2,\"337\":3,\"338\":3,\"340\":3,\"341\":3,\"343\":3,\"344\":3,\"346\":3,\"347\":3,\"362\":2,\"366\":2,\"370\":2,\"374\":2,\"383\":2,\"387\":2,\"397\":2,\"398\":2,\"409\":2,\"410\":2,\"414\":2,\"418\":4,\"426\":2,\"436\":2,\"440\":2,\"456\":2,\"460\":2,\"464\":2,\"468\":2}}],[\"zero\",{\"1\":{\"92\":1}}],[\"zh\",{\"1\":{\"91\":1}}],[\"z\",{\"1\":{\"25\":1}}],[\"zustand官网\",{\"1\":{\"142\":1}}],[\"zustand\",{\"0\":{\"142\":1},\"1\":{\"23\":1}}],[\"创建文件\",{\"0\":{\"249\":1}}],[\"创建文档片段\",{\"1\":{\"39\":1}}],[\"创建回调函数等\",{\"1\":{\"125\":1}}],[\"创建tailwind\",{\"1\":{\"25\":1}}],[\"创建postcss\",{\"0\":{\"107\":1},\"1\":{\"25\":1}}],[\"支持最新的最终\",{\"1\":{\"422\":1}}],[\"支持对之前项目状态的迁移\",{\"1\":{\"143\":1}}],[\"支持测试回归\",{\"1\":{\"136\":1}}],[\"支持多种浏览器\",{\"1\":{\"134\":1}}],[\"支持多种编程语言\",{\"1\":{\"134\":1}}],[\"支持与\",{\"1\":{\"131\":1}}],[\"支持\",{\"1\":{\"131\":1}}],[\"支持jit\",{\"0\":{\"105\":1}}],[\"支持自定义修饰符号\",{\"1\":{\"51\":1}}],[\"支持各种各样的css处理任务\",{\"1\":{\"25\":1}}],[\"支持未来css语法\",{\"1\":{\"25\":1}}],[\"从构建后代码出错位置找到映射后源代码出错位置\",{\"1\":{\"352\":1,\"446\":1}}],[\"从哪个文件开始打包\",{\"1\":{\"256\":1}}],[\"从\",{\"1\":{\"251\":1}}],[\"从文档可知\",{\"1\":{\"214\":3}}],[\"从下到上\",{\"1\":{\"187\":1}}],[\"从右到左\",{\"1\":{\"187\":1}}],[\"从用户界面一端到另一端\",{\"1\":{\"134\":1}}],[\"从而提升用户体验\",{\"1\":{\"442\":1}}],[\"从而提高应用程序的运行性能\",{\"1\":{\"157\":1}}],[\"从而提高应用程序的质量和稳定性\",{\"1\":{\"134\":1}}],[\"从而用户体验更好\",{\"1\":{\"442\":2}}],[\"从而达到需要使用时才加载该资源\",{\"1\":{\"442\":1}}],[\"从而体积更小\",{\"1\":{\"442\":1}}],[\"从而使单个文件体积更小\",{\"1\":{\"442\":1}}],[\"从而使更新速度更快\",{\"1\":{\"442\":1}}],[\"从而使css具有更多的功能和更高的可扩展性\",{\"1\":{\"25\":1}}],[\"从而让浏览器提示源代码文件出错位置\",{\"1\":{\"352\":1,\"446\":1}}],[\"从而并行加载速度更好\",{\"1\":{\"341\":1,\"347\":1}}],[\"从而复用\",{\"1\":{\"341\":1,\"347\":1}}],[\"从而减少请求数量\",{\"1\":{\"219\":1}}],[\"从而减少了栈空间的使用\",{\"1\":{\"123\":1}}],[\"从而调试查看数据情况\",{\"1\":{\"215\":1}}],[\"从而可以在\",{\"1\":{\"209\":1}}],[\"从而轻松集成到\",{\"1\":{\"131\":1}}],[\"从而避免栈溢出\",{\"1\":{\"124\":1}}],[\"从而创建新的函数\",{\"1\":{\"120\":1}}],[\"从from账户到to账户转移amount个代币\",{\"1\":{\"92\":1}}],[\"从服务器获取资源\",{\"1\":{\"2\":1}}],[\"安装jotai\",{\"0\":{\"140\":1}}],[\"安装依赖\",{\"0\":{\"112\":1}}],[\"安装classnames\",{\"1\":{\"25\":1}}],[\"安装tailwindcss\",{\"1\":{\"25\":1}}],[\"安装postcss\",{\"1\":{\"25\":1}}],[\"安装storybook\",{\"1\":{\"25\":1}}],[\"安装\",{\"0\":{\"111\":1,\"115\":1,\"129\":1,\"145\":1},\"1\":{\"25\":1,\"91\":1,\"109\":1,\"131\":1,\"136\":1}}],[\"安全性\",{\"1\":{\"2\":1,\"3\":1,\"4\":1}}],[\"适用于复杂的项目\",{\"1\":{\"23\":1}}],[\"适合存储敏感信息\",{\"1\":{\"3\":1,\"4\":1}}],[\"适合存储小型且不敏感的数据\",{\"1\":{\"3\":1,\"4\":1}}],[\"库合约\",{\"0\":{\"66\":1}}],[\"库并且需要注入样式\",{\"1\":{\"21\":1}}],[\"库的作者特意打造的\",{\"1\":{\"21\":1}}],[\"jpegtran\",{\"1\":{\"338\":1,\"339\":1,\"340\":2,\"341\":1,\"344\":1,\"345\":1,\"346\":1,\"347\":1,\"387\":7,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"440\":7}}],[\"jpeg\",{\"1\":{\"281\":1,\"282\":1,\"387\":1,\"440\":1}}],[\"jest编译\",{\"0\":{\"132\":1}}],[\"jest\",{\"0\":{\"131\":1},\"1\":{\"128\":1,\"129\":1,\"130\":1,\"131\":12,\"132\":1}}],[\"j++\",{\"1\":{\"88\":1}}],[\"j\",{\"1\":{\"88\":1,\"159\":1}}],[\"join\",{\"1\":{\"90\":2,\"201\":1}}],[\"job\",{\"1\":{\"40\":5}}],[\"jotai为了解决状态撕裂的问题\",{\"1\":{\"141\":1}}],[\"jotai官网\",{\"1\":{\"140\":1}}],[\"jotai\",{\"1\":{\"23\":2,\"140\":2}}],[\"jamiebuilds\",{\"1\":{\"39\":1}}],[\"javascriptenabled\",{\"1\":{\"341\":1}}],[\"javascript\",{\"1\":{\"1\":1,\"28\":2,\"100\":3,\"102\":1,\"120\":1,\"121\":1,\"122\":5,\"123\":1,\"124\":1,\"125\":1,\"134\":1,\"157\":9,\"159\":2,\"200\":1,\"267\":1,\"272\":2,\"274\":1,\"378\":1,\"431\":1}}],[\"js的polyfill\",{\"1\":{\"422\":1}}],[\"js的核心模块\",{\"1\":{\"258\":1}}],[\"js会发生覆盖\",{\"1\":{\"393\":1,\"394\":1,\"396\":1,\"405\":1,\"406\":1,\"408\":1}}],[\"js只有eslint和babel在干活\",{\"1\":{\"366\":1}}],[\"js文件目录\",{\"1\":{\"248\":1}}],[\"js$\",{\"1\":{\"187\":6,\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"263\":1,\"275\":1,\"321\":1,\"329\":1,\"330\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"jsonp\",{\"1\":{\"159\":3}}],[\"json\",{\"1\":{\"133\":1,\"198\":3,\"199\":2,\"215\":1,\"228\":1,\"250\":3,\"256\":1,\"268\":2,\"273\":3,\"328\":1,\"331\":2,\"337\":1,\"338\":1,\"339\":1,\"340\":2,\"341\":1,\"343\":1,\"344\":1,\"345\":1,\"346\":1,\"347\":1,\"393\":1,\"405\":1}}],[\"jsx|js\",{\"1\":{\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1}}],[\"jsx\",{\"1\":{\"109\":1,\"267\":2,\"269\":2,\"274\":1,\"337\":1,\"338\":1,\"340\":2,\"341\":2}}],[\"js`\",{\"1\":{\"109\":1}}],[\"js和nuxt\",{\"1\":{\"102\":1}}],[\"js交互\",{\"1\":{\"62\":1}}],[\"js|jsx|ts|tsx\",{\"1\":{\"109\":1}}],[\"js|jsx|ts|tsx|mdx|css\",{\"1\":{\"25\":1}}],[\"js|jsx|mjs|ts|tsx\",{\"1\":{\"25\":2}}],[\"js\",{\"0\":{\"107\":1,\"266\":1,\"329\":1,\"330\":1,\"419\":1},\"1\":{\"21\":2,\"25\":3,\"28\":1,\"90\":1,\"102\":1,\"106\":1,\"107\":1,\"109\":3,\"158\":8,\"159\":16,\"187\":1,\"189\":2,\"193\":1,\"197\":2,\"198\":2,\"199\":2,\"200\":2,\"201\":5,\"207\":1,\"213\":1,\"215\":2,\"216\":2,\"217\":1,\"218\":1,\"219\":2,\"221\":2,\"223\":6,\"227\":6,\"229\":6,\"233\":6,\"236\":1,\"238\":5,\"239\":3,\"240\":2,\"243\":1,\"246\":3,\"248\":4,\"249\":5,\"251\":5,\"254\":1,\"256\":1,\"257\":3,\"258\":2,\"260\":1,\"263\":6,\"264\":1,\"266\":5,\"267\":1,\"268\":1,\"269\":1,\"270\":11,\"273\":2,\"274\":1,\"275\":13,\"277\":5,\"280\":2,\"284\":1,\"285\":3,\"289\":5,\"290\":5,\"297\":2,\"298\":4,\"303\":2,\"304\":4,\"309\":2,\"310\":4,\"315\":2,\"316\":4,\"321\":6,\"325\":1,\"328\":4,\"329\":6,\"330\":6,\"331\":2,\"334\":3,\"337\":8,\"338\":8,\"339\":5,\"340\":16,\"341\":12,\"343\":8,\"344\":8,\"345\":5,\"346\":12,\"347\":11,\"351\":21,\"358\":9,\"362\":5,\"364\":1,\"366\":5,\"368\":1,\"370\":5,\"372\":3,\"374\":5,\"383\":5,\"387\":5,\"390\":4,\"391\":1,\"393\":15,\"394\":13,\"395\":3,\"396\":7,\"397\":6,\"398\":13,\"402\":4,\"403\":1,\"405\":15,\"406\":13,\"407\":3,\"408\":7,\"409\":6,\"410\":13,\"414\":6,\"416\":1,\"417\":1,\"418\":23,\"420\":3,\"421\":1,\"422\":18,\"426\":13,\"436\":5,\"440\":5,\"442\":4,\"445\":21,\"452\":9,\"456\":5,\"458\":1,\"460\":5,\"462\":1,\"464\":5,\"466\":3,\"468\":5}}],[\"btn\",{\"1\":{\"395\":2,\"398\":1,\"407\":2,\"410\":1}}],[\"browse\",{\"1\":{\"264\":1,\"289\":1}}],[\"browser\",{\"1\":{\"159\":1,\"270\":1,\"351\":1,\"398\":1,\"410\":1,\"422\":1,\"445\":1}}],[\"browserslist\",{\"1\":{\"228\":4,\"339\":1,\"340\":1,\"345\":1}}],[\"browsers\",{\"1\":{\"159\":1}}],[\"browserrouter>\",{\"1\":{\"117\":1}}],[\"browserrouter\",{\"1\":{\"117\":1}}],[\"brk\",{\"1\":{\"215\":2}}],[\"break\",{\"1\":{\"159\":1}}],[\"bg\",{\"1\":{\"105\":1}}],[\"bin\",{\"1\":{\"215\":2,\"387\":4,\"440\":4}}],[\"bind\",{\"1\":{\"159\":7}}],[\"binding\",{\"1\":{\"158\":1,\"159\":1}}],[\"bind等这些就是指令\",{\"1\":{\"36\":1}}],[\"binary\",{\"1\":{\"83\":1}}],[\"b中的状态变量受影响\",{\"1\":{\"75\":1}}],[\"built\",{\"1\":{\"469\":1,\"470\":1,\"471\":1}}],[\"build\",{\"1\":{\"224\":1,\"230\":1,\"234\":1,\"331\":2,\"339\":1,\"340\":1,\"345\":1,\"422\":1,\"426\":1}}],[\"bundle\",{\"1\":{\"245\":1,\"394\":2,\"396\":1,\"406\":2,\"408\":1}}],[\"buttonusage\",{\"1\":{\"117\":2}}],[\"button\",{\"1\":{\"117\":2}}],[\"button>\",{\"1\":{\"17\":1,\"117\":1,\"395\":1,\"407\":1}}],[\"burn\",{\"1\":{\"77\":4}}],[\"buffer\",{\"1\":{\"66\":8,\"194\":1,\"200\":1}}],[\"b42146b063c7d6ee1358846c198246239e9360e8\",{\"1\":{\"66\":1}}],[\"blob\",{\"1\":{\"66\":1,\"67\":1,\"207\":1}}],[\"blockhash\",{\"1\":{\"50\":1}}],[\"block是全局变量\",{\"1\":{\"49\":1}}],[\"block\",{\"1\":{\"49\":1,\"50\":6,\"59\":2,\"90\":1}}],[\"by\",{\"1\":{\"66\":1,\"351\":1,\"445\":1,\"470\":1,\"471\":1}}],[\"byte\",{\"1\":{\"48\":1,\"58\":1}}],[\"bytes4\",{\"1\":{\"49\":1,\"50\":1,\"73\":1,\"83\":1,\"85\":2}}],[\"bytes\",{\"1\":{\"48\":1,\"50\":1,\"59\":4,\"66\":4,\"73\":4,\"74\":1,\"75\":3,\"78\":1,\"83\":4,\"85\":3,\"86\":2}}],[\"bytes32\",{\"1\":{\"48\":1,\"50\":1,\"59\":1,\"84\":1}}],[\"bytes3\",{\"1\":{\"48\":1}}],[\"bytes2\",{\"1\":{\"48\":1}}],[\"bytes16\",{\"1\":{\"66\":1}}],[\"bytes1\",{\"1\":{\"48\":1,\"66\":1}}],[\"been\",{\"1\":{\"351\":1,\"445\":1}}],[\"before\",{\"1\":{\"159\":1}}],[\"be\",{\"1\":{\"61\":1,\"90\":1,\"92\":1,\"469\":1,\"472\":1}}],[\"bestofjs\",{\"1\":{\"26\":1,\"97\":1}}],[\"bb\",{\"1\":{\"59\":4}}],[\"bbb\",{\"1\":{\"31\":1}}],[\"bootcss\",{\"1\":{\"269\":2}}],[\"boolean>\",{\"1\":{\"472\":1}}],[\"boolean\",{\"1\":{\"229\":1,\"233\":1,\"337\":1,\"338\":1,\"340\":3,\"341\":3,\"343\":1,\"344\":1,\"346\":2,\"347\":2,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"468\":1,\"469\":1,\"470\":1,\"471\":1,\"472\":1}}],[\"bool\",{\"1\":{\"48\":1,\"56\":2,\"59\":1,\"73\":6,\"74\":1,\"75\":3,\"76\":1,\"77\":1,\"79\":4,\"85\":2,\"86\":4,\"90\":3,\"92\":3}}],[\"box\",{\"1\":{\"316\":1}}],[\"box5\",{\"1\":{\"239\":1,\"264\":1,\"282\":1,\"289\":1,\"316\":1}}],[\"box4\",{\"1\":{\"239\":1,\"264\":1,\"289\":1,\"310\":2,\"316\":1}}],[\"box3\",{\"1\":{\"239\":1,\"264\":1,\"282\":1,\"289\":1,\"310\":2,\"316\":1}}],[\"box2\",{\"1\":{\"239\":1,\"264\":1,\"282\":1,\"289\":1,\"304\":2,\"310\":1,\"316\":1,\"351\":1,\"445\":1}}],[\"box1\",{\"1\":{\"239\":1,\"264\":1,\"289\":1,\"298\":2,\"304\":1,\"310\":1,\"316\":1}}],[\"body>\",{\"1\":{\"239\":1,\"264\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1,\"395\":1,\"407\":1}}],[\"bodytags\",{\"1\":{\"219\":2}}],[\"body\",{\"1\":{\"2\":1}}],[\"b\",{\"1\":{\"31\":1,\"59\":2,\"75\":4,\"86\":2}}],[\"babeloptions\",{\"1\":{\"339\":1}}],[\"babel配置文件\",{\"1\":{\"328\":1}}],[\"babelrc\",{\"1\":{\"273\":4}}],[\"babel\",{\"0\":{\"199\":1,\"272\":1,\"380\":1,\"433\":1},\"1\":{\"199\":6,\"215\":2,\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"263\":1,\"266\":2,\"273\":5,\"274\":6,\"275\":7,\"321\":1,\"328\":1,\"329\":1,\"330\":1,\"337\":3,\"338\":2,\"339\":6,\"340\":6,\"341\":3,\"343\":2,\"344\":2,\"345\":8,\"346\":2,\"347\":2,\"362\":1,\"366\":1,\"368\":2,\"369\":1,\"370\":1,\"372\":1,\"374\":1,\"381\":2,\"382\":3,\"383\":3,\"387\":2,\"397\":2,\"398\":2,\"409\":2,\"410\":2,\"414\":2,\"418\":4,\"420\":2,\"422\":4,\"426\":2,\"434\":2,\"435\":3,\"436\":3,\"440\":2,\"442\":4,\"456\":1,\"460\":1,\"462\":2,\"463\":1,\"464\":1,\"466\":1,\"468\":1}}],[\"bannerwebpackplugin\",{\"0\":{\"216\":1},\"1\":{\"216\":3}}],[\"banner\",{\"0\":{\"198\":1},\"1\":{\"198\":2,\"199\":1,\"216\":1}}],[\"background\",{\"1\":{\"282\":6,\"298\":1,\"304\":1,\"310\":2,\"316\":1,\"351\":1,\"445\":1}}],[\"background|color\",{\"1\":{\"25\":1}}],[\"backstop\",{\"1\":{\"136\":3}}],[\"backstopjs\",{\"1\":{\"136\":12}}],[\"balanceof\",{\"1\":{\"76\":1,\"77\":3,\"92\":1}}],[\"balances\",{\"1\":{\"62\":4}}],[\"balance\",{\"1\":{\"61\":3,\"79\":1,\"90\":1}}],[\"batcher\",{\"0\":{\"40\":1},\"1\":{\"34\":4,\"40\":5}}],[\"base64\",{\"1\":{\"285\":1}}],[\"baseuri\",{\"1\":{\"159\":1}}],[\"based\",{\"1\":{\"159\":1}}],[\"base\",{\"1\":{\"25\":1,\"108\":1}}],[\"+$\",{\"1\":{\"159\":1}}],[\"+=\",{\"1\":{\"51\":2,\"62\":1,\"218\":1}}],[\"++uid\",{\"1\":{\"34\":1}}],[\"+\",{\"1\":{\"17\":1,\"26\":1,\"66\":3,\"88\":1,\"90\":2,\"120\":3,\"121\":1,\"122\":1,\"159\":13,\"249\":1,\"394\":1,\"406\":1}}],[\">计算<\",{\"1\":{\"395\":1,\"407\":1}}],[\"><\",{\"1\":{\"105\":1,\"239\":6,\"264\":8,\"289\":9,\"298\":2,\"304\":3,\"310\":5,\"316\":6}}],[\">=\",{\"1\":{\"77\":1,\"228\":1}}],[\">=0\",{\"1\":{\"46\":1,\"47\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"61\":1,\"62\":1,\"65\":1,\"66\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"76\":1,\"77\":1,\"78\":1,\"90\":1,\"92\":1}}],[\">>=\",{\"1\":{\"66\":2}}],[\">click\",{\"1\":{\"17\":1}}],[\">\",{\"1\":{\"15\":1,\"17\":1,\"29\":1,\"36\":2,\"37\":1,\"39\":5,\"61\":1,\"66\":1,\"90\":3,\"117\":2,\"159\":1,\"187\":3,\"215\":2,\"228\":1,\"239\":5,\"264\":4,\"289\":5,\"298\":6,\"304\":4,\"310\":4,\"316\":5,\"339\":1,\"340\":1,\"345\":1,\"395\":5,\"398\":1,\"407\":5,\"410\":1,\"422\":1,\"470\":1,\"471\":1,\"472\":5}}],[\"<t>\",{\"1\":{\"472\":2}}],[\"<title>code\",{\"1\":{\"395\":1,\"407\":1}}],[\"<title>webpack5<\",{\"1\":{\"239\":1,\"264\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1}}],[\"<i\",{\"1\":{\"264\":3,\"289\":3}}],[\"<input\",{\"1\":{\"36\":1,\"37\":1,\"39\":5}}],[\"<script\",{\"1\":{\"239\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1}}],[\"<span>\",{\"1\":{\"17\":1}}],[\"<meta\",{\"1\":{\"239\":3,\"264\":3,\"289\":3,\"298\":3,\"304\":3,\"310\":3,\"316\":3,\"395\":3,\"407\":3}}],[\"<h1>hello\",{\"1\":{\"239\":1,\"264\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1,\"395\":1,\"407\":1}}],[\"<head>\",{\"1\":{\"239\":1,\"264\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1,\"395\":1,\"407\":1}}],[\"<html\",{\"1\":{\"239\":1,\"264\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1,\"395\":1,\"407\":1}}],[\"<home\",{\"1\":{\"117\":1}}],[\"<h2>\",{\"1\":{\"17\":1}}],[\"<body>\",{\"1\":{\"239\":1,\"264\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1,\"395\":1,\"407\":1}}],[\"<browserrouter>\",{\"1\":{\"117\":1}}],[\"<button\",{\"1\":{\"17\":1,\"117\":1,\"395\":1,\"407\":1}}],[\"<=pivot\",{\"1\":{\"154\":1}}],[\"<=\",{\"1\":{\"51\":2,\"61\":1,\"123\":1,\"124\":1,\"153\":1,\"154\":1}}],[\"<a>\",{\"1\":{\"48\":1}}],[\"<app\",{\"1\":{\"15\":1}}],[\"<0\",{\"1\":{\"46\":1,\"47\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"61\":1,\"62\":1,\"65\":1,\"66\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"76\":1,\"77\":1,\"78\":1,\"90\":1,\"92\":1}}],[\"<div\",{\"1\":{\"17\":1,\"36\":1,\"105\":1,\"239\":5,\"264\":5,\"289\":5,\"298\":1,\"304\":2,\"310\":4,\"316\":5}}],[\"<\",{\"1\":{\"15\":1,\"17\":3,\"36\":1,\"39\":1,\"51\":3,\"52\":2,\"59\":1,\"88\":3,\"90\":2,\"117\":2,\"153\":1,\"159\":2,\"239\":5,\"264\":4,\"289\":5,\"298\":6,\"304\":4,\"310\":4,\"316\":5,\"395\":4,\"407\":4}}],[\"<react\",{\"1\":{\"15\":1}}],[\"rmdirsync\",{\"1\":{\"217\":1}}],[\"r\",{\"1\":{\"158\":3,\"159\":2,\"351\":1,\"445\":1,\"472\":2}}],[\"right\",{\"1\":{\"153\":8,\"154\":3}}],[\"rize\",{\"1\":{\"134\":1}}],[\"room\",{\"1\":{\"471\":1}}],[\"root\",{\"1\":{\"15\":3,\"16\":1,\"117\":2,\"345\":1}}],[\"rollup\",{\"1\":{\"244\":1}}],[\"router刷新404问题\",{\"1\":{\"337\":1,\"343\":1,\"346\":1,\"347\":1}}],[\"router\",{\"1\":{\"117\":1,\"339\":1,\"340\":1,\"345\":1}}],[\"run\",{\"1\":{\"215\":2,\"224\":1,\"230\":1,\"234\":1,\"331\":3,\"339\":1,\"340\":1,\"345\":1,\"422\":1,\"426\":1}}],[\"runtime文件命名规则\",{\"1\":{\"418\":1}}],[\"runtimechunk\",{\"1\":{\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"418\":1}}],[\"runtime\",{\"1\":{\"159\":12,\"219\":3,\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"351\":12,\"382\":3,\"383\":2,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":6,\"426\":1,\"435\":3,\"436\":2,\"440\":1,\"442\":1,\"445\":12}}],[\"rules\",{\"1\":{\"107\":1,\"109\":2,\"187\":2,\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"257\":1,\"258\":1,\"263\":1,\"267\":1,\"269\":6,\"270\":2,\"275\":1,\"277\":1,\"280\":1,\"285\":1,\"290\":1,\"297\":1,\"303\":1,\"309\":1,\"315\":1,\"321\":1,\"329\":1,\"330\":1,\"334\":1,\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":2,\"409\":1,\"410\":2,\"414\":1,\"418\":2,\"422\":1,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"rush\",{\"1\":{\"26\":1}}],[\"raw\",{\"0\":{\"194\":1},\"1\":{\"194\":3,\"200\":1}}],[\"rawstr\",{\"1\":{\"90\":3}}],[\"random\",{\"1\":{\"59\":1,\"90\":2}}],[\"rel\",{\"1\":{\"414\":2,\"418\":4,\"426\":2}}],[\"relativepath\",{\"1\":{\"201\":2}}],[\"relativerequest是inline\",{\"1\":{\"201\":1}}],[\"relativerequest\",{\"1\":{\"201\":5}}],[\"reuseexistingchunk\",{\"1\":{\"394\":4,\"396\":2,\"406\":4,\"408\":2}}],[\"refresh\",{\"1\":{\"337\":2,\"339\":2,\"340\":4,\"341\":2}}],[\"reference\",{\"1\":{\"136\":1,\"159\":1}}],[\"reject\",{\"1\":{\"159\":3}}],[\"replace\",{\"1\":{\"159\":3,\"197\":1}}],[\"representation\",{\"1\":{\"66\":3}}],[\"removing\",{\"1\":{\"470\":1}}],[\"removefiles\",{\"1\":{\"217\":3}}],[\"removechild\",{\"1\":{\"159\":1}}],[\"remainingrequest\",{\"1\":{\"195\":1,\"201\":3}}],[\"remix\",{\"1\":{\"93\":1}}],[\"recommended\",{\"1\":{\"269\":1,\"270\":1,\"345\":1,\"398\":1,\"410\":1,\"422\":1}}],[\"recursion\",{\"1\":{\"119\":1}}],[\"receiveeth\",{\"1\":{\"79\":1}}],[\"receive方法\",{\"1\":{\"79\":2}}],[\"receivedcalled\",{\"1\":{\"78\":2}}],[\"receive\",{\"1\":{\"78\":4,\"79\":2}}],[\"receive和fallback\",{\"0\":{\"78\":1}}],[\"re\",{\"1\":{\"116\":1}}],[\"reduce\",{\"1\":{\"122\":3,\"159\":1,\"249\":1,\"394\":1,\"406\":1}}],[\"red\",{\"1\":{\"90\":3}}],[\"redpacket\",{\"1\":{\"90\":1}}],[\"readonly<pick<t\",{\"1\":{\"472\":1}}],[\"readonly\",{\"1\":{\"472\":5}}],[\"ready\",{\"1\":{\"351\":1,\"445\":1}}],[\"read\",{\"1\":{\"351\":1,\"445\":1}}],[\"readable\",{\"1\":{\"351\":1,\"445\":1}}],[\"readdirsync\",{\"1\":{\"217\":1}}],[\"realsrc\",{\"1\":{\"159\":3}}],[\"reasonstring\",{\"1\":{\"86\":2}}],[\"reason\",{\"1\":{\"86\":6}}],[\"reactrefreshwebpackplugin\",{\"1\":{\"337\":2,\"340\":2,\"341\":2}}],[\"reactdom\",{\"1\":{\"15\":1}}],[\"react18的优化\",{\"0\":{\"14\":1}}],[\"react性能优化\",{\"0\":{\"13\":1}}],[\"react\",{\"0\":{\"336\":1,\"473\":1},\"1\":{\"12\":1,\"15\":1,\"17\":2,\"23\":1,\"25\":9,\"28\":1,\"111\":1,\"116\":4,\"117\":6,\"141\":1,\"243\":1,\"269\":4,\"274\":2,\"337\":2,\"339\":13,\"340\":10,\"341\":6,\"358\":1,\"452\":1}}],[\"reverting\",{\"1\":{\"86\":1}}],[\"revert交易并发送error\",{\"1\":{\"79\":2}}],[\"revert`sss`\",{\"1\":{\"56\":1}}],[\"revert\",{\"1\":{\"56\":2,\"79\":3,\"86\":1}}],[\"revalidate\",{\"1\":{\"6\":2}}],[\"request\",{\"1\":{\"159\":1,\"196\":2}}],[\"requestanimationframe\",{\"1\":{\"40\":1}}],[\"required<t>\",{\"1\":{\"472\":1}}],[\"require\",{\"1\":{\"25\":1,\"56\":4,\"57\":1,\"61\":3,\"66\":1,\"73\":2,\"74\":1,\"75\":2,\"77\":1,\"80\":1,\"86\":3,\"88\":1,\"90\":4,\"109\":6,\"117\":1,\"158\":14,\"159\":39,\"198\":1,\"199\":2,\"200\":1,\"207\":12,\"219\":2,\"223\":4,\"227\":4,\"229\":4,\"233\":5,\"238\":1,\"258\":1,\"263\":3,\"270\":2,\"275\":2,\"277\":1,\"280\":1,\"285\":1,\"290\":1,\"297\":1,\"303\":1,\"309\":1,\"315\":1,\"321\":3,\"329\":3,\"330\":3,\"334\":1,\"337\":5,\"338\":8,\"340\":8,\"341\":9,\"343\":6,\"344\":9,\"346\":10,\"347\":13,\"351\":7,\"362\":3,\"366\":3,\"370\":3,\"374\":8,\"383\":7,\"387\":8,\"393\":2,\"394\":2,\"396\":2,\"397\":8,\"398\":8,\"405\":2,\"406\":2,\"408\":2,\"409\":8,\"410\":8,\"414\":9,\"418\":18,\"426\":10,\"436\":7,\"440\":8,\"445\":7,\"456\":3,\"460\":3,\"464\":3,\"468\":8}}],[\"restore\",{\"1\":{\"210\":1}}],[\"result2\",{\"1\":{\"270\":2,\"275\":2,\"358\":4,\"398\":4,\"410\":4,\"422\":8,\"426\":2,\"452\":4}}],[\"result1\",{\"1\":{\"270\":2,\"275\":2,\"358\":4,\"422\":8,\"426\":2,\"452\":4}}],[\"resultstr\",{\"1\":{\"90\":3}}],[\"result\",{\"1\":{\"83\":8,\"87\":2,\"153\":6,\"159\":1,\"193\":1,\"199\":2}}],[\"response\",{\"1\":{\"73\":2,\"75\":3}}],[\"resolvers\",{\"1\":{\"347\":3}}],[\"resolve\",{\"1\":{\"40\":1,\"109\":10,\"159\":3,\"214\":2,\"223\":3,\"227\":3,\"229\":3,\"233\":3,\"238\":1,\"258\":2,\"263\":3,\"270\":2,\"275\":2,\"277\":1,\"280\":1,\"285\":1,\"290\":1,\"297\":1,\"303\":1,\"309\":1,\"315\":1,\"321\":3,\"329\":2,\"330\":3,\"334\":1,\"337\":7,\"338\":8,\"340\":6,\"341\":9,\"343\":8,\"344\":8,\"346\":9,\"347\":11,\"362\":2,\"366\":3,\"370\":4,\"374\":5,\"383\":5,\"387\":5,\"393\":1,\"394\":1,\"396\":1,\"397\":5,\"398\":5,\"405\":1,\"406\":1,\"408\":1,\"409\":5,\"410\":5,\"414\":5,\"418\":10,\"422\":4,\"426\":6,\"436\":5,\"440\":5,\"456\":2,\"460\":3,\"464\":4,\"468\":5}}],[\"resource\",{\"1\":{\"2\":2,\"109\":1,\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"290\":3,\"321\":1,\"329\":1,\"330\":1,\"334\":1,\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"reset\",{\"1\":{\"40\":3,\"42\":1}}],[\"registrationerror\",{\"1\":{\"426\":2}}],[\"registration\",{\"1\":{\"426\":4}}],[\"registered\",{\"1\":{\"426\":1}}],[\"register\",{\"1\":{\"145\":1,\"426\":1}}],[\"regression\",{\"1\":{\"136\":1}}],[\"regexp\",{\"1\":{\"39\":1}}],[\"reg\",{\"1\":{\"39\":2}}],[\"rendering\",{\"0\":{\"100\":1,\"101\":1},\"1\":{\"99\":2}}],[\"render\",{\"0\":{\"114\":1,\"116\":1},\"1\":{\"15\":1,\"29\":1,\"34\":1,\"36\":1,\"37\":1,\"39\":1,\"115\":1,\"116\":7,\"117\":2}}],[\"returntype<t>\",{\"1\":{\"469\":1}}],[\"returnlist\",{\"1\":{\"51\":1}}],[\"returns\",{\"1\":{\"49\":1,\"50\":1,\"51\":3,\"52\":4,\"53\":1,\"54\":1,\"55\":2,\"58\":1,\"59\":2,\"60\":2,\"61\":1,\"65\":2,\"66\":5,\"72\":2,\"73\":1,\"74\":1,\"76\":1,\"77\":1,\"79\":1,\"80\":1,\"83\":4,\"84\":1,\"85\":2,\"86\":5,\"90\":1,\"92\":6,\"472\":1}}],[\"return\",{\"1\":{\"12\":1,\"17\":1,\"31\":2,\"33\":2,\"36\":2,\"39\":2,\"49\":1,\"51\":2,\"52\":4,\"53\":1,\"54\":1,\"55\":2,\"58\":1,\"59\":5,\"60\":1,\"61\":1,\"65\":2,\"66\":7,\"73\":1,\"74\":1,\"76\":1,\"77\":1,\"79\":3,\"84\":1,\"85\":2,\"86\":1,\"87\":1,\"90\":5,\"117\":1,\"120\":3,\"121\":4,\"122\":2,\"123\":2,\"124\":2,\"125\":1,\"141\":2,\"153\":3,\"154\":2,\"155\":2,\"158\":2,\"159\":12,\"189\":1,\"192\":2,\"194\":1,\"195\":1,\"197\":1,\"198\":1,\"200\":1,\"201\":2,\"214\":1,\"216\":3,\"217\":1,\"218\":2,\"219\":4,\"229\":1,\"233\":1,\"249\":2,\"269\":2,\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"374\":1,\"383\":1,\"387\":1,\"394\":1,\"397\":1,\"398\":1,\"406\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"468\":1,\"469\":2}}],[\"|map4|map3|avi\",{\"1\":{\"277\":1,\"334\":1}}],[\"|`\",{\"1\":{\"218\":1}}],[\"||\",{\"1\":{\"59\":1,\"109\":1,\"159\":4}}],[\"|\",{\"1\":{\"12\":2,\"78\":1,\"218\":5,\"393\":2,\"405\":2,\"469\":1,\"470\":1,\"471\":1,\"472\":2}}],[\"vendor\",{\"1\":{\"387\":4,\"440\":4}}],[\"version\",{\"1\":{\"46\":1,\"215\":1,\"228\":1,\"339\":2,\"340\":2,\"345\":2,\"422\":1}}],[\"verdaccio\",{\"1\":{\"26\":1,\"145\":1}}],[\"vite\",{\"1\":{\"244\":1}}],[\"vite的原理是什么\",{\"0\":{\"170\":1}}],[\"via\",{\"1\":{\"159\":2}}],[\"visual\",{\"1\":{\"136\":1}}],[\"viewport\",{\"1\":{\"239\":1,\"264\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1,\"395\":1,\"407\":1}}],[\"viewmodel\",{\"1\":{\"28\":1}}],[\"view\",{\"1\":{\"28\":2,\"49\":1,\"51\":1,\"53\":1,\"54\":1,\"55\":2,\"58\":2,\"59\":1,\"61\":1,\"66\":2,\"72\":2,\"74\":1,\"77\":1,\"79\":1,\"83\":4,\"90\":1,\"92\":3}}],[\"vscode\",{\"0\":{\"271\":1},\"1\":{\"271\":1,\"426\":1}}],[\"vs\",{\"0\":{\"99\":1}}],[\"v5\",{\"1\":{\"92\":1}}],[\"vlaue=\",{\"1\":{\"39\":1}}],[\"v\",{\"1\":{\"36\":4,\"37\":1,\"39\":6,\"469\":2}}],[\"vm\",{\"1\":{\"33\":5,\"34\":8,\"39\":9}}],[\"vue$\",{\"1\":{\"343\":1,\"344\":1,\"346\":1,\"347\":1}}],[\"vueloaderplugin\",{\"1\":{\"343\":2,\"344\":2,\"346\":2,\"347\":2}}],[\"vue构造函数\",{\"1\":{\"37\":1}}],[\"vue实例vm\",{\"1\":{\"39\":2}}],[\"vue实例\",{\"1\":{\"33\":2,\"34\":1}}],[\"vue3在线编译是有with的\",{\"1\":{\"29\":1}}],[\"vue3\",{\"1\":{\"29\":1,\"345\":1}}],[\"vue2原理\",{\"0\":{\"30\":1},\"1\":{\"29\":1,\"38\":1}}],[\"vue2\",{\"1\":{\"29\":1}}],[\"vue\",{\"0\":{\"27\":1,\"342\":1},\"1\":{\"37\":1,\"39\":1,\"243\":1,\"269\":2,\"343\":8,\"344\":7,\"345\":11,\"346\":8,\"347\":13,\"358\":1,\"414\":2,\"418\":2,\"426\":1,\"452\":1}}],[\"variable\",{\"1\":{\"159\":1}}],[\"variant=\",{\"1\":{\"117\":1}}],[\"var>100\",{\"1\":{\"56\":1}}],[\"var\",{\"1\":{\"33\":1,\"34\":1,\"37\":3,\"39\":8,\"90\":8,\"153\":1,\"154\":1,\"155\":1,\"158\":7,\"159\":32,\"270\":4,\"351\":5,\"398\":2,\"410\":2,\"422\":2,\"445\":5}}],[\"vary\",{\"1\":{\"7\":3}}],[\"vallue\",{\"1\":{\"78\":1}}],[\"value\",{\"1\":{\"31\":4,\"34\":6,\"39\":2,\"50\":1,\"61\":1,\"62\":1,\"66\":14,\"73\":3,\"76\":2,\"77\":6,\"78\":3,\"79\":2,\"90\":2,\"92\":5,\"158\":2,\"159\":2}}],[\"valtio\",{\"1\":{\"23\":2}}],[\"val\",{\"1\":{\"12\":2,\"33\":4}}],[\"void\",{\"1\":{\"12\":2}}],[\"=address\",{\"1\":{\"56\":1}}],[\"==\",{\"1\":{\"39\":1,\"48\":1,\"56\":2,\"57\":1,\"59\":3,\"61\":1,\"66\":3,\"80\":1,\"86\":1,\"90\":2,\"158\":2,\"159\":8,\"219\":1,\"269\":1}}],[\"==>已经记录到电话本\",{\"1\":{\"34\":1}}],[\"==>\",{\"1\":{\"34\":1}}],[\"==null\",{\"1\":{\"34\":1}}],[\"===\",{\"1\":{\"12\":2,\"31\":1,\"33\":1,\"39\":2,\"90\":2,\"109\":1,\"117\":1,\"122\":1,\"155\":1,\"159\":3,\"269\":1,\"340\":1,\"341\":2,\"346\":1,\"347\":2}}],[\"=>render\",{\"1\":{\"34\":1}}],[\"=>\",{\"1\":{\"12\":5,\"17\":3,\"31\":1,\"40\":3,\"54\":1,\"62\":1,\"76\":3,\"77\":1,\"80\":2,\"90\":1,\"117\":1,\"122\":5,\"141\":7,\"158\":10,\"159\":28,\"193\":1,\"201\":2,\"214\":13,\"216\":3,\"217\":2,\"218\":2,\"219\":7,\"229\":1,\"233\":1,\"249\":1,\"337\":2,\"338\":2,\"340\":2,\"341\":2,\"343\":2,\"344\":2,\"346\":2,\"347\":2,\"351\":3,\"374\":1,\"383\":1,\"387\":1,\"394\":2,\"395\":1,\"397\":1,\"398\":2,\"406\":2,\"407\":1,\"409\":1,\"410\":2,\"414\":1,\"418\":3,\"422\":4,\"426\":5,\"436\":1,\"440\":1,\"445\":3,\"468\":1,\"469\":3,\"472\":2}}],[\"=\",{\"1\":{\"12\":5,\"15\":1,\"17\":3,\"19\":1,\"25\":5,\"31\":2,\"33\":2,\"34\":17,\"35\":2,\"37\":4,\"39\":13,\"40\":9,\"47\":1,\"49\":5,\"50\":2,\"51\":4,\"52\":5,\"53\":3,\"54\":2,\"55\":4,\"56\":6,\"57\":3,\"58\":7,\"59\":5,\"61\":1,\"62\":2,\"66\":18,\"70\":1,\"72\":2,\"73\":6,\"74\":1,\"75\":4,\"76\":2,\"77\":2,\"79\":2,\"80\":7,\"83\":8,\"85\":1,\"86\":5,\"87\":1,\"88\":5,\"90\":21,\"106\":1,\"107\":1,\"109\":11,\"117\":6,\"120\":1,\"121\":1,\"122\":7,\"123\":1,\"124\":1,\"125\":2,\"141\":8,\"153\":5,\"154\":5,\"155\":2,\"158\":12,\"159\":77,\"189\":1,\"192\":2,\"193\":2,\"194\":2,\"195\":2,\"196\":1,\"197\":1,\"198\":4,\"199\":5,\"200\":4,\"201\":10,\"207\":12,\"213\":1,\"214\":1,\"216\":9,\"217\":7,\"218\":4,\"219\":7,\"223\":5,\"227\":5,\"229\":6,\"233\":7,\"238\":2,\"257\":1,\"258\":2,\"263\":4,\"269\":2,\"270\":6,\"274\":1,\"275\":6,\"277\":2,\"280\":2,\"285\":2,\"290\":2,\"297\":2,\"303\":2,\"309\":2,\"315\":2,\"321\":4,\"329\":4,\"330\":4,\"334\":2,\"337\":7,\"338\":10,\"339\":2,\"340\":11,\"341\":12,\"343\":8,\"344\":11,\"345\":2,\"346\":13,\"347\":16,\"351\":7,\"353\":2,\"358\":5,\"362\":4,\"366\":4,\"370\":4,\"374\":12,\"383\":10,\"387\":11,\"393\":3,\"394\":4,\"395\":1,\"396\":3,\"397\":11,\"398\":15,\"405\":3,\"406\":4,\"407\":1,\"408\":3,\"409\":11,\"410\":15,\"414\":12,\"418\":24,\"422\":14,\"426\":17,\"436\":10,\"440\":11,\"445\":7,\"447\":2,\"452\":5,\"456\":4,\"460\":4,\"464\":4,\"468\":12,\"469\":3,\"470\":3,\"471\":3,\"472\":18}}],[\"fullhash\",{\"1\":{\"417\":1}}],[\"func\",{\"1\":{\"51\":2}}],[\"functions\",{\"1\":{\"119\":3,\"159\":1}}],[\"functional\",{\"1\":{\"119\":1}}],[\"function\",{\"1\":{\"12\":4,\"17\":1,\"31\":1,\"33\":5,\"34\":5,\"35\":4,\"36\":1,\"37\":1,\"39\":4,\"40\":4,\"49\":1,\"50\":1,\"51\":3,\"52\":4,\"53\":2,\"54\":2,\"55\":3,\"56\":1,\"57\":1,\"58\":4,\"59\":2,\"60\":2,\"61\":3,\"62\":1,\"65\":2,\"66\":5,\"69\":1,\"70\":1,\"71\":1,\"72\":4,\"73\":2,\"74\":1,\"75\":2,\"76\":2,\"77\":2,\"79\":4,\"80\":2,\"82\":1,\"83\":4,\"84\":1,\"85\":3,\"86\":3,\"87\":1,\"88\":2,\"90\":4,\"92\":6,\"117\":1,\"120\":3,\"121\":4,\"122\":3,\"123\":1,\"124\":1,\"125\":2,\"153\":2,\"154\":1,\"155\":1,\"158\":1,\"159\":6,\"189\":1,\"192\":2,\"193\":1,\"194\":1,\"195\":2,\"197\":1,\"198\":1,\"199\":2,\"200\":1,\"201\":1,\"249\":2,\"358\":2,\"395\":1,\"398\":2,\"407\":1,\"410\":2,\"452\":2}}],[\"f12\",{\"1\":{\"215\":1}}],[\"fs\",{\"1\":{\"209\":1,\"217\":8}}],[\"fn>\",{\"1\":{\"469\":1}}],[\"fn\",{\"1\":{\"159\":2,\"469\":1}}],[\"f\",{\"1\":{\"159\":4}}],[\"flag\",{\"1\":{\"159\":1}}],[\"floor\",{\"1\":{\"153\":1,\"154\":1}}],[\"flush\",{\"1\":{\"40\":3}}],[\"fetchdataandupdatestate\",{\"1\":{\"141\":4}}],[\"fetchdatafromserver\",{\"1\":{\"141\":3}}],[\"fetchdata\",{\"1\":{\"141\":2}}],[\"features\",{\"1\":{\"107\":1,\"109\":1}}],[\"fp\",{\"1\":{\"126\":1}}],[\"facebook\",{\"1\":{\"157\":1}}],[\"factorialtailrecursive\",{\"1\":{\"124\":4}}],[\"factorial\",{\"1\":{\"123\":3}}],[\"factory\",{\"1\":{\"80\":3}}],[\"fallbackcalled\",{\"1\":{\"78\":2}}],[\"fallback\",{\"1\":{\"78\":4}}],[\"false\",{\"1\":{\"40\":1,\"59\":3,\"86\":1,\"107\":1,\"109\":3,\"141\":1,\"198\":1,\"337\":1,\"338\":1,\"339\":1,\"340\":1,\"341\":2,\"343\":2,\"344\":2,\"346\":2,\"347\":3,\"351\":1,\"370\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"445\":1,\"464\":1,\"470\":1,\"471\":1,\"472\":11}}],[\"failed\",{\"1\":{\"73\":2,\"74\":1,\"75\":2,\"159\":1,\"426\":2}}],[\"fire\",{\"1\":{\"159\":1}}],[\"firstchild\",{\"1\":{\"39\":1}}],[\"filepath\",{\"1\":{\"217\":4}}],[\"filestat\",{\"1\":{\"217\":2}}],[\"files\",{\"1\":{\"217\":2,\"351\":2,\"445\":2}}],[\"fileloader\",{\"1\":{\"200\":3}}],[\"file\",{\"0\":{\"200\":1},\"1\":{\"159\":1,\"200\":2,\"217\":2,\"218\":2,\"279\":1,\"351\":2,\"445\":2}}],[\"filenames\",{\"1\":{\"159\":1}}],[\"filename\",{\"1\":{\"109\":1,\"159\":1,\"200\":3,\"218\":2,\"223\":4,\"227\":4,\"229\":4,\"233\":4,\"238\":2,\"258\":2,\"263\":3,\"270\":3,\"275\":3,\"277\":3,\"280\":1,\"285\":1,\"290\":3,\"297\":1,\"303\":1,\"309\":1,\"315\":1,\"321\":3,\"329\":3,\"330\":3,\"334\":3,\"337\":1,\"338\":2,\"340\":2,\"341\":2,\"343\":1,\"344\":2,\"346\":2,\"347\":2,\"362\":3,\"366\":3,\"370\":3,\"374\":4,\"383\":4,\"387\":4,\"393\":1,\"394\":1,\"396\":1,\"397\":4,\"398\":4,\"405\":1,\"406\":1,\"408\":1,\"409\":4,\"410\":4,\"414\":4,\"418\":8,\"426\":4,\"436\":4,\"440\":4,\"456\":3,\"460\":3,\"464\":3,\"468\":4}}],[\"filter\",{\"1\":{\"122\":3,\"216\":1,\"229\":1,\"233\":1,\"337\":1,\"338\":1,\"340\":3,\"341\":3,\"343\":1,\"344\":1,\"346\":2,\"347\":2,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"468\":1}}],[\"fixed\",{\"1\":{\"66\":1}}],[\"findperson\",{\"1\":{\"55\":1}}],[\"fid\",{\"1\":{\"49\":1}}],[\"fiber\",{\"1\":{\"29\":1}}],[\"fonts\",{\"1\":{\"289\":3}}],[\"foo\",{\"1\":{\"83\":2}}],[\"forbidden\",{\"1\":{\"80\":1}}],[\"format\",{\"1\":{\"90\":1}}],[\"form\",{\"1\":{\"62\":1}}],[\"for循环\",{\"1\":{\"51\":2}}],[\"for循环的写法\",{\"1\":{\"51\":1}}],[\"for\",{\"1\":{\"39\":1,\"51\":1,\"59\":1,\"66\":2,\"88\":3,\"90\":2,\"154\":1,\"155\":1,\"158\":1,\"159\":9,\"215\":1,\"351\":3,\"445\":3,\"469\":1,\"470\":1,\"471\":1,\"472\":1}}],[\"foreach\",{\"1\":{\"31\":1,\"33\":1,\"35\":1,\"40\":1,\"159\":2,\"216\":1,\"217\":1,\"218\":1,\"219\":1}}],[\"found\",{\"1\":{\"2\":1}}],[\"friendly\",{\"0\":{\"113\":1},\"1\":{\"113\":3}}],[\"frame\",{\"1\":{\"123\":1}}],[\"framework\",{\"1\":{\"25\":2}}],[\"frag\",{\"1\":{\"39\":3}}],[\"fromcharcode\",{\"1\":{\"90\":1}}],[\"from\",{\"1\":{\"12\":2,\"17\":2,\"25\":3,\"62\":4,\"67\":1,\"70\":1,\"77\":1,\"92\":2,\"117\":6,\"125\":2,\"158\":1,\"159\":2,\"187\":4,\"201\":2,\"249\":2,\"270\":2,\"275\":2,\"289\":3,\"298\":2,\"304\":2,\"310\":2,\"316\":3,\"337\":1,\"338\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"358\":2,\"394\":2,\"398\":1,\"406\":2,\"410\":1,\"422\":8,\"426\":2,\"452\":2,\"470\":1,\"471\":1}}],[\"freeze\",{\"1\":{\"12\":3}}],[\"网站查询\",{\"1\":{\"413\":1}}],[\"网站\",{\"1\":{\"25\":1}}],[\"网址\",{\"0\":{\"11\":1}}],[\"网络请求生命周期\",{\"1\":{\"1\":1}}],[\"确认重传机制\",{\"1\":{\"9\":1}}],[\"确保更新前后文件名不一样\",{\"1\":{\"416\":1}}],[\"确保状态更新的同步性和准确性\",{\"1\":{\"141\":1}}],[\"确保使用\",{\"1\":{\"141\":1}}],[\"确保在清理函数中取消异步操作或清理相关资源\",{\"1\":{\"141\":1}}],[\"确保网站在进行代码更改后仍然保持预期的外观和布局\",{\"1\":{\"136\":1}}],[\"确保它在渲染时保持高效\",{\"1\":{\"116\":1}}],[\"确保数据在传输过程中的机密性和完整性\",{\"1\":{\"2\":1}}],[\"确保客户端和服务器都能够正常通信\",{\"1\":{\"1\":1}}],[\"不正确\",{\"1\":{\"472\":2}}],[\"不用时不加载资源\",{\"1\":{\"442\":1}}],[\"不允许遗留任何\",{\"1\":{\"426\":1}}],[\"不变的代码使用缓存\",{\"1\":{\"442\":1}}],[\"不变\",{\"1\":{\"418\":1}}],[\"不生成错误\",{\"1\":{\"337\":1,\"338\":1,\"341\":1}}],[\"不需要清空输出结果\",{\"1\":{\"329\":1,\"362\":1,\"366\":1,\"370\":1,\"456\":1,\"460\":1,\"464\":1}}],[\"不需要指定输出目录\",{\"1\":{\"329\":1,\"362\":1,\"366\":1,\"370\":1,\"456\":1,\"460\":1,\"464\":1}}],[\"不需要检查\",{\"1\":{\"271\":1}}],[\"不需要创建文件\",{\"1\":{\"268\":1,\"273\":1}}],[\"不需要额外进行配置\",{\"1\":{\"236\":1}}],[\"不但会打包\",{\"1\":{\"251\":1}}],[\"不管是normal还是pitch\",{\"1\":{\"201\":1}}],[\"不是文件夹就是文件\",{\"1\":{\"217\":1}}],[\"不是我们直接读取css文件使用呢\",{\"1\":{\"201\":1}}],[\"不是error\",{\"1\":{\"86\":1}}],[\"不同设备和操作系统上运行\",{\"1\":{\"134\":1}}],[\"不同的引擎和环境可能有不同的行为\",{\"1\":{\"124\":1}}],[\"不同的修改render\",{\"1\":{\"39\":1}}],[\"不同的指令\",{\"1\":{\"39\":1}}],[\"不同的场景可能需要使用不同的缓存策略\",{\"1\":{\"7\":1}}],[\"不会加载新资源\",{\"1\":{\"416\":1}}],[\"不会导致程序退出\",{\"1\":{\"269\":1}}],[\"不会产生栈溢出\",{\"1\":{\"123\":1,\"124\":1}}],[\"不会真实操作dom\",{\"1\":{\"39\":1}}],[\"不可变集合等\",{\"1\":{\"119\":1}}],[\"不可变性集合\",{\"1\":{\"119\":1}}],[\"不可变性有助于避免副作用\",{\"1\":{\"119\":1}}],[\"不可变数据\",{\"1\":{\"119\":1}}],[\"不可以被销毁\",{\"1\":{\"66\":1}}],[\"不依赖于系统状态或外部变量\",{\"1\":{\"119\":1}}],[\"不要去写\",{\"1\":{\"78\":1}}],[\"不能使用\",{\"1\":{\"270\":1,\"398\":1,\"410\":1,\"422\":1}}],[\"不能在\",{\"1\":{\"266\":1}}],[\"不能编译其他语法\",{\"1\":{\"266\":1}}],[\"不能已经处理了吗\",{\"1\":{\"266\":1}}],[\"不能是\",{\"1\":{\"201\":1}}],[\"不能写\",{\"1\":{\"74\":1}}],[\"不能接收eth\",{\"1\":{\"66\":1}}],[\"不能payable\",{\"1\":{\"66\":1}}],[\"不能继承或被继承\",{\"1\":{\"66\":1}}],[\"不能存状态变量\",{\"1\":{\"66\":1}}],[\"不能直接比较字符串\",{\"1\":{\"56\":1}}],[\"不能访问\",{\"1\":{\"51\":1}}],[\"不能输出中文\",{\"1\":{\"47\":1}}],[\"不进行任何修改\",{\"1\":{\"49\":1}}],[\"不紧急的值可以用usedeferredvalue延迟渲染\",{\"1\":{\"18\":1}}],[\"不返回实体主体\",{\"1\":{\"2\":1}}],[\"降低网络带宽的使用\",{\"1\":{\"7\":1}}],[\"减小捆绑包大小\",{\"1\":{\"157\":1}}],[\"减轻服务器负载\",{\"1\":{\"7\":1}}],[\"减少图片体积\",{\"1\":{\"385\":1,\"438\":1}}],[\"减少代码体积\",{\"0\":{\"375\":1,\"428\":1},\"1\":{\"348\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"399\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"442\":1}}],[\"减少node\",{\"1\":{\"341\":1,\"347\":1}}],[\"减少请求数量\",{\"1\":{\"285\":1}}],[\"减少栈空间的使用\",{\"1\":{\"124\":1}}],[\"减少网络带宽使用的技术\",{\"1\":{\"5\":1}}],[\"减少了每次请求的连接建立和关闭的开销\",{\"1\":{\"2\":1}}],[\"包的依赖管理配置文件\",{\"1\":{\"328\":1}}],[\"包的\",{\"1\":{\"251\":1}}],[\"包括但不限于\",{\"1\":{\"209\":1}}],[\"包括加载时间\",{\"1\":{\"134\":1}}],[\"包括导航\",{\"1\":{\"134\":1}}],[\"包括初始数据\",{\"1\":{\"101\":1}}],[\"包括客户端和代理服务器\",{\"1\":{\"7\":1}}],[\"包含已从主\",{\"1\":{\"394\":2,\"396\":1,\"406\":2,\"408\":1}}],[\"包含\",{\"1\":{\"365\":1,\"459\":1}}],[\"包含行\",{\"1\":{\"353\":1,\"447\":1}}],[\"包含请求或响应的实际数据\",{\"1\":{\"2\":1}}],[\"包含一系列键值对\",{\"1\":{\"2\":1}}],[\"包含方法\",{\"1\":{\"2\":1}}],[\"包含有关请求或响应的信息\",{\"1\":{\"2\":1}}],[\"包含元信息\",{\"1\":{\"1\":1}}],[\"指示\",{\"1\":{\"256\":2}}],[\"指示客户端必须在使用过期资源之前重新验证\",{\"1\":{\"6\":1}}],[\"指定模式\",{\"1\":{\"251\":1}}],[\"指定\",{\"1\":{\"251\":1}}],[\"指定检查文件的根目录\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"263\":1,\"270\":1,\"275\":1,\"321\":1,\"329\":1,\"330\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"指定了资源被认为是新鲜的最大时间\",{\"1\":{\"6\":1}}],[\"指定资源的过期时间\",{\"1\":{\"6\":1}}],[\"秒\",{\"1\":{\"6\":1}}],[\"afteremit\",{\"1\":{\"219\":1}}],[\"author\",{\"1\":{\"198\":3,\"215\":1,\"216\":2,\"339\":1,\"340\":1,\"345\":1}}],[\"autoimport\",{\"1\":{\"347\":2}}],[\"auto\",{\"1\":{\"200\":1,\"347\":1}}],[\"automatic\",{\"1\":{\"159\":2}}],[\"autoprefixer\",{\"1\":{\"25\":2}}],[\"autodocs\",{\"1\":{\"25\":2}}],[\"avoid\",{\"1\":{\"159\":1}}],[\"await\",{\"1\":{\"141\":5}}],[\"attention\",{\"1\":{\"351\":1,\"445\":1}}],[\"attributes\",{\"1\":{\"39\":1,\"219\":1}}],[\"attr\",{\"1\":{\"39\":4}}],[\"atomic\",{\"0\":{\"104\":1,\"140\":1}}],[\"api\",{\"0\":{\"196\":1},\"1\":{\"66\":1,\"121\":1,\"134\":1,\"196\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"351\":6,\"413\":1,\"421\":1,\"445\":6}}],[\"app的规则\",{\"1\":{\"269\":1}}],[\"apply\",{\"1\":{\"213\":3,\"214\":3,\"216\":1,\"217\":1,\"218\":1,\"219\":1}}],[\"application\",{\"1\":{\"83\":1,\"120\":1,\"425\":1}}],[\"approval\",{\"1\":{\"92\":1}}],[\"approve是一个规则\",{\"1\":{\"76\":1}}],[\"approve\",{\"0\":{\"76\":1},\"1\":{\"76\":3,\"92\":1}}],[\"append\",{\"1\":{\"39\":1}}],[\"appendchild\",{\"1\":{\"37\":1,\"159\":1,\"201\":2}}],[\"app\",{\"1\":{\"17\":1,\"36\":1,\"37\":2,\"117\":1,\"269\":2,\"339\":6,\"340\":2,\"393\":5,\"394\":4,\"395\":2,\"396\":2,\"405\":5,\"406\":4,\"407\":2,\"408\":2,\"424\":1,\"425\":2}}],[\"aa\",{\"1\":{\"59\":5,\"60\":1,\"67\":2}}],[\"am\",{\"1\":{\"125\":2}}],[\"amount\",{\"1\":{\"57\":5,\"61\":3,\"62\":4,\"76\":2,\"79\":7,\"86\":2,\"90\":7}}],[\"amazingang\",{\"1\":{\"44\":1}}],[\"adminuser\",{\"1\":{\"58\":7}}],[\"admin\",{\"1\":{\"57\":4}}],[\"additionaldata\",{\"1\":{\"347\":1}}],[\"additionalproperties\",{\"1\":{\"198\":1,\"199\":1}}],[\"additional\",{\"1\":{\"159\":1}}],[\"adduser\",{\"1\":{\"145\":1}}],[\"add2\",{\"1\":{\"120\":3}}],[\"addowners\",{\"1\":{\"88\":1}}],[\"addon\",{\"1\":{\"25\":10}}],[\"addons\",{\"1\":{\"25\":2}}],[\"add\",{\"1\":{\"87\":1,\"107\":1,\"111\":1,\"113\":1,\"115\":1,\"120\":3,\"129\":1,\"130\":1,\"131\":1,\"132\":1,\"133\":1,\"135\":1,\"140\":1,\"159\":1,\"289\":1,\"316\":1}}],[\"addassembly\",{\"1\":{\"87\":1}}],[\"addr\",{\"1\":{\"54\":4,\"73\":5,\"74\":2,\"75\":4,\"83\":5,\"84\":2}}],[\"address\",{\"1\":{\"48\":1,\"50\":2,\"54\":1,\"57\":1,\"61\":3,\"62\":5,\"67\":1,\"72\":5,\"73\":2,\"74\":1,\"75\":3,\"76\":5,\"77\":2,\"78\":2,\"79\":4,\"80\":13,\"83\":3,\"84\":1,\"85\":4,\"88\":4,\"90\":3,\"92\":11,\"472\":2}}],[\"addeventlistener\",{\"1\":{\"39\":1,\"426\":1}}],[\"addsub\",{\"1\":{\"33\":1,\"35\":1}}],[\"alphabetical\",{\"1\":{\"338\":1,\"340\":1,\"341\":1,\"344\":1,\"346\":1,\"347\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"440\":1}}],[\"alterassettaggroups\",{\"1\":{\"219\":1}}],[\"already\",{\"1\":{\"159\":1}}],[\"alias\",{\"1\":{\"109\":1,\"347\":1}}],[\"alive\",{\"1\":{\"2\":1}}],[\"alert\",{\"1\":{\"90\":1,\"395\":1,\"407\":1}}],[\"allpairs\",{\"1\":{\"80\":2}}],[\"all\",{\"1\":{\"79\":1,\"159\":3,\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"394\":1,\"396\":1,\"397\":1,\"398\":1,\"406\":1,\"408\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"470\":1}}],[\"allow\",{\"1\":{\"159\":1}}],[\"allowance发生变化\",{\"1\":{\"92\":1}}],[\"allowance\",{\"1\":{\"76\":2,\"92\":1}}],[\"allowed\",{\"1\":{\"56\":1}}],[\"absolutify\",{\"1\":{\"196\":2}}],[\"abis\",{\"1\":{\"109\":2}}],[\"abiencode\",{\"1\":{\"83\":1}}],[\"abi解码\",{\"1\":{\"83\":1}}],[\"abi编码\",{\"1\":{\"83\":1}}],[\"abi是一种json格式的接口描述语言\",{\"1\":{\"83\":1}}],[\"abi\",{\"0\":{\"83\":1},\"1\":{\"56\":4,\"59\":1,\"73\":6,\"74\":2,\"75\":2,\"83\":9,\"84\":1,\"85\":1,\"90\":1}}],[\"abc123\",{\"1\":{\"6\":1}}],[\"are\",{\"1\":{\"351\":2,\"445\":2}}],[\"arrow\",{\"1\":{\"264\":1,\"289\":1}}],[\"arr\",{\"1\":{\"90\":4,\"153\":7,\"154\":8,\"155\":5,\"426\":2}}],[\"array\",{\"1\":{\"53\":1,\"83\":5,\"88\":1,\"122\":3,\"199\":1,\"269\":1}}],[\"args\",{\"1\":{\"249\":2,\"394\":2,\"406\":2,\"469\":2}}],[\"argv\",{\"1\":{\"109\":3}}],[\"argtypesregex\",{\"1\":{\"25\":1}}],[\"arg\",{\"1\":{\"12\":1}}],[\"ashbin\",{\"1\":{\"264\":1,\"289\":1}}],[\"asyncserieswaterfallhook\",{\"1\":{\"207\":2}}],[\"asyncseriesloophook\",{\"1\":{\"207\":2}}],[\"asyncseriesbailhook\",{\"1\":{\"207\":2}}],[\"asyncserieshook\",{\"1\":{\"207\":2,\"214\":1}}],[\"asyncparallelbailhook\",{\"1\":{\"207\":2}}],[\"asyncparallelhook\",{\"1\":{\"207\":2,\"214\":1}}],[\"async\",{\"1\":{\"141\":5,\"159\":1,\"193\":1,\"196\":2,\"199\":1,\"420\":1}}],[\"ascii\",{\"1\":{\"66\":3,\"90\":1}}],[\"assetmodulefilename\",{\"1\":{\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"398\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1}}],[\"assetname\",{\"1\":{\"219\":3}}],[\"assetpath\",{\"1\":{\"216\":3}}],[\"assetpaths\",{\"1\":{\"216\":2}}],[\"asset\",{\"1\":{\"109\":1,\"216\":2,\"223\":2,\"227\":2,\"229\":2,\"233\":2,\"238\":1,\"263\":2,\"270\":2,\"275\":2,\"277\":2,\"280\":1,\"285\":1,\"290\":6,\"321\":2,\"329\":2,\"330\":2,\"334\":2,\"337\":2,\"338\":2,\"340\":2,\"341\":2,\"343\":2,\"344\":2,\"346\":2,\"347\":2,\"362\":2,\"366\":2,\"370\":2,\"374\":2,\"383\":2,\"387\":2,\"397\":2,\"398\":2,\"409\":2,\"410\":2,\"414\":2,\"418\":4,\"426\":2,\"436\":2,\"440\":2,\"456\":2,\"460\":2,\"464\":2,\"468\":2}}],[\"assets包含所有即将输出的资源\",{\"1\":{\"216\":1}}],[\"assets\",{\"1\":{\"25\":1,\"210\":1,\"216\":4,\"218\":4,\"219\":11}}],[\"assembly\",{\"0\":{\"87\":1},\"1\":{\"87\":1}}],[\"assert失败的错误类型是panic\",{\"1\":{\"86\":1}}],[\"assert\",{\"1\":{\"56\":2,\"86\":1}}],[\"as\",{\"1\":{\"48\":1,\"88\":1,\"159\":1,\"347\":1,\"414\":1,\"418\":2,\"426\":1,\"470\":1,\"472\":1}}],[\"ast语法树在线工具\",{\"1\":{\"29\":1}}],[\"ant\",{\"1\":{\"341\":1}}],[\"antd的自定义主题\",{\"1\":{\"341\":1}}],[\"antd\",{\"1\":{\"339\":1,\"341\":3}}],[\"analyze\",{\"1\":{\"218\":2}}],[\"analyzewebpackplugin\",{\"0\":{\"218\":1},\"1\":{\"218\":3}}],[\"and\",{\"1\":{\"159\":3,\"470\":1}}],[\"an\",{\"1\":{\"159\":3,\"472\":1}}],[\"animaleat\",{\"1\":{\"60\":2}}],[\"angular等\",{\"1\":{\"28\":1}}],[\"any>\",{\"1\":{\"469\":1}}],[\"any\",{\"1\":{\"12\":1,\"469\":2}}],[\"a\",{\"1\":{\"25\":1,\"31\":1,\"36\":1,\"37\":1,\"39\":5,\"48\":2,\"52\":6,\"59\":2,\"66\":3,\"75\":1,\"86\":6,\"88\":2,\"117\":3,\"158\":9,\"159\":12,\"351\":2,\"445\":2,\"469\":1,\"470\":1,\"471\":1,\"472\":2}}],[\"ac\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"280\":1,\"285\":1,\"290\":1,\"309\":1,\"315\":1,\"321\":1,\"329\":1,\"330\":1,\"334\":1,\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"acc\",{\"1\":{\"122\":2,\"123\":3,\"124\":3}}],[\"account\",{\"1\":{\"92\":1}}],[\"accept\",{\"1\":{\"7\":2,\"358\":2,\"398\":1,\"410\":1,\"452\":2}}],[\"academy\",{\"1\":{\"44\":1}}],[\"actions\",{\"1\":{\"25\":1}}],[\"ages\",{\"1\":{\"53\":4}}],[\"agent\",{\"1\":{\"7\":2}}],[\"age\",{\"1\":{\"6\":1,\"49\":3,\"55\":5,\"56\":4,\"58\":10,\"472\":3}}],[\"age=3600\",{\"1\":{\"6\":1,\"7\":1}}],[\"mypick<t\",{\"1\":{\"471\":1}}],[\"mypick<todo\",{\"1\":{\"471\":1}}],[\"myomit<t\",{\"1\":{\"470\":1}}],[\"myomit<todo\",{\"1\":{\"470\":1}}],[\"myreturntype<t\",{\"1\":{\"469\":1}}],[\"myreturntype<typeof\",{\"1\":{\"469\":1}}],[\"md\",{\"1\":{\"218\":2}}],[\"mdx\",{\"1\":{\"25\":2}}],[\"mozjpeg\",{\"1\":{\"387\":1,\"440\":1}}],[\"moremodules\",{\"1\":{\"159\":5}}],[\"modifyvars\",{\"1\":{\"341\":1}}],[\"modifier修饰符\",{\"1\":{\"57\":1}}],[\"modifier\",{\"1\":{\"57\":2}}],[\"modifiers\",{\"1\":{\"51\":1}}],[\"modified\",{\"1\":{\"6\":7}}],[\"mode=xxx\",{\"1\":{\"251\":1}}],[\"mode=production\",{\"1\":{\"251\":1}}],[\"mode=development\",{\"1\":{\"251\":1}}],[\"modeflag\",{\"1\":{\"109\":3}}],[\"mode\",{\"1\":{\"109\":4,\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"256\":1,\"257\":1,\"258\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"280\":1,\"285\":1,\"290\":1,\"297\":1,\"303\":1,\"309\":1,\"315\":1,\"321\":1,\"325\":1,\"329\":1,\"330\":1,\"334\":1,\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"351\":3,\"353\":2,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"393\":1,\"394\":1,\"396\":1,\"397\":1,\"398\":1,\"405\":1,\"406\":1,\"408\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"445\":3,\"447\":2,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"model=\",{\"1\":{\"36\":1,\"37\":1,\"39\":5}}],[\"model\",{\"1\":{\"28\":2,\"39\":1}}],[\"moduleid\",{\"1\":{\"158\":4,\"159\":9}}],[\"modules的chunk体积\",{\"1\":{\"341\":1,\"347\":1}}],[\"modules的包安全性问题如何解决\",{\"0\":{\"176\":1}}],[\"modules中比较大的模块单独打包\",{\"1\":{\"341\":1,\"347\":1}}],[\"modules打包在一起\",{\"1\":{\"341\":1,\"347\":1}}],[\"modules代码不编译\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"263\":1,\"275\":1,\"321\":1,\"329\":1,\"330\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"modules\",{\"1\":{\"67\":1,\"158\":2,\"159\":7,\"187\":4,\"201\":3,\"210\":2,\"215\":2,\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"263\":1,\"275\":1,\"321\":1,\"328\":1,\"329\":1,\"330\":1,\"337\":2,\"338\":2,\"340\":2,\"341\":5,\"343\":3,\"344\":3,\"346\":3,\"347\":6,\"351\":19,\"362\":1,\"364\":2,\"366\":2,\"370\":3,\"374\":3,\"383\":3,\"387\":8,\"394\":2,\"396\":1,\"397\":3,\"398\":3,\"406\":2,\"408\":1,\"409\":3,\"410\":3,\"414\":3,\"418\":6,\"426\":3,\"436\":3,\"440\":8,\"445\":19,\"456\":1,\"458\":2,\"460\":2,\"464\":3,\"468\":3}}],[\"module\",{\"1\":{\"25\":2,\"106\":1,\"107\":1,\"109\":3,\"158\":12,\"159\":10,\"187\":2,\"189\":1,\"192\":2,\"193\":1,\"194\":2,\"195\":2,\"197\":1,\"198\":1,\"199\":1,\"200\":1,\"201\":1,\"213\":1,\"214\":1,\"216\":1,\"217\":1,\"218\":1,\"219\":1,\"223\":2,\"227\":2,\"229\":2,\"233\":2,\"238\":2,\"246\":2,\"257\":2,\"258\":2,\"263\":2,\"269\":3,\"270\":4,\"274\":1,\"275\":3,\"277\":2,\"280\":2,\"285\":2,\"290\":2,\"297\":2,\"303\":2,\"309\":2,\"315\":2,\"321\":2,\"325\":2,\"329\":2,\"330\":2,\"334\":2,\"337\":3,\"338\":2,\"339\":2,\"340\":3,\"341\":3,\"343\":3,\"344\":2,\"345\":2,\"346\":3,\"347\":3,\"351\":11,\"353\":4,\"358\":4,\"362\":3,\"366\":3,\"370\":3,\"374\":2,\"378\":1,\"383\":2,\"387\":2,\"393\":1,\"394\":1,\"396\":1,\"397\":2,\"398\":6,\"405\":1,\"406\":1,\"408\":1,\"409\":2,\"410\":6,\"414\":2,\"418\":4,\"422\":4,\"426\":2,\"431\":1,\"436\":2,\"440\":2,\"445\":11,\"447\":4,\"452\":4,\"456\":3,\"460\":3,\"464\":3,\"468\":2}}],[\"m\",{\"1\":{\"159\":2}}],[\"multihook\",{\"1\":{\"207\":2}}],[\"multiplyby\",{\"1\":{\"122\":2}}],[\"mui官网\",{\"1\":{\"110\":1}}],[\"mui\",{\"0\":{\"110\":1},\"1\":{\"111\":1,\"117\":1}}],[\"must\",{\"1\":{\"6\":2,\"61\":1,\"90\":1,\"159\":1}}],[\"mstore\",{\"1\":{\"87\":1}}],[\"mselector\",{\"1\":{\"85\":1}}],[\"msg2\",{\"1\":{\"50\":2}}],[\"msg\",{\"1\":{\"47\":2,\"48\":1,\"49\":2,\"50\":7,\"54\":4,\"56\":1,\"57\":2,\"59\":1,\"61\":4,\"69\":1,\"75\":2,\"76\":1,\"77\":3,\"78\":6,\"79\":1,\"80\":2,\"82\":1,\"85\":1,\"90\":9}}],[\"missing\",{\"1\":{\"159\":1}}],[\"middle\",{\"1\":{\"153\":3}}],[\"microsoft\",{\"1\":{\"134\":1}}],[\"minchunks\",{\"1\":{\"394\":3,\"396\":2,\"406\":3,\"408\":2}}],[\"minremainingsize\",{\"1\":{\"394\":1,\"396\":1,\"406\":1,\"408\":1}}],[\"minsize\",{\"1\":{\"394\":2,\"396\":1,\"406\":2,\"408\":1}}],[\"minimize\",{\"1\":{\"340\":1,\"341\":1,\"346\":1,\"347\":1,\"374\":1,\"468\":1}}],[\"minimized\",{\"1\":{\"337\":1,\"338\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1}}],[\"minimizer里面\",{\"1\":{\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"468\":1}}],[\"minimizer\",{\"0\":{\"384\":1,\"437\":1},\"1\":{\"232\":1,\"233\":1,\"338\":4,\"339\":2,\"340\":6,\"341\":4,\"344\":4,\"345\":2,\"346\":4,\"347\":4,\"374\":2,\"383\":2,\"386\":1,\"387\":5,\"397\":4,\"398\":4,\"409\":4,\"410\":4,\"414\":4,\"418\":8,\"426\":4,\"436\":2,\"439\":1,\"440\":5,\"442\":1,\"468\":2}}],[\"minicssextractplugin\",{\"1\":{\"109\":3,\"223\":6,\"227\":6,\"229\":3,\"233\":3,\"338\":3,\"340\":3,\"341\":3,\"344\":3,\"346\":3,\"347\":3,\"374\":3,\"383\":3,\"387\":3,\"397\":3,\"398\":3,\"409\":3,\"410\":3,\"414\":3,\"418\":6,\"426\":3,\"436\":3,\"440\":3,\"468\":3}}],[\"mini\",{\"1\":{\"109\":2,\"222\":1,\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"338\":1,\"339\":1,\"340\":2,\"341\":1,\"344\":1,\"345\":1,\"346\":1,\"347\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"468\":1}}],[\"mintselector\",{\"1\":{\"85\":1}}],[\"mint\",{\"1\":{\"85\":3}}],[\"mit\",{\"1\":{\"66\":1,\"73\":1,\"74\":1,\"75\":1,\"79\":1,\"80\":1,\"82\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"92\":1}}],[\"migrate\",{\"1\":{\"42\":1}}],[\"mvvm\",{\"0\":{\"28\":1,\"37\":1},\"1\":{\"28\":5}}],[\"media\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"290\":1,\"321\":1,\"329\":1,\"330\":1,\"334\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":2,\"409\":1,\"410\":2,\"414\":2,\"418\":4,\"426\":2,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"meta\",{\"1\":{\"190\":1,\"192\":3,\"193\":2,\"196\":1}}],[\"methods\",{\"1\":{\"2\":1}}],[\"means\",{\"1\":{\"159\":2}}],[\"mem\",{\"1\":{\"159\":1}}],[\"memory修饰的临时变量相当于右值的一个拷贝\",{\"1\":{\"58\":1}}],[\"memory\",{\"1\":{\"53\":1,\"54\":2,\"55\":4,\"56\":2,\"58\":4,\"59\":4,\"65\":3,\"66\":7,\"73\":3,\"74\":2,\"75\":2,\"83\":4,\"84\":1,\"85\":2,\"86\":3,\"88\":1}}],[\"mergesort\",{\"1\":{\"153\":3}}],[\"mergeconfig\",{\"1\":{\"109\":2}}],[\"merge\",{\"1\":{\"109\":3,\"153\":2}}],[\"message\",{\"1\":{\"86\":1,\"122\":2,\"159\":1}}],[\"me<\",{\"1\":{\"17\":1}}],[\"made\",{\"1\":{\"351\":1,\"445\":1}}],[\"manifest\",{\"1\":{\"159\":1}}],[\"manually\",{\"1\":{\"159\":1}}],[\"make\",{\"1\":{\"159\":1,\"214\":7}}],[\"majestic\",{\"0\":{\"133\":1},\"1\":{\"133\":2}}],[\"math\",{\"1\":{\"153\":1,\"154\":1,\"289\":1,\"316\":1,\"394\":3,\"395\":1,\"398\":4,\"406\":3,\"407\":1,\"410\":4,\"418\":10}}],[\"material\",{\"1\":{\"111\":1,\"117\":1}}],[\"matching\",{\"1\":{\"119\":1}}],[\"matchers\",{\"1\":{\"25\":1}}],[\"match\",{\"1\":{\"6\":2,\"219\":2}}],[\"main\",{\"1\":{\"109\":1,\"159\":2,\"223\":3,\"227\":3,\"229\":3,\"233\":3,\"238\":2,\"239\":1,\"240\":1,\"248\":1,\"249\":1,\"251\":5,\"258\":2,\"263\":2,\"270\":3,\"275\":4,\"277\":2,\"280\":2,\"284\":1,\"285\":2,\"289\":2,\"290\":2,\"297\":2,\"298\":2,\"303\":2,\"304\":2,\"309\":2,\"310\":2,\"315\":2,\"316\":2,\"321\":2,\"329\":2,\"330\":2,\"334\":2,\"337\":1,\"338\":1,\"339\":1,\"340\":2,\"341\":1,\"343\":1,\"344\":1,\"345\":2,\"346\":1,\"347\":1,\"358\":1,\"362\":2,\"366\":2,\"370\":2,\"374\":3,\"383\":3,\"387\":3,\"393\":6,\"394\":5,\"395\":2,\"396\":3,\"397\":3,\"398\":2,\"405\":6,\"406\":5,\"407\":2,\"408\":3,\"409\":3,\"410\":2,\"414\":1,\"416\":1,\"418\":10,\"422\":2,\"426\":2,\"436\":3,\"440\":3,\"452\":1,\"456\":2,\"460\":2,\"464\":2,\"468\":3}}],[\"maybe\",{\"1\":{\"351\":1,\"445\":1}}],[\"may\",{\"1\":{\"92\":1}}],[\"master\",{\"1\":{\"67\":1,\"207\":1}}],[\"map不中断\",{\"1\":{\"192\":1}}],[\"map\",{\"1\":{\"54\":1,\"122\":3,\"190\":1,\"192\":3,\"193\":2,\"201\":1,\"219\":1,\"337\":1,\"338\":1,\"340\":2,\"341\":2,\"343\":1,\"344\":1,\"346\":2,\"347\":2,\"352\":2,\"353\":4,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"442\":1,\"446\":2,\"447\":4,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"mapping\",{\"0\":{\"54\":1},\"1\":{\"54\":1,\"62\":1,\"76\":3,\"77\":1,\"80\":2,\"90\":1}}],[\"maxinitialrequests\",{\"1\":{\"394\":2,\"396\":2,\"406\":2,\"408\":2}}],[\"maxasyncrequests\",{\"1\":{\"394\":2,\"396\":2,\"406\":2,\"408\":2}}],[\"maxsize\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"285\":1,\"290\":1,\"321\":1,\"329\":1,\"330\":1,\"334\":1,\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"max\",{\"1\":{\"6\":2,\"7\":1}}],[\"globoptions\",{\"1\":{\"337\":1,\"338\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1}}],[\"globalthis\",{\"1\":{\"159\":2}}],[\"global\",{\"1\":{\"159\":1}}],[\"gifsicle\",{\"1\":{\"338\":1,\"339\":1,\"340\":2,\"341\":1,\"344\":1,\"345\":1,\"346\":1,\"347\":1,\"387\":3,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"440\":3}}],[\"gif\",{\"1\":{\"281\":1,\"282\":1,\"387\":1,\"440\":1}}],[\"github\",{\"0\":{\"137\":1},\"1\":{\"39\":1,\"44\":3,\"66\":1,\"67\":1,\"126\":1,\"136\":1,\"207\":1,\"293\":1}}],[\"guide\",{\"1\":{\"269\":1}}],[\"gulp\",{\"1\":{\"244\":1}}],[\"generic\",{\"1\":{\"469\":1,\"470\":1,\"471\":1,\"472\":1}}],[\"generatesw\",{\"1\":{\"426\":1}}],[\"generator\",{\"1\":{\"223\":2,\"227\":2,\"229\":2,\"233\":2,\"238\":1,\"263\":2,\"270\":2,\"275\":2,\"277\":2,\"290\":2,\"321\":2,\"329\":2,\"330\":2,\"334\":2,\"362\":2,\"366\":2,\"370\":2,\"374\":2,\"383\":2,\"387\":2,\"397\":2,\"398\":2,\"409\":2,\"410\":2,\"414\":2,\"418\":4,\"426\":2,\"436\":2,\"440\":2,\"456\":2,\"460\":2,\"464\":2,\"468\":2}}],[\"getreadonlykeys<todo>\",{\"1\":{\"472\":1}}],[\"getreadonlykeys<t>\",{\"1\":{\"472\":3}}],[\"getrandom\",{\"1\":{\"59\":1}}],[\"getstyleloaders\",{\"1\":{\"229\":5,\"233\":5,\"337\":5,\"338\":5,\"340\":5,\"341\":5,\"343\":5,\"344\":5,\"346\":5,\"347\":5,\"374\":5,\"383\":5,\"387\":5,\"397\":5,\"398\":5,\"409\":5,\"410\":5,\"414\":5,\"418\":10,\"426\":5,\"436\":5,\"440\":5,\"468\":5}}],[\"getsum2\",{\"1\":{\"51\":1}}],[\"getsum\",{\"1\":{\"51\":1}}],[\"getinlinetag\",{\"1\":{\"219\":3}}],[\"gethooks\",{\"1\":{\"219\":1}}],[\"getoptions\",{\"1\":{\"196\":2,\"198\":1,\"199\":1}}],[\"getattribute\",{\"1\":{\"159\":2}}],[\"getelementsbytagname\",{\"1\":{\"159\":2}}],[\"getelementbyid\",{\"1\":{\"15\":1,\"37\":2,\"117\":1,\"395\":1,\"398\":1,\"407\":1,\"410\":1}}],[\"getter\",{\"1\":{\"159\":1}}],[\"getters\",{\"1\":{\"159\":1}}],[\"getpair\",{\"1\":{\"80\":3}}],[\"getx\",{\"1\":{\"72\":2,\"73\":1}}],[\"getbalance\",{\"1\":{\"61\":1,\"79\":1,\"90\":1}}],[\"getuser\",{\"1\":{\"55\":1,\"58\":1}}],[\"getnames\",{\"1\":{\"54\":1}}],[\"getlength\",{\"1\":{\"53\":1}}],[\"getdoubleage\",{\"1\":{\"49\":1}}],[\"get触发\",{\"1\":{\"34\":1}}],[\"get\",{\"1\":{\"2\":1,\"31\":2,\"33\":1,\"34\":2,\"37\":1,\"158\":1,\"159\":3}}],[\"g|gif|svg\",{\"1\":{\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"440\":1}}],[\"g|gif|webp\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"280\":1,\"285\":1,\"290\":1,\"321\":1,\"329\":1,\"330\":1,\"334\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"436\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"g|gif\",{\"1\":{\"200\":1}}],[\"g\",{\"1\":{\"145\":1,\"159\":4,\"197\":1,\"426\":1}}],[\"gcanti\",{\"1\":{\"126\":1}}],[\"grunt\",{\"1\":{\"244\":1}}],[\"grabbed\",{\"1\":{\"90\":1}}],[\"grabredpacket\",{\"1\":{\"90\":1}}],[\"greater\",{\"1\":{\"61\":1,\"90\":1}}],[\"gasleft\",{\"1\":{\"79\":1}}],[\"gaslimit\",{\"1\":{\"50\":1}}],[\"gas数额\",{\"1\":{\"73\":1}}],[\"gas\",{\"1\":{\"50\":1,\"73\":3,\"79\":4}}],[\"gpl\",{\"1\":{\"46\":1,\"47\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"61\":1,\"62\":1,\"65\":1,\"66\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"76\":1,\"77\":1,\"78\":1,\"90\":1}}],[\"gmt\",{\"1\":{\"6\":2}}],[\"02f83c75c797\",{\"1\":{\"215\":1}}],[\"0123456789abcdef\",{\"1\":{\"66\":1}}],[\"0x746573742064617461\",{\"1\":{\"90\":1}}],[\"0x7a58c0be72be218b41c608b7fe7c5bb630736c71\",{\"1\":{\"83\":1}}],[\"0x\",{\"1\":{\"90\":2}}],[\"0x20\",{\"1\":{\"87\":1}}],[\"0x2c44b726adf1963ca47af88b284c06f30380fc78\",{\"1\":{\"85\":2}}],[\"0x6a627842\",{\"1\":{\"85\":2}}],[\"0xaa\",{\"1\":{\"83\":1}}],[\"0xd6abfc7b000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000043078414100000000000000000000000000000000000000000000000000000000\",{\"1\":{\"83\":2}}],[\"0xdac17f958d2ee523a2206206994597c13d831ec7\",{\"1\":{\"76\":1}}],[\"0xf\",{\"1\":{\"66\":1}}],[\"0xfa913621\",{\"1\":{\"49\":1}}],[\"0x00\",{\"1\":{\"66\":1,\"87\":2}}],[\"0x1a\",{\"1\":{\"48\":1}}],[\"0\",{\"1\":{\"17\":1,\"34\":1,\"39\":1,\"40\":1,\"46\":3,\"47\":3,\"48\":1,\"49\":3,\"50\":3,\"51\":5,\"52\":3,\"53\":5,\"54\":3,\"55\":3,\"56\":4,\"57\":3,\"58\":3,\"59\":6,\"60\":3,\"61\":5,\"62\":5,\"65\":3,\"66\":14,\"69\":3,\"70\":3,\"71\":3,\"72\":3,\"73\":1,\"74\":1,\"76\":3,\"77\":3,\"78\":3,\"86\":4,\"88\":2,\"90\":12,\"92\":4,\"122\":2,\"153\":3,\"154\":1,\"158\":2,\"159\":11,\"215\":8,\"239\":1,\"249\":1,\"264\":1,\"269\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1,\"339\":25,\"340\":24,\"345\":24,\"351\":4,\"394\":3,\"395\":1,\"396\":1,\"406\":3,\"407\":1,\"408\":1,\"426\":6,\"445\":4}}],[\"00\",{\"1\":{\"6\":2}}],[\"07\",{\"1\":{\"6\":2}}],[\"omit<t\",{\"1\":{\"470\":1}}],[\"os\",{\"1\":{\"374\":6,\"383\":3,\"387\":3,\"397\":3,\"398\":3,\"409\":3,\"410\":3,\"414\":3,\"418\":6,\"426\":3,\"436\":3,\"440\":3,\"468\":6}}],[\"osi七层网络模型\",{\"0\":{\"9\":1}}],[\"own\",{\"1\":{\"159\":1}}],[\"owners\",{\"1\":{\"88\":2}}],[\"owner\",{\"1\":{\"48\":1,\"54\":1,\"61\":4,\"92\":2}}],[\"o\",{\"1\":{\"158\":3,\"159\":7}}],[\"outer\",{\"1\":{\"125\":2}}],[\"outervariable\",{\"1\":{\"125\":4}}],[\"outerfunction\",{\"1\":{\"125\":5}}],[\"outputpath\",{\"1\":{\"217\":2}}],[\"outputfilesystem\",{\"1\":{\"209\":1,\"217\":2}}],[\"output\",{\"1\":{\"109\":1,\"159\":1,\"209\":1,\"217\":1,\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"256\":1,\"257\":1,\"258\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"280\":1,\"285\":1,\"290\":1,\"297\":1,\"303\":1,\"309\":1,\"315\":1,\"321\":1,\"325\":1,\"329\":1,\"330\":1,\"334\":1,\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"351\":3,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"393\":1,\"394\":1,\"396\":1,\"397\":1,\"398\":1,\"405\":1,\"406\":1,\"408\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"445\":3,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"open\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"321\":1,\"329\":1,\"330\":1,\"337\":1,\"340\":1,\"341\":1,\"343\":1,\"346\":1,\"347\":1,\"358\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"452\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"openzeppelin\",{\"1\":{\"67\":2,\"76\":1,\"91\":2,\"92\":1}}],[\"optipng\",{\"1\":{\"338\":1,\"339\":1,\"340\":2,\"341\":1,\"344\":1,\"345\":1,\"346\":1,\"347\":1,\"387\":7,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"440\":7}}],[\"optimize\",{\"1\":{\"210\":1}}],[\"optimizationlevel\",{\"1\":{\"338\":1,\"340\":1,\"341\":1,\"344\":1,\"346\":1,\"347\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"440\":1}}],[\"optimization\",{\"1\":{\"123\":1,\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"374\":1,\"383\":1,\"387\":1,\"394\":1,\"396\":1,\"397\":1,\"398\":1,\"406\":1,\"408\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"468\":1}}],[\"options\",{\"1\":{\"25\":3,\"37\":3,\"107\":1,\"109\":1,\"196\":1,\"198\":2,\"199\":2,\"209\":1,\"216\":4,\"217\":1,\"227\":4,\"229\":1,\"233\":1,\"337\":2,\"338\":3,\"340\":3,\"341\":4,\"343\":4,\"344\":5,\"346\":5,\"347\":6,\"370\":1,\"374\":3,\"383\":3,\"387\":4,\"397\":4,\"398\":4,\"409\":4,\"410\":4,\"414\":4,\"418\":8,\"426\":4,\"436\":3,\"440\":4,\"464\":1,\"468\":3}}],[\"or\",{\"1\":{\"159\":1,\"351\":1,\"445\":1}}],[\"order\",{\"1\":{\"119\":1}}],[\"oraclize\",{\"1\":{\"66\":1}}],[\"oraclizeapi\",{\"1\":{\"66\":2}}],[\"org\",{\"1\":{\"23\":1,\"25\":1,\"26\":1,\"93\":1,\"106\":1,\"215\":1,\"351\":2,\"445\":2}}],[\"other\",{\"0\":{\"63\":1}}],[\"override\",{\"1\":{\"60\":1}}],[\"offline\",{\"1\":{\"425\":1}}],[\"off\",{\"1\":{\"269\":1}}],[\"of\",{\"1\":{\"41\":1,\"471\":1,\"472\":2}}],[\"observe\",{\"1\":{\"33\":1,\"37\":1}}],[\"observer\",{\"0\":{\"33\":1},\"1\":{\"29\":2,\"31\":2,\"34\":1}}],[\"obj\",{\"1\":{\"31\":6,\"33\":4,\"158\":2,\"159\":2}}],[\"object\",{\"0\":{\"29\":1,\"31\":1},\"1\":{\"31\":3,\"32\":1,\"33\":2,\"158\":4,\"159\":11,\"198\":1,\"199\":1,\"216\":1,\"218\":2,\"219\":1,\"472\":1}}],[\"onclick\",{\"1\":{\"395\":1,\"398\":1,\"407\":1,\"410\":1}}],[\"onclick=\",{\"1\":{\"17\":1,\"117\":1}}],[\"oneof\",{\"0\":{\"359\":1,\"453\":1},\"1\":{\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"442\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"onerror\",{\"1\":{\"159\":3}}],[\"onload\",{\"1\":{\"159\":3}}],[\"onlyeven\",{\"1\":{\"86\":8}}],[\"only\",{\"1\":{\"57\":1,\"61\":1,\"159\":1}}],[\"onlyadmin\",{\"1\":{\"57\":2}}],[\"onscriptcomplete\",{\"1\":{\"159\":4}}],[\"on\",{\"1\":{\"88\":1,\"159\":3,\"215\":1}}],[\"onboarding\",{\"1\":{\"25\":2}}],[\"oct\",{\"1\":{\"6\":2}}],[\"ok\",{\"1\":{\"2\":1}}],[\"头决定了缓存的变体\",{\"1\":{\"7\":1}}],[\"头来指定在客户端和代理服务器中的缓存行为\",{\"1\":{\"7\":1}}],[\"头将上次获取资源时收到的\",{\"1\":{\"6\":1}}],[\"头将上次获取资源的时间发送给服务器\",{\"1\":{\"6\":1}}],[\"头指示资源的最后修改时间\",{\"1\":{\"6\":1}}],[\"头提供了更为灵活的缓存控制选项\",{\"1\":{\"6\":1}}],[\"头\",{\"1\":{\"6\":5,\"7\":4}}],[\"状态机\",{\"1\":{\"143\":1}}],[\"状态更新时机不同步\",{\"1\":{\"141\":1}}],[\"状态撕裂\",{\"1\":{\"141\":3}}],[\"状态管理\",{\"0\":{\"139\":1}}],[\"状态管理库\",{\"0\":{\"23\":1}}],[\"状态变量\",{\"0\":{\"49\":1},\"1\":{\"49\":1}}],[\"状态\",{\"1\":{\"47\":1}}],[\"状态保持和数据传递等方面都有各自的优势\",{\"1\":{\"4\":1}}],[\"状态码\",{\"1\":{\"2\":1}}],[\"在浏览器控制台会发现\",{\"1\":{\"426\":1}}],[\"在程序运行中\",{\"1\":{\"357\":1,\"451\":1}}],[\"在控制台查看\",{\"1\":{\"270\":1}}],[\"在原有文件基础上写\",{\"1\":{\"268\":1,\"273\":1}}],[\"在由\",{\"1\":{\"266\":1}}],[\"在项目根目录新建下面文件\",{\"1\":{\"271\":1}}],[\"在项目根目录下新建文件\",{\"1\":{\"257\":1}}],[\"在项目中引入\",{\"1\":{\"25\":1}}],[\"在开始使用\",{\"1\":{\"255\":1}}],[\"在哪做\",{\"1\":{\"218\":1}}],[\"在需要调试代码处用\",{\"1\":{\"215\":1}}],[\"在编译阶段\",{\"1\":{\"210\":1}}],[\"在编译代码过程中\",{\"1\":{\"204\":1}}],[\"在运行过程中会广播事件\",{\"1\":{\"204\":1}}],[\"在特定的时机对生产线上的资源做处理\",{\"1\":{\"204\":1}}],[\"在这个过程中如果任何\",{\"1\":{\"195\":1}}],[\"在这个例子中\",{\"1\":{\"121\":1,\"125\":1}}],[\"在每个\",{\"1\":{\"187\":1}}],[\"在构建阶段执行\",{\"1\":{\"157\":1}}],[\"在异步回调函数中\",{\"1\":{\"141\":1}}],[\"在前端应用中\",{\"1\":{\"141\":1}}],[\"在前端开发中得到广泛应用\",{\"1\":{\"28\":1}}],[\"在前端开发中\",{\"1\":{\"28\":3}}],[\"在测试开始之前\",{\"1\":{\"136\":1}}],[\"在package\",{\"1\":{\"133\":1}}],[\"在理解闭包之前\",{\"1\":{\"125\":1}}],[\"在实际编程中\",{\"1\":{\"123\":1}}],[\"在实现用户身份验证\",{\"1\":{\"4\":1}}],[\"在一些支持尾调用优化的语言中\",{\"1\":{\"124\":1}}],[\"在一些支持尾调用优化的编程语言中\",{\"1\":{\"123\":1}}],[\"在一些函数式编程语言中\",{\"1\":{\"120\":1}}],[\"在没有尾调用优化的情况下\",{\"1\":{\"123\":1}}],[\"在函数式编程中\",{\"1\":{\"122\":1}}],[\"在柯里化中\",{\"1\":{\"121\":1}}],[\"在上面的例子中\",{\"1\":{\"120\":2,\"124\":1}}],[\"在组件中开启\",{\"1\":{\"117\":1}}],[\"在index\",{\"1\":{\"117\":1}}],[\"在\",{\"0\":{\"270\":1,\"275\":1},\"1\":{\"100\":1,\"101\":1,\"106\":1,\"116\":1,\"120\":2,\"125\":1,\"141\":1,\"187\":1,\"193\":1,\"207\":1,\"217\":1,\"219\":1,\"425\":1}}],[\"在创建新合约中使用try\",{\"1\":{\"86\":1}}],[\"在external\",{\"1\":{\"86\":1}}],[\"在以太坊上使用的是keccak256\",{\"1\":{\"56\":1}}],[\"在assets文件夹下创建index\",{\"1\":{\"25\":1}}],[\"在http中\",{\"1\":{\"2\":1}}],[\"而是引入\",{\"1\":{\"382\":1,\"435\":1}}],[\"而是通过视图模型来间接完成\",{\"1\":{\"28\":1}}],[\"而对\",{\"1\":{\"372\":1,\"466\":1}}],[\"而这些文件是不需要编译可以直接使用的\",{\"1\":{\"364\":1,\"458\":1}}],[\"而无需重新加载整个页面\",{\"1\":{\"357\":1,\"451\":1}}],[\"而无需重大调整\",{\"1\":{\"157\":1}}],[\"而在一些不支持尾调用优化的语言中\",{\"1\":{\"124\":1}}],[\"而\",{\"1\":{\"121\":1}}],[\"而反柯里化则是将一系列单参数的函数转化为一个多参数的函数\",{\"1\":{\"121\":1}}],[\"而不仅仅是\",{\"1\":{\"192\":1}}],[\"而不仅仅是单个组件或模块\",{\"1\":{\"134\":1}}],[\"而不用担心运行时性能开销\",{\"1\":{\"157\":1}}],[\"而不用再复制到内存了\",{\"1\":{\"88\":1}}],[\"而不是每个文件都生成辅助代码\",{\"1\":{\"442\":1}}],[\"而不是生成新的模块\",{\"1\":{\"394\":2,\"396\":1,\"406\":2,\"408\":1}}],[\"而不是在运行时\",{\"1\":{\"157\":1}}],[\"而不是创建新的帧\",{\"1\":{\"123\":1}}],[\"而不经过其他的操作\",{\"1\":{\"123\":1}}],[\"而不必显式地声明一个命名函数\",{\"1\":{\"119\":1}}],[\"而不需要重新获取整个\",{\"1\":{\"100\":1}}],[\"而过大的\",{\"1\":{\"4\":1}}],[\"而上述步骤构成了一次常规的网页加载过程\",{\"1\":{\"1\":1}}],[\"增加安全性\",{\"1\":{\"4\":1}}],[\"并通过\",{\"1\":{\"442\":1}}],[\"并行加载\",{\"1\":{\"442\":1}}],[\"并不执行\",{\"1\":{\"413\":1}}],[\"并不会输出到\",{\"1\":{\"322\":1}}],[\"并输出分析文件\",{\"1\":{\"218\":1}}],[\"并确保了解其潜在的影响和限制\",{\"1\":{\"157\":1}}],[\"并尝试更新组件的状态时\",{\"1\":{\"141\":1}}],[\"并生成测试结果报告\",{\"1\":{\"136\":1}}],[\"并在异步操作中检查引用是否仍然是最新的状态\",{\"1\":{\"141\":1}}],[\"并在将来的测试中与基准屏幕截图进行比较\",{\"1\":{\"136\":1}}],[\"并在浏览器中构建和渲染页面\",{\"1\":{\"100\":1}}],[\"并定义了\",{\"1\":{\"125\":1}}],[\"并非所有编程语言和所有情况都能够进行尾调用优化\",{\"1\":{\"124\":1}}],[\"并非所有的编程语言都支持尾调用优化\",{\"1\":{\"123\":1}}],[\"并非所有函数都能被良好地反柯里化\",{\"1\":{\"121\":1}}],[\"并进行优化\",{\"1\":{\"123\":1}}],[\"并对列表中的每个元素应用该函数\",{\"1\":{\"122\":1}}],[\"并\",{\"1\":{\"122\":1}}],[\"并返回一个新的列表\",{\"1\":{\"122\":1}}],[\"并返回\",{\"1\":{\"120\":1}}],[\"并简化代码的推理和理解\",{\"1\":{\"119\":1}}],[\"并且使所有辅助代码从这里引用\",{\"1\":{\"382\":1,\"435\":1}}],[\"并且多了其他代码\",{\"1\":{\"351\":1,\"445\":1}}],[\"并且当你使用开发服务器时\",{\"1\":{\"322\":1}}],[\"并且我们将其赋值给\",{\"1\":{\"125\":1}}],[\"并且一些库和框架提供了方便的柯里化函数\",{\"1\":{\"120\":1}}],[\"并且避免副作用\",{\"1\":{\"119\":1}}],[\"并且不应该在生产环境中使用\",{\"1\":{\"116\":1}}],[\"并且无法被客户端直接访问\",{\"1\":{\"4\":1}}],[\"并把剩余的eth转给msg\",{\"1\":{\"82\":1}}],[\"并将其转换为视图可以理解和展示的格式\",{\"1\":{\"28\":1}}],[\"并向用户展示相关信息\",{\"1\":{\"28\":1}}],[\"并提供了一种保存状态的机制\",{\"1\":{\"125\":1}}],[\"并提供一种访问和修改数据的方式\",{\"1\":{\"28\":1}}],[\"并提供更好的可维护性和可测试性\",{\"1\":{\"28\":1}}],[\"并从\",{\"1\":{\"3\":1}}],[\"使代码体积过大\",{\"1\":{\"381\":1,\"434\":1}}],[\"使浏览器能识别运行\",{\"1\":{\"324\":1}}],[\"使\",{\"1\":{\"203\":1}}],[\"使样式生效\",{\"1\":{\"201\":1}}],[\"使开发人员能够轻松地集成到他们的项目中\",{\"1\":{\"157\":1}}],[\"使其易于集成到自动化构建流程中\",{\"1\":{\"136\":1}}],[\"使用该新特性\",{\"1\":{\"421\":1}}],[\"使用core\",{\"1\":{\"422\":1}}],[\"使用contenthash\",{\"1\":{\"418\":2,\"426\":1}}],[\"使用chunk的name作为输出的文件名\",{\"1\":{\"393\":1,\"394\":1,\"396\":1,\"405\":1,\"406\":1,\"408\":1}}],[\"使用css\",{\"1\":{\"201\":1}}],[\"使用多进程打包实际上会显著的让我们打包时间变得很长\",{\"1\":{\"374\":1,\"468\":1}}],[\"使用react官方规则\",{\"1\":{\"339\":1}}],[\"使用字体图标\",{\"1\":{\"289\":1}}],[\"使用图片资源\",{\"0\":{\"282\":1}}],[\"使用错误级别的错误\",{\"1\":{\"269\":1}}],[\"使用警告级别的错误\",{\"1\":{\"269\":1}}],[\"使用tapasync\",{\"1\":{\"214\":1}}],[\"使用babel对js代码进行编译\",{\"1\":{\"199\":1}}],[\"使用异步loader\",{\"1\":{\"199\":1}}],[\"使用swc\",{\"0\":{\"169\":1}}],[\"使用selector来调用函数\",{\"1\":{\"85\":1}}],[\"使用之前的文件扩展名\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"290\":1,\"321\":1,\"329\":1,\"330\":1,\"334\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"使用之前\",{\"1\":{\"157\":1}}],[\"使用一个配置文件\",{\"1\":{\"136\":1}}],[\"使用尾递归计算阶乘\",{\"1\":{\"124\":1}}],[\"使用反柯里化后的函数\",{\"1\":{\"121\":1}}],[\"使用柯里化后的函数\",{\"1\":{\"120\":1}}],[\"使用\",{\"0\":{\"117\":1},\"1\":{\"116\":1,\"136\":1,\"141\":4,\"187\":2,\"374\":1,\"442\":14,\"468\":1}}],[\"使用到对应的name\",{\"1\":{\"34\":1}}],[\"使用场景\",{\"1\":{\"3\":1,\"4\":1}}],[\"使得整个系统扩展性很好\",{\"1\":{\"204\":1}}],[\"使得这些变量的值得以保留\",{\"1\":{\"125\":1}}],[\"使得编译器或解释器可以对其进行优化\",{\"1\":{\"124\":1}}],[\"使得代码更加灵活\",{\"1\":{\"122\":1}}],[\"使得视图的变化不直接影响模型\",{\"1\":{\"28\":1}}],[\"使得客户端可以在用户的本地设备上持久保存一些信息\",{\"1\":{\"4\":1}}],[\"应用程序测试的\",{\"1\":{\"134\":1}}],[\"应用程序的性能非常有帮助\",{\"1\":{\"116\":1}}],[\"应用程序的开发工具\",{\"1\":{\"116\":1}}],[\"应用程序中的不同用途\",{\"1\":{\"4\":1}}],[\"应用部分\",{\"0\":{\"89\":1}}],[\"应用层的协议\",{\"1\":{\"2\":1}}],[\"为编译的每个文件都插入了辅助代码\",{\"1\":{\"381\":1,\"434\":1}}],[\"为模板创建文件\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"263\":1,\"321\":1,\"329\":1,\"330\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"为了更加方便体现它们之间的差异\",{\"1\":{\"392\":1,\"404\":1}}],[\"为了让我们代码在编译\",{\"1\":{\"348\":1}}],[\"为了方便运行不同模式的指令\",{\"1\":{\"331\":1}}],[\"为了方便我们直接介入和控制编译过程\",{\"1\":{\"206\":1}}],[\"为了增加安全性\",{\"1\":{\"3\":1}}],[\"为\",{\"1\":{\"194\":1,\"207\":1}}],[\"为什么\",{\"0\":{\"351\":1,\"356\":1,\"360\":1,\"364\":1,\"368\":1,\"372\":1,\"377\":1,\"381\":1,\"385\":1,\"390\":1,\"402\":1,\"412\":1,\"416\":1,\"420\":1,\"424\":1,\"430\":1,\"434\":1,\"438\":1,\"445\":1,\"450\":1,\"454\":1,\"458\":1,\"462\":1,\"466\":1},\"1\":{\"418\":1}}],[\"为什么样式资源没有呢\",{\"1\":{\"284\":1}}],[\"为什么我们还要处理呢\",{\"1\":{\"266\":1}}],[\"为什么需要这样命名呢\",{\"1\":{\"393\":1,\"394\":1,\"396\":1,\"405\":1,\"406\":1,\"408\":1}}],[\"为什么需要打包工具\",{\"0\":{\"243\":1}}],[\"为什么需要css\",{\"1\":{\"201\":1}}],[\"为什么vue2中要重写数组的监听\",{\"0\":{\"32\":1}}],[\"为什么会有这样的区别\",{\"0\":{\"4\":1}}],[\"每一列的映射关系\",{\"1\":{\"352\":1,\"446\":1}}],[\"每一次文件更新都会生成一个新的compilation\",{\"1\":{\"160\":1}}],[\"每次修改任何一个文件\",{\"1\":{\"417\":1}}],[\"每次打包时\",{\"1\":{\"368\":1,\"462\":1}}],[\"每次写完代码都需要手动输入指令才能编译代码\",{\"1\":{\"319\":1}}],[\"每次启动\",{\"1\":{\"209\":1}}],[\"每次函数调用都会在调用栈上创建一个新的帧\",{\"1\":{\"123\":1}}],[\"每次请求都会带上相应的\",{\"1\":{\"3\":1}}],[\"每个新函数接受下一个参数\",{\"1\":{\"120\":1}}],[\"每个用户都有一个唯一的会话标识符\",{\"1\":{\"3\":1}}],[\"每个报文都包含三个部分\",{\"1\":{\"2\":1}}],[\"每个请求都是独立的\",{\"1\":{\"2\":1}}],[\"会对\",{\"1\":{\"422\":1}}],[\"会共享一个\",{\"1\":{\"417\":1}}],[\"会通过\",{\"1\":{\"352\":1,\"446\":1}}],[\"会动态创建一个\",{\"1\":{\"296\":1}}],[\"会将所有打包好的资源输出到\",{\"1\":{\"284\":1}}],[\"会将文件打包输出到\",{\"1\":{\"252\":1}}],[\"会发现多了三张图片资源\",{\"1\":{\"284\":1}}],[\"会发现箭头函数等\",{\"1\":{\"275\":1}}],[\"会查找和自动读取它们\",{\"1\":{\"268\":1,\"273\":1}}],[\"会自动引入\",{\"1\":{\"264\":1}}],[\"会出现闪屏现象\",{\"1\":{\"221\":1}}],[\"会创建一个\",{\"1\":{\"221\":1}}],[\"会执行插件\",{\"1\":{\"213\":1,\"214\":1}}],[\"会跳过后面所有的的\",{\"1\":{\"195\":1}}],[\"会先从左到右执行\",{\"1\":{\"195\":1}}],[\"会启动如下项目\",{\"1\":{\"133\":1}}],[\"会保留历史记录\",{\"1\":{\"131\":1}}],[\"会失败并释放`catchbyte`\",{\"1\":{\"86\":1}}],[\"会失败并释放`catchevent`\",{\"1\":{\"86\":2}}],[\"会成功并释放`successevent`\",{\"1\":{\"86\":2}}],[\"会消耗光gas\",{\"1\":{\"56\":1}}],[\"会消耗gas\",{\"1\":{\"56\":1}}],[\"会触发一系列\",{\"1\":{\"204\":1}}],[\"会触发update\",{\"1\":{\"38\":1}}],[\"会触发getter\",{\"1\":{\"38\":1}}],[\"会遍历watcher\",{\"1\":{\"38\":1}}],[\"会被编译成如下render函数\",{\"1\":{\"36\":1}}],[\"会引起内存段里面的数据频繁发生改变\",{\"1\":{\"29\":1}}],[\"会随着\",{\"1\":{\"3\":1}}],[\"会根据请求的内容进行处理\",{\"1\":{\"1\":1}}],[\"购物车内容等\",{\"1\":{\"3\":1,\"4\":1}}],[\"与现有工具兼容\",{\"1\":{\"157\":1}}],[\"与域无关\",{\"1\":{\"3\":1,\"4\":1}}],[\"与get类似\",{\"1\":{\"2\":1}}],[\"遵循同源策略\",{\"1\":{\"3\":1,\"4\":1}}],[\"跨域\",{\"1\":{\"3\":1,\"4\":1}}],[\"或其他前端框架中经常遇到\",{\"1\":{\"141\":1}}],[\"或库进行交互时\",{\"1\":{\"121\":1}}],[\"或\",{\"1\":{\"102\":1,\"201\":1,\"269\":3,\"331\":1,\"412\":1}}],[\"或storage\",{\"1\":{\"58\":1}}],[\"或者引用第三方工具函数库或组件库\",{\"1\":{\"377\":1,\"430\":1}}],[\"或者返回一个新函数的函数\",{\"1\":{\"122\":1}}],[\"或者\",{\"1\":{\"21\":1}}],[\"或具有固定的过期日期\",{\"1\":{\"3\":1,\"4\":1}}],[\"或状态码\",{\"1\":{\"2\":1}}],[\"过去我们使用\",{\"1\":{\"420\":1}}],[\"过去在\",{\"1\":{\"279\":1}}],[\"过期时间\",{\"1\":{\"3\":1,\"4\":1}}],[\"过多的\",{\"1\":{\"3\":1}}],[\"受服务器内存和配置的限制\",{\"1\":{\"3\":1,\"4\":1}}],[\"可组装的\",{\"1\":{\"267\":1}}],[\"可识别的模块\",{\"1\":{\"186\":1}}],[\"可视化回归测试\",{\"1\":{\"136\":1}}],[\"可视化的单元测试\",{\"1\":{\"133\":1}}],[\"可执行单个单元测试\",{\"1\":{\"133\":1}}],[\"可定制的报告\",{\"1\":{\"131\":1}}],[\"可定制的\",{\"1\":{\"131\":1}}],[\"可能会导致一系列的错误\",{\"1\":{\"141\":1}}],[\"可能会涉及到闭包\",{\"1\":{\"141\":1}}],[\"可能会遇到以下情况\",{\"1\":{\"141\":1}}],[\"可能会影响性能\",{\"1\":{\"116\":1}}],[\"可能会影响请求性能\",{\"1\":{\"3\":1}}],[\"可能需要使用迭代或其他方法来避免栈溢出问题\",{\"1\":{\"124\":1}}],[\"可能对搜索引擎优化\",{\"1\":{\"100\":1}}],[\"可能导致较长的首次加载时间\",{\"1\":{\"100\":1}}],[\"可对链上数据进行查询\",{\"1\":{\"91\":1}}],[\"可直接引入starttransition\",{\"1\":{\"17\":1}}],[\"可以单独打包\",{\"1\":{\"341\":1,\"347\":1}}],[\"可以编译\",{\"1\":{\"325\":2}}],[\"可以省略大括号\",{\"1\":{\"316\":1}}],[\"可以省略大括号和分号\",{\"1\":{\"310\":1}}],[\"可以从社区\",{\"1\":{\"293\":1}}],[\"可以提前解决\",{\"1\":{\"271\":1}}],[\"可以提供有关\",{\"1\":{\"116\":1}}],[\"可以配置各项功能\",{\"1\":{\"267\":1}}],[\"可以获取所有即将输出的资源文件\",{\"1\":{\"216\":1}}],[\"可以注册\",{\"1\":{\"209\":1,\"210\":1}}],[\"可以注册同步钩子和异步钩子\",{\"1\":{\"207\":1}}],[\"可以进行文件操作\",{\"1\":{\"209\":1}}],[\"可以执行更广泛的任务\",{\"1\":{\"203\":1}}],[\"可以同步或者异步调用的并返回多个结果的函数\",{\"1\":{\"196\":1}}],[\"可以接收原始的\",{\"1\":{\"194\":1}}],[\"可以是任何内容\",{\"1\":{\"190\":1}}],[\"可以是会话级别\",{\"1\":{\"3\":1,\"4\":1}}],[\"可以直接发送到客户端\",{\"1\":{\"157\":1}}],[\"可以使用\",{\"1\":{\"136\":1,\"214\":1}}],[\"可以使用安全标志和httponly标志\",{\"1\":{\"3\":1}}],[\"可以通过添加不同前缀\",{\"1\":{\"187\":1}}],[\"可以通过配置文件或命令行选项轻松启用或禁用特定的插件\",{\"1\":{\"131\":1}}],[\"可以通过使用迭代而不是递归来避免栈溢出问题\",{\"1\":{\"123\":1}}],[\"可以通过部分应用\",{\"1\":{\"120\":1}}],[\"可以将多个函数组合在一起\",{\"1\":{\"120\":1}}],[\"可以更容易地适应不同的调用方式和场景\",{\"1\":{\"120\":1}}],[\"可以在需要函数的地方定义和使用它\",{\"1\":{\"119\":1}}],[\"可以在多个域之间共享\",{\"1\":{\"3\":1,\"4\":1}}],[\"可以输出一些信息\",{\"1\":{\"116\":1}}],[\"可以帮助你追踪哪些组件在不必要的情况下重新渲染\",{\"1\":{\"116\":1}}],[\"可以帮助开发者更轻松地编写和维护css代码\",{\"1\":{\"25\":1}}],[\"可以访问本次打包生成所有文件的结果\",{\"1\":{\"210\":1}}],[\"可以访问本次启动\",{\"1\":{\"209\":1}}],[\"可以访问所有模块\",{\"1\":{\"210\":1}}],[\"可以访问\",{\"1\":{\"51\":3}}],[\"可以监听对象的getter和setter\",{\"1\":{\"31\":1}}],[\"可以指定缓存的最大时长\",{\"1\":{\"6\":1}}],[\"可以存储相对较大的数据\",{\"1\":{\"4\":1}}],[\"可以设置过期时间\",{\"1\":{\"3\":1,\"4\":1}}],[\"用来压缩图片的插件\",{\"1\":{\"386\":1,\"439\":1}}],[\"用来匹配\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"280\":1,\"285\":1,\"290\":1,\"297\":1,\"303\":1,\"309\":1,\"315\":1,\"321\":1,\"329\":1,\"330\":1,\"334\":1,\"337\":1,\"338\":1,\"340\":1,\"343\":1,\"344\":1,\"346\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"用来清理\",{\"1\":{\"197\":1}}],[\"用法\",{\"1\":{\"187\":1,\"196\":1}}],[\"用transfer\",{\"1\":{\"79\":1}}],[\"用户体验不好\",{\"1\":{\"221\":1}}],[\"用户行为模拟\",{\"1\":{\"134\":1}}],[\"用户首次访问时\",{\"1\":{\"100\":1,\"101\":1}}],[\"用户和你之间的消息的传递\",{\"1\":{\"50\":1}}],[\"用户操作和视图的状态管理\",{\"1\":{\"28\":1}}],[\"用户无法直接访问或修改\",{\"1\":{\"4\":1}}],[\"用户无法直接访问或修改会话数据\",{\"1\":{\"3\":1}}],[\"用户登录后\",{\"1\":{\"3\":1}}],[\"用于在\",{\"1\":{\"210\":1}}],[\"用于在客户端和服务器之间传输信息\",{\"1\":{\"2\":1}}],[\"用于注入不同类型的自定义构建行为\",{\"1\":{\"207\":1}}],[\"用于封装私有变量\",{\"1\":{\"125\":1}}],[\"用于解决问题并遍历数据结构\",{\"1\":{\"119\":1}}],[\"用于描述智能合约中的公共方法和事件\",{\"1\":{\"83\":1}}],[\"用于描述报文的属性\",{\"1\":{\"2\":1}}],[\"用于把创建者的\",{\"1\":{\"77\":1}}],[\"用于检测系统级别的错误\",{\"1\":{\"56\":1}}],[\"用于检索相关的会话数据\",{\"1\":{\"3\":1}}],[\"用于生成虚拟dom\",{\"1\":{\"36\":1}}],[\"用于管理视图的状态和逻辑\",{\"1\":{\"28\":1}}],[\"用于设计和组织应用程序的代码\",{\"1\":{\"28\":1}}],[\"用于创建新资源\",{\"1\":{\"2\":1}}],[\"用于指定资源的位置\",{\"1\":{\"2\":1}}],[\"因此它有助于在将应用程序交付给最终用户之前发现潜在的问题\",{\"1\":{\"134\":1}}],[\"因此了解哪些组件在不必要的情况下重新渲染是很有价值的\",{\"1\":{\"116\":1}}],[\"因此首次加载时间较短\",{\"1\":{\"101\":1}}],[\"因此相对更安全\",{\"1\":{\"4\":1}}],[\"因此对于用户来说相对不安全\",{\"1\":{\"4\":1}}],[\"因此可以更安全地存储敏感信息\",{\"1\":{\"4\":1}}],[\"因此可以被用户查看和编辑\",{\"1\":{\"3\":1}}],[\"因为我们打开的访问路径是\",{\"1\":{\"426\":1}}],[\"因为文件名没有变化导致浏览器会直接读取缓存\",{\"1\":{\"416\":1}}],[\"因为文件目录变了\",{\"1\":{\"329\":1}}],[\"因为前后输出的文件名是一样的\",{\"1\":{\"416\":1}}],[\"因为每个电脑都不一样\",{\"1\":{\"374\":1,\"468\":1}}],[\"因为每个进程启动就有大约为\",{\"1\":{\"373\":1,\"467\":1}}],[\"因为每次导航都需要向服务器请求完整的\",{\"1\":{\"101\":1}}],[\"因为其他文件都比较少\",{\"1\":{\"372\":1,\"466\":1}}],[\"因为经过\",{\"1\":{\"284\":1}}],[\"因为可能存在\",{\"1\":{\"201\":1}}],[\"因为它允许传递多个参数\",{\"1\":{\"192\":1}}],[\"因为它会引入一些额外的开销\",{\"1\":{\"116\":1}}],[\"因为减小文件大小可以减少加载时间\",{\"1\":{\"157\":1}}],[\"因为这种测试方法能够检测到用户可能遇到的各种问题\",{\"1\":{\"134\":1}}],[\"因为迭代通常更容易被优化\",{\"1\":{\"123\":1}}],[\"因为纯函数没有共享的状态\",{\"1\":{\"119\":1}}],[\"因为只需加载和渲染数据\",{\"1\":{\"100\":1}}],[\"因为\",{\"1\":{\"3\":1,\"264\":1,\"284\":1,\"418\":1}}],[\"中拆分出的模块\",{\"1\":{\"394\":2,\"396\":1,\"406\":2,\"408\":1}}],[\"中才能解决\",{\"1\":{\"387\":1,\"440\":1}}],[\"中搜索查询\",{\"1\":{\"293\":1}}],[\"中了\",{\"1\":{\"285\":1,\"364\":1,\"458\":1}}],[\"中使用\",{\"0\":{\"270\":1,\"275\":1}}],[\"中目前有十种\",{\"1\":{\"207\":1}}],[\"中进行异步操作时\",{\"1\":{\"141\":1}}],[\"中可能没有包含所有内容\",{\"1\":{\"100\":1}}],[\"中各个组件的主要职责\",{\"1\":{\"28\":1}}],[\"中检索相关的数据\",{\"1\":{\"3\":1}}],[\"中的没有使用上的代码\",{\"1\":{\"378\":1,\"431\":1}}],[\"中的样式代码\",{\"1\":{\"201\":1}}],[\"中的柯里化函数\",{\"1\":{\"122\":1}}],[\"中的\",{\"1\":{\"122\":4,\"246\":2}}],[\"中的标识符\",{\"1\":{\"3\":1}}],[\"中的会话标识符来关联用户与服务器端存储的会话数据\",{\"1\":{\"3\":1}}],[\"中\",{\"1\":{\"3\":2,\"100\":1,\"101\":1,\"116\":1,\"120\":2,\"125\":1,\"159\":1,\"209\":1,\"219\":1,\"250\":1,\"266\":1,\"268\":1,\"273\":1,\"296\":1,\"331\":1}}],[\"随着web的发展\",{\"1\":{\"2\":1}}],[\"最终我们会使用单入口+代码分割+动态导入方式来进行配置\",{\"1\":{\"397\":1,\"409\":1}}],[\"最终我们需要将remainingrequest中的路径转化成相对路径\",{\"1\":{\"201\":1}}],[\"最简单的插件\",{\"0\":{\"213\":1}}],[\"最简单的\",{\"0\":{\"189\":1}}],[\"最差是o\",{\"1\":{\"154\":2,\"155\":1}}],[\"最后确保提取的文件大小不能为0\",{\"1\":{\"394\":1,\"396\":1,\"406\":1,\"408\":1}}],[\"最后删除当前目录\",{\"1\":{\"217\":1}}],[\"最后\",{\"1\":{\"125\":1}}],[\"最后返回最终的结果\",{\"1\":{\"120\":1}}],[\"最后indexed\",{\"1\":{\"62\":1}}],[\"最大的访问权限\",{\"1\":{\"51\":1}}],[\"最重要的协议之一\",{\"1\":{\"2\":1}}],[\"最常见的是\",{\"1\":{\"2\":1}}],[\"通知\",{\"1\":{\"35\":1}}],[\"通知watcher\",{\"1\":{\"33\":1}}],[\"通过keyof过滤never\",{\"1\":{\"472\":1}}],[\"通过查看webpack\",{\"1\":{\"353\":1,\"447\":1}}],[\"通过文件操作清空内容\",{\"1\":{\"217\":1}}],[\"通过过滤只保留需要处理的文件\",{\"1\":{\"216\":1}}],[\"通过调试查看\",{\"1\":{\"215\":1}}],[\"通过代码分割的模块又是另外的\",{\"1\":{\"210\":1}}],[\"通过插件我们可以扩展\",{\"1\":{\"203\":1}}],[\"通过设置\",{\"1\":{\"194\":1}}],[\"通过module去调用loader\",{\"1\":{\"160\":1}}],[\"通过jsonp将遍历webpackchunkyd\",{\"1\":{\"159\":1}}],[\"通过死代码消除和其他优化技术\",{\"1\":{\"157\":1}}],[\"通过对\",{\"1\":{\"157\":1}}],[\"通过使用\",{\"1\":{\"136\":1}}],[\"通过使用ssl\",{\"1\":{\"2\":1}}],[\"通过比较屏幕截图来执行可视化回归测试\",{\"1\":{\"136\":1}}],[\"通过e2e\",{\"1\":{\"134\":1}}],[\"通过和失败的测试\",{\"1\":{\"131\":1}}],[\"通过这种方式\",{\"1\":{\"120\":1}}],[\"通过柯里化\",{\"1\":{\"120\":1}}],[\"通过授权机制\",{\"1\":{\"92\":1}}],[\"通过token0和token1的地址\",{\"1\":{\"80\":1}}],[\"通过delegatecall来调用c的setvars\",{\"1\":{\"75\":1}}],[\"通过call来调用c的setvars\",{\"1\":{\"75\":1}}],[\"通过网址引入\",{\"1\":{\"67\":1}}],[\"通过\",{\"1\":{\"3\":1,\"187\":1,\"204\":1,\"217\":2,\"221\":1}}],[\"通常用于描述移除\",{\"1\":{\"378\":1,\"431\":1}}],[\"通常指的是在异步操作中\",{\"1\":{\"141\":1}}],[\"通常\",{\"1\":{\"125\":1}}],[\"通常对尾调用提供了更好的支持\",{\"1\":{\"123\":1}}],[\"通常通过\",{\"1\":{\"3\":1}}],[\"通常由服务器生成并存储在服务器上\",{\"1\":{\"3\":1,\"4\":1}}],[\"通常在用户关闭浏览器或一定时间内不活动时过期\",{\"1\":{\"3\":1,\"4\":1}}],[\"通常在4kb左右\",{\"1\":{\"3\":1,\"4\":1}}],[\"通常包含有关用户的信息\",{\"1\":{\"3\":1}}],[\"通常包括\",{\"1\":{\"1\":1}}],[\"通常基于tcp协议\",{\"1\":{\"2\":1}}],[\"通常是2xx\",{\"1\":{\"1\":1}}],[\"客户端渲染使得构建富交互性应用更为容易\",{\"1\":{\"100\":1}}],[\"客户端使用本地缓存\",{\"1\":{\"6\":2}}],[\"客户端在后续请求中可以通过\",{\"1\":{\"6\":2}}],[\"客户端缓存\",{\"0\":{\"6\":1}}],[\"客户端缓存和服务器缓存\",{\"1\":{\"5\":1}}],[\"客户端将cookie存储并在后续请求中发送回服务器\",{\"1\":{\"2\":1}}],[\"客户端发送http请求到服务器\",{\"1\":{\"2\":1}}],[\"1>\",{\"1\":{\"472\":1}}],[\"1da57a\",{\"1\":{\"341\":1}}],[\"1秒后输出\",{\"1\":{\"122\":1}}],[\"1万个\",{\"1\":{\"92\":1}}],[\"17\",{\"0\":{\"88\":1},\"1\":{\"215\":2,\"339\":1,\"340\":1,\"345\":2}}],[\"16进制转字符串\",{\"1\":{\"90\":1}}],[\"16\",{\"0\":{\"63\":1,\"87\":1},\"1\":{\"90\":2,\"122\":1}}],[\"15\",{\"0\":{\"62\":1,\"86\":1},\"1\":{\"122\":1,\"345\":1}}],[\"14\",{\"0\":{\"61\":1,\"85\":1},\"1\":{\"345\":1}}],[\"13\",{\"0\":{\"60\":1,\"84\":1},\"1\":{\"339\":1,\"340\":1}}],[\"127\",{\"1\":{\"215\":1,\"426\":3}}],[\"120000\",{\"1\":{\"159\":1}}],[\"120\",{\"1\":{\"123\":1,\"124\":1,\"159\":1}}],[\"123\",{\"1\":{\"66\":1}}],[\"1234\",{\"1\":{\"31\":1}}],[\"12\",{\"0\":{\"59\":1,\"83\":1}}],[\"11\",{\"0\":{\"58\":1,\"82\":1},\"1\":{\"427\":1}}],[\"1111\",{\"1\":{\"69\":1}}],[\"111\",{\"1\":{\"53\":1,\"214\":2}}],[\"110\",{\"1\":{\"53\":1}}],[\"1024\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"285\":1,\"290\":1,\"321\":1,\"329\":1,\"330\":1,\"334\":1,\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"101\",{\"1\":{\"57\":1}}],[\"10\",{\"0\":{\"57\":1,\"81\":1},\"1\":{\"52\":1,\"66\":3,\"73\":2,\"83\":1,\"90\":1,\"122\":1,\"155\":1,\"215\":2,\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"285\":1,\"290\":1,\"321\":1,\"329\":1,\"330\":1,\"337\":2,\"338\":6,\"339\":1,\"340\":7,\"341\":7,\"343\":2,\"344\":6,\"345\":1,\"346\":6,\"347\":7,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"394\":2,\"396\":1,\"397\":1,\"398\":1,\"406\":2,\"408\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"427\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"1000\",{\"1\":{\"122\":1,\"193\":1,\"214\":2}}],[\"1000000000000000000\",{\"1\":{\"90\":1}}],[\"1000000\",{\"1\":{\"62\":1,\"73\":1}}],[\"100px\",{\"1\":{\"105\":2,\"282\":6,\"298\":2,\"304\":2,\"310\":4,\"316\":2,\"351\":2,\"445\":2}}],[\"100\",{\"1\":{\"51\":2,\"105\":1}}],[\"18\",{\"1\":{\"49\":1}}],[\"1个字节\",{\"1\":{\"48\":1}}],[\"1引入了持久连接\",{\"1\":{\"2\":1}}],[\"1\",{\"0\":{\"47\":1,\"52\":1,\"65\":1,\"70\":1,\"105\":1,\"189\":1,\"192\":1,\"222\":1,\"226\":1,\"232\":1,\"238\":1,\"248\":1,\"262\":1,\"268\":1,\"273\":1,\"277\":1,\"280\":1,\"288\":1,\"295\":1,\"301\":1,\"307\":1,\"313\":1,\"320\":1,\"328\":1,\"334\":1,\"393\":1,\"405\":1},\"1\":{\"2\":1,\"17\":1,\"33\":1,\"39\":2,\"48\":1,\"49\":10,\"51\":2,\"52\":1,\"56\":4,\"58\":1,\"60\":1,\"62\":1,\"63\":1,\"66\":5,\"83\":1,\"86\":3,\"88\":1,\"90\":2,\"109\":1,\"117\":2,\"122\":4,\"123\":3,\"124\":3,\"154\":2,\"155\":4,\"159\":3,\"201\":1,\"213\":1,\"214\":1,\"215\":4,\"216\":1,\"223\":1,\"227\":1,\"228\":1,\"229\":1,\"233\":1,\"249\":2,\"253\":1,\"263\":1,\"269\":1,\"270\":2,\"275\":2,\"281\":1,\"282\":1,\"289\":2,\"298\":2,\"304\":2,\"310\":2,\"316\":2,\"321\":1,\"329\":1,\"330\":1,\"339\":14,\"340\":13,\"345\":10,\"351\":4,\"358\":4,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":2,\"394\":3,\"395\":1,\"396\":1,\"397\":1,\"398\":4,\"406\":3,\"407\":1,\"408\":1,\"409\":1,\"410\":4,\"414\":1,\"418\":2,\"422\":8,\"426\":7,\"436\":1,\"440\":2,\"445\":4,\"452\":4,\"456\":1,\"460\":1,\"464\":1,\"468\":1,\"469\":2,\"472\":2}}],[\"实例能够访问所有的模块和它们的依赖\",{\"1\":{\"210\":1}}],[\"实践网站\",{\"0\":{\"126\":1}}],[\"实现按需加载\",{\"1\":{\"395\":1,\"407\":1}}],[\"实现\",{\"1\":{\"216\":1,\"217\":1,\"218\":1,\"219\":1}}],[\"实现柯里化\",{\"1\":{\"125\":1}}],[\"实现useimmer\",{\"0\":{\"12\":1}}],[\"实体主体\",{\"1\":{\"2\":1}}],[\"实际\",{\"1\":{\"426\":1}}],[\"实际使用eslint\",{\"1\":{\"398\":1,\"410\":1,\"422\":1}}],[\"实际上会直接报错的\",{\"1\":{\"393\":1,\"394\":1,\"396\":1,\"405\":1,\"406\":1,\"408\":1}}],[\"实际上涉及到许多优化和复杂的步骤\",{\"1\":{\"1\":1}}],[\"实际开发中我们一般不考虑旧版本浏览器了\",{\"1\":{\"228\":1}}],[\"实际的数据\",{\"1\":{\"1\":1}}],[\"l\",{\"1\":{\"159\":2}}],[\"lightpink\",{\"1\":{\"310\":1}}],[\"listening\",{\"1\":{\"215\":1}}],[\"licence\",{\"1\":{\"66\":1}}],[\"license\",{\"1\":{\"46\":1,\"47\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"61\":1,\"62\":1,\"65\":1,\"66\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"77\":1,\"78\":1,\"79\":1,\"80\":1,\"82\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"90\":1,\"92\":1,\"215\":1,\"339\":1,\"340\":1,\"345\":1}}],[\"lib\",{\"1\":{\"207\":1}}],[\"library\",{\"1\":{\"66\":1}}],[\"libs\",{\"1\":{\"52\":1,\"341\":2,\"347\":2}}],[\"link\",{\"1\":{\"221\":1}}],[\"links\",{\"1\":{\"25\":2}}],[\"line\",{\"1\":{\"2\":1}}],[\"lessoptions\",{\"1\":{\"341\":1}}],[\"less\",{\"0\":{\"300\":1,\"304\":1},\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"243\":1,\"263\":1,\"270\":3,\"275\":3,\"277\":1,\"280\":1,\"282\":2,\"285\":1,\"289\":2,\"290\":1,\"292\":1,\"301\":1,\"302\":2,\"303\":1,\"304\":4,\"309\":1,\"310\":2,\"315\":1,\"316\":2,\"321\":1,\"329\":1,\"330\":1,\"334\":1,\"337\":1,\"338\":1,\"339\":1,\"340\":2,\"341\":2,\"343\":1,\"344\":1,\"345\":1,\"346\":1,\"347\":1,\"351\":9,\"358\":2,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":3,\"409\":1,\"410\":3,\"414\":1,\"418\":2,\"422\":8,\"426\":3,\"436\":1,\"440\":1,\"445\":9,\"452\":2,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"less$\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"280\":1,\"285\":1,\"290\":1,\"303\":1,\"309\":1,\"315\":1,\"321\":1,\"329\":1,\"330\":1,\"334\":1,\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"leaks\",{\"1\":{\"159\":1}}],[\"left\",{\"1\":{\"153\":8,\"154\":3}}],[\"len\",{\"1\":{\"90\":3}}],[\"length++\",{\"1\":{\"66\":1}}],[\"length\",{\"1\":{\"39\":1,\"53\":2,\"59\":5,\"66\":7,\"88\":3,\"90\":2,\"153\":7,\"154\":3,\"155\":1,\"159\":4,\"216\":2,\"218\":1,\"374\":2,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"468\":2}}],[\"let\",{\"1\":{\"31\":1,\"34\":1,\"40\":1,\"87\":1,\"125\":1,\"153\":4,\"154\":5,\"155\":2,\"218\":1}}],[\"lerna\",{\"0\":{\"146\":1},\"1\":{\"26\":1,\"146\":2}}],[\"layouts\",{\"1\":{\"341\":3,\"347\":3}}],[\"layouts通常是admin项目的主体布局组件\",{\"1\":{\"341\":1,\"347\":1}}],[\"lang=\",{\"1\":{\"239\":1,\"264\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1,\"395\":1,\"407\":1}}],[\"later\",{\"1\":{\"159\":1}}],[\"latest\",{\"1\":{\"25\":1}}],[\"lazy\",{\"1\":{\"119\":1}}],[\"lambda\",{\"1\":{\"119\":3}}],[\"laoyuan\",{\"1\":{\"54\":1,\"56\":1,\"69\":1,\"70\":3,\"71\":1}}],[\"last\",{\"1\":{\"6\":3,\"92\":1,\"228\":1,\"339\":1,\"340\":1,\"345\":1}}],[\"looking\",{\"1\":{\"351\":1,\"445\":1}}],[\"location\",{\"1\":{\"159\":1}}],[\"locator\",{\"1\":{\"2\":1}}],[\"localhost\",{\"1\":{\"145\":1,\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"321\":1,\"329\":1,\"330\":1,\"337\":1,\"340\":1,\"341\":1,\"343\":1,\"346\":1,\"347\":1,\"358\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"452\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"loaded\",{\"1\":{\"159\":5}}],[\"loader不支持oneof\",{\"1\":{\"343\":1,\"344\":1,\"346\":1,\"347\":1}}],[\"loader是第一个loader\",{\"1\":{\"201\":1}}],[\"loader解析才能变成一个css文件\",{\"1\":{\"201\":1}}],[\"loader和css\",{\"1\":{\"201\":1}}],[\"loader处理css文件\",{\"1\":{\"201\":1}}],[\"loader处理后的css文件\",{\"1\":{\"201\":1}}],[\"loader处理\",{\"1\":{\"201\":1}}],[\"loader等待处理\",{\"1\":{\"201\":1}}],[\"loader用法\",{\"1\":{\"201\":2}}],[\"loaderutils\",{\"1\":{\"200\":2}}],[\"loader执行流程\",{\"1\":{\"195\":2}}],[\"loaders\",{\"1\":{\"189\":1,\"197\":1,\"198\":2,\"199\":2,\"200\":2,\"201\":1,\"209\":1}}],[\"loader1\",{\"1\":{\"187\":4,\"189\":2}}],[\"loader2\",{\"1\":{\"187\":4}}],[\"loader3\",{\"1\":{\"187\":4}}],[\"loader优势有哪些\",{\"0\":{\"169\":1}}],[\"loader比使用babel\",{\"0\":{\"169\":1}}],[\"loader编译后\",{\"1\":{\"160\":1}}],[\"loader\",{\"0\":{\"185\":1,\"186\":1,\"187\":1,\"188\":1,\"189\":1,\"190\":1,\"191\":1,\"192\":1,\"193\":1,\"194\":1,\"195\":1,\"196\":1,\"197\":1,\"198\":1,\"199\":1,\"200\":1,\"201\":1},\"1\":{\"109\":8,\"187\":34,\"189\":1,\"193\":2,\"194\":3,\"195\":8,\"196\":3,\"197\":1,\"198\":2,\"199\":2,\"200\":7,\"201\":8,\"209\":1,\"215\":2,\"223\":14,\"226\":1,\"227\":22,\"229\":10,\"233\":10,\"238\":12,\"256\":2,\"263\":14,\"270\":12,\"275\":15,\"277\":12,\"279\":3,\"280\":12,\"284\":1,\"285\":12,\"290\":14,\"293\":4,\"295\":3,\"296\":2,\"297\":3,\"301\":1,\"302\":1,\"303\":6,\"307\":1,\"308\":2,\"309\":9,\"313\":1,\"314\":1,\"315\":12,\"321\":14,\"325\":1,\"329\":14,\"330\":14,\"334\":12,\"337\":10,\"338\":10,\"339\":7,\"340\":17,\"341\":12,\"343\":14,\"344\":14,\"345\":7,\"346\":15,\"347\":16,\"351\":21,\"358\":4,\"360\":1,\"361\":1,\"362\":14,\"366\":14,\"370\":14,\"374\":13,\"383\":12,\"387\":12,\"397\":12,\"398\":12,\"409\":12,\"410\":12,\"414\":12,\"418\":24,\"426\":12,\"436\":12,\"440\":12,\"442\":1,\"445\":21,\"452\":4,\"454\":1,\"455\":1,\"456\":14,\"460\":14,\"464\":14,\"468\":13}}],[\"loadscript\",{\"1\":{\"159\":1}}],[\"load\",{\"1\":{\"159\":3,\"210\":1,\"426\":1}}],[\"loadingended\",{\"1\":{\"159\":2}}],[\"loading\",{\"1\":{\"17\":1,\"159\":9}}],[\"lodash\",{\"1\":{\"66\":1,\"120\":1,\"126\":1}}],[\"log替换为空\",{\"1\":{\"197\":1}}],[\"logic\",{\"1\":{\"159\":1}}],[\"logn\",{\"1\":{\"154\":1}}],[\"log\",{\"0\":{\"197\":1},\"1\":{\"31\":2,\"34\":2,\"40\":1,\"47\":1,\"69\":3,\"79\":2,\"85\":2,\"90\":2,\"117\":1,\"120\":2,\"121\":1,\"122\":2,\"123\":1,\"124\":1,\"125\":1,\"155\":2,\"158\":2,\"159\":2,\"189\":1,\"195\":1,\"197\":3,\"213\":2,\"214\":9,\"249\":2,\"270\":2,\"275\":2,\"289\":2,\"298\":2,\"304\":2,\"310\":2,\"316\":2,\"358\":4,\"393\":2,\"394\":4,\"395\":2,\"398\":3,\"405\":2,\"406\":4,\"407\":2,\"410\":3,\"422\":12,\"426\":6,\"452\":4}}],[\"起始行\",{\"1\":{\"2\":1}}],[\"equal<pick<t\",{\"1\":{\"472\":1}}],[\"equal<x\",{\"1\":{\"472\":1}}],[\"equal<t\",{\"1\":{\"472\":2}}],[\"equal<true\",{\"1\":{\"472\":1}}],[\"equal<any\",{\"1\":{\"472\":1}}],[\"equal<1\",{\"1\":{\"472\":1}}],[\"equal<user1\",{\"1\":{\"472\":1}}],[\"equal<\",{\"1\":{\"472\":5}}],[\"equal<string\",{\"1\":{\"472\":2}}],[\"equiv=\",{\"1\":{\"239\":1,\"264\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1,\"395\":1,\"407\":1}}],[\"eqeqeq\",{\"1\":{\"269\":3}}],[\"ecmascript\",{\"1\":{\"422\":1}}],[\"ecmafeatures\",{\"1\":{\"269\":1}}],[\"ecmaversion\",{\"1\":{\"269\":1,\"270\":1,\"398\":1,\"410\":1,\"422\":1}}],[\"essential\",{\"1\":{\"269\":1,\"345\":1}}],[\"essentials\",{\"1\":{\"25\":2}}],[\"es\",{\"1\":{\"246\":2,\"266\":1,\"269\":3,\"325\":2,\"378\":1,\"422\":2,\"431\":1}}],[\"es6\",{\"1\":{\"243\":1,\"272\":1,\"275\":1,\"420\":1,\"421\":1,\"422\":1}}],[\"es6+语法编译成\",{\"1\":{\"199\":1}}],[\"eslint会对动态导入语法报错\",{\"1\":{\"398\":1,\"410\":1}}],[\"eslintcache\",{\"1\":{\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"464\":1,\"468\":1}}],[\"eslintconfig\",{\"1\":{\"268\":1}}],[\"eslint配置文件\",{\"1\":{\"328\":1}}],[\"eslintignore\",{\"1\":{\"271\":1}}],[\"eslintrc\",{\"1\":{\"268\":4,\"269\":1,\"270\":1,\"328\":1,\"339\":1,\"345\":1,\"398\":1,\"410\":1,\"422\":1}}],[\"eslint\",{\"0\":{\"267\":1,\"271\":1},\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"263\":1,\"266\":2,\"267\":3,\"268\":1,\"269\":4,\"270\":7,\"271\":3,\"275\":1,\"321\":1,\"329\":1,\"330\":1,\"337\":1,\"338\":1,\"339\":2,\"340\":3,\"341\":1,\"343\":1,\"344\":1,\"345\":5,\"346\":1,\"347\":1,\"362\":1,\"366\":1,\"368\":2,\"369\":1,\"370\":1,\"372\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":5,\"409\":1,\"410\":5,\"414\":1,\"418\":2,\"422\":5,\"426\":1,\"436\":1,\"440\":1,\"442\":2,\"456\":1,\"460\":1,\"462\":2,\"463\":1,\"464\":1,\"466\":1,\"468\":1}}],[\"eslintwebpackplugin\",{\"1\":{\"223\":2,\"227\":2,\"229\":2,\"233\":2,\"263\":2,\"270\":2,\"275\":2,\"321\":2,\"329\":2,\"330\":2,\"337\":2,\"338\":2,\"340\":2,\"341\":2,\"343\":2,\"344\":2,\"346\":2,\"347\":2,\"362\":2,\"366\":2,\"370\":2,\"374\":2,\"383\":2,\"387\":2,\"397\":2,\"398\":2,\"409\":2,\"410\":2,\"414\":2,\"418\":4,\"426\":2,\"436\":2,\"440\":2,\"456\":2,\"460\":2,\"464\":2,\"468\":2}}],[\"es5\",{\"1\":{\"199\":1}}],[\"esmodule\",{\"1\":{\"158\":1,\"159\":2}}],[\"e2e\",{\"1\":{\"134\":10}}],[\"e2e测试\",{\"0\":{\"134\":1}}],[\"effects\",{\"1\":{\"119\":1}}],[\"eot|woff|woff2|ttf|png|jpg|svg\",{\"1\":{\"109\":1}}],[\"emotion\",{\"1\":{\"111\":2}}],[\"empty\",{\"1\":{\"90\":2,\"159\":1}}],[\"emit是异步串行钩子\",{\"1\":{\"216\":1,\"217\":1,\"218\":1}}],[\"emitfile\",{\"1\":{\"196\":2,\"200\":1}}],[\"emit\",{\"1\":{\"62\":1,\"69\":1,\"73\":1,\"75\":2,\"77\":1,\"78\":2,\"79\":1,\"85\":1,\"86\":5,\"214\":7,\"216\":2,\"217\":2,\"218\":2}}],[\"err\",{\"1\":{\"196\":1,\"199\":2,\"217\":2}}],[\"errortype\",{\"1\":{\"159\":3}}],[\"errors\",{\"0\":{\"113\":1},\"1\":{\"113\":3}}],[\"error既可以告知用户抛出异常的原因\",{\"1\":{\"56\":1}}],[\"error\",{\"1\":{\"2\":1,\"52\":1,\"56\":2,\"86\":2,\"141\":9,\"159\":9,\"269\":3,\"387\":3,\"440\":3}}],[\"erc20合约接口\",{\"1\":{\"92\":1}}],[\"erc20\",{\"0\":{\"92\":1},\"1\":{\"76\":4,\"91\":1,\"92\":1}}],[\"eval\",{\"1\":{\"158\":2,\"159\":2,\"351\":3,\"445\":3}}],[\"evaluation\",{\"1\":{\"119\":1}}],[\"evennumbers\",{\"1\":{\"122\":2}}],[\"even\",{\"1\":{\"86\":5}}],[\"event\",{\"1\":{\"62\":1,\"69\":1,\"73\":1,\"75\":1,\"77\":1,\"78\":2,\"79\":1,\"85\":1,\"86\":3,\"92\":2,\"159\":10}}],[\"events\",{\"1\":{\"62\":1}}],[\"evm不能修calldata\",{\"1\":{\"88\":1}}],[\"evm\",{\"1\":{\"62\":1}}],[\"enoent\",{\"1\":{\"387\":1,\"440\":1}}],[\"enough\",{\"1\":{\"61\":1}}],[\"entries\",{\"1\":{\"218\":1}}],[\"entries将对象变成二维数组\",{\"1\":{\"218\":1}}],[\"entry中xxx\",{\"1\":{\"393\":1,\"394\":1,\"396\":1,\"405\":1,\"406\":1,\"408\":1}}],[\"entrypoint\",{\"1\":{\"337\":2,\"338\":2,\"340\":2,\"341\":2,\"343\":2,\"344\":2,\"346\":2,\"347\":2,\"418\":2}}],[\"entry\",{\"1\":{\"109\":1,\"159\":1,\"209\":1,\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"256\":1,\"257\":1,\"258\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"280\":1,\"285\":1,\"290\":1,\"297\":1,\"303\":1,\"309\":1,\"315\":1,\"321\":1,\"325\":1,\"329\":1,\"330\":1,\"334\":1,\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"393\":2,\"394\":2,\"396\":2,\"397\":1,\"398\":1,\"405\":2,\"406\":2,\"408\":2,\"409\":1,\"410\":1,\"414\":1,\"417\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"en\",{\"1\":{\"215\":1,\"239\":1,\"264\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1,\"395\":1,\"407\":1}}],[\"enforcesizethreshold\",{\"1\":{\"394\":1,\"396\":1,\"406\":1,\"408\":1}}],[\"enforce\",{\"1\":{\"187\":2}}],[\"ensure\",{\"1\":{\"159\":1}}],[\"enumerable\",{\"1\":{\"158\":1,\"159\":1}}],[\"env=production\",{\"1\":{\"339\":1,\"340\":1,\"345\":1}}],[\"env=development\",{\"1\":{\"339\":1,\"340\":1,\"345\":1}}],[\"env\",{\"1\":{\"106\":1,\"107\":2,\"109\":1,\"117\":2,\"199\":1,\"215\":1,\"226\":1,\"227\":4,\"229\":1,\"233\":1,\"270\":1,\"274\":1,\"275\":2,\"337\":1,\"338\":1,\"339\":4,\"340\":7,\"341\":3,\"343\":1,\"344\":1,\"345\":5,\"346\":4,\"347\":4,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":2,\"409\":1,\"410\":2,\"414\":1,\"418\":2,\"420\":1,\"422\":2,\"426\":1,\"436\":1,\"440\":1,\"468\":1}}],[\"encodewithselector`将`mint`函数的`selector`和参数打包编码\",{\"1\":{\"85\":1}}],[\"encodewithselector\",{\"1\":{\"83\":3,\"85\":1}}],[\"encodewithsignature\",{\"1\":{\"73\":4,\"74\":1,\"75\":2,\"83\":3}}],[\"encode\",{\"1\":{\"59\":1,\"83\":3}}],[\"encodepacked\",{\"1\":{\"56\":4,\"73\":1,\"83\":3,\"84\":1,\"90\":1}}],[\"encoding\",{\"1\":{\"7\":2}}],[\"eat\",{\"1\":{\"60\":2}}],[\"ethereum\",{\"1\":{\"66\":1,\"93\":1}}],[\"ether\",{\"1\":{\"62\":1}}],[\"etherscan\",{\"1\":{\"94\":1}}],[\"ethers\",{\"1\":{\"44\":2}}],[\"etag\",{\"1\":{\"6\":5}}],[\"e\",{\"1\":{\"39\":2,\"159\":3,\"217\":2}}],[\"elementplus\",{\"1\":{\"347\":1}}],[\"elementplusresolver\",{\"1\":{\"347\":3}}],[\"elementui\",{\"1\":{\"347\":1}}],[\"element\",{\"1\":{\"347\":2}}],[\"el\",{\"1\":{\"37\":2}}],[\"else\",{\"1\":{\"12\":1,\"40\":1,\"90\":2,\"153\":1,\"154\":1,\"159\":1,\"217\":1,\"469\":1}}],[\"exe\",{\"1\":{\"387\":4,\"440\":4}}],[\"executenew\",{\"1\":{\"86\":4}}],[\"execute\",{\"1\":{\"86\":3}}],[\"exclude\",{\"0\":{\"363\":1,\"457\":1},\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"263\":1,\"275\":1,\"321\":1,\"329\":1,\"330\":1,\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"362\":1,\"365\":1,\"366\":2,\"370\":2,\"374\":2,\"383\":2,\"387\":2,\"397\":2,\"398\":2,\"409\":2,\"410\":2,\"414\":2,\"418\":4,\"426\":2,\"436\":2,\"440\":2,\"442\":1,\"456\":1,\"459\":1,\"460\":2,\"464\":2,\"468\":2}}],[\"ext\",{\"1\":{\"200\":1,\"223\":4,\"227\":4,\"229\":4,\"233\":4,\"238\":3,\"263\":4,\"270\":4,\"275\":4,\"277\":4,\"290\":4,\"321\":4,\"329\":4,\"330\":4,\"334\":4,\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"362\":4,\"366\":4,\"370\":4,\"374\":4,\"383\":4,\"387\":4,\"397\":4,\"398\":5,\"409\":4,\"410\":5,\"414\":5,\"418\":10,\"426\":5,\"436\":4,\"440\":4,\"456\":4,\"460\":4,\"464\":4,\"468\":4}}],[\"extract\",{\"1\":{\"109\":2,\"222\":1,\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"338\":1,\"339\":1,\"340\":2,\"341\":1,\"344\":1,\"345\":1,\"346\":1,\"347\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"468\":1}}],[\"extensions\",{\"1\":{\"109\":1,\"216\":2,\"337\":1,\"338\":1,\"340\":2,\"341\":2,\"343\":1,\"344\":1,\"346\":1,\"347\":1}}],[\"extends\",{\"1\":{\"269\":3,\"270\":1,\"339\":1,\"345\":1,\"398\":1,\"410\":1,\"422\":1,\"469\":2,\"470\":1,\"471\":1,\"472\":8}}],[\"extend\",{\"1\":{\"25\":1,\"106\":1,\"381\":1,\"434\":1}}],[\"external\",{\"1\":{\"51\":2,\"52\":3,\"53\":1,\"60\":1,\"62\":1,\"72\":4,\"73\":1,\"74\":1,\"75\":2,\"78\":2,\"79\":5,\"80\":2,\"82\":1,\"85\":3,\"86\":3,\"87\":1,\"92\":6}}],[\"expected\",{\"1\":{\"472\":1}}],[\"expose\",{\"1\":{\"159\":1}}],[\"exports\",{\"1\":{\"25\":2,\"106\":1,\"107\":1,\"109\":2,\"158\":16,\"159\":17,\"189\":1,\"192\":2,\"193\":1,\"194\":2,\"195\":2,\"197\":1,\"198\":1,\"199\":1,\"200\":1,\"201\":1,\"207\":12,\"213\":1,\"214\":1,\"216\":1,\"217\":1,\"218\":1,\"219\":1,\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"257\":1,\"258\":1,\"263\":1,\"269\":2,\"270\":2,\"274\":1,\"275\":2,\"277\":1,\"280\":1,\"285\":1,\"290\":1,\"297\":1,\"303\":1,\"309\":1,\"315\":1,\"321\":1,\"329\":1,\"330\":1,\"334\":1,\"337\":1,\"338\":1,\"339\":2,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"345\":2,\"346\":1,\"347\":1,\"351\":4,\"353\":2,\"358\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"393\":1,\"394\":1,\"396\":1,\"397\":1,\"398\":2,\"405\":1,\"406\":1,\"408\":1,\"409\":1,\"410\":2,\"414\":1,\"418\":2,\"422\":2,\"426\":1,\"436\":1,\"440\":1,\"445\":4,\"447\":2,\"452\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"export\",{\"1\":{\"12\":5,\"17\":1,\"25\":3,\"117\":1,\"158\":4,\"159\":4,\"249\":2,\"351\":9,\"394\":1,\"406\":1,\"445\":9}}],[\"expressions\",{\"1\":{\"119\":1}}],[\"expr\",{\"1\":{\"56\":2}}],[\"expires\",{\"1\":{\"6\":3}}],[\"examplecontract\",{\"1\":{\"76\":1}}],[\"example\",{\"1\":{\"1\":1,\"469\":1,\"470\":1,\"471\":1,\"472\":1}}],[\"navigator\",{\"1\":{\"426\":2}}],[\"native\",{\"1\":{\"425\":1}}],[\"name就是xxx\",{\"1\":{\"393\":1,\"394\":1,\"396\":1,\"405\":1,\"406\":1,\"408\":1}}],[\"name=\",{\"1\":{\"239\":1,\"264\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1,\"395\":1,\"407\":1}}],[\"namespace\",{\"1\":{\"159\":1}}],[\"names\",{\"1\":{\"53\":5,\"54\":4}}],[\"name\",{\"1\":{\"1\":1,\"25\":3,\"34\":5,\"39\":8,\"51\":1,\"53\":2,\"54\":2,\"55\":5,\"56\":13,\"58\":4,\"83\":5,\"109\":4,\"159\":1,\"196\":1,\"215\":1,\"250\":1,\"337\":4,\"338\":7,\"339\":1,\"340\":10,\"341\":13,\"343\":4,\"344\":7,\"345\":1,\"346\":9,\"347\":13,\"387\":1,\"393\":2,\"394\":2,\"396\":2,\"397\":1,\"398\":7,\"405\":2,\"406\":2,\"408\":2,\"409\":1,\"410\":7,\"414\":6,\"418\":14,\"426\":6,\"440\":1,\"472\":9}}],[\"nvar\",{\"1\":{\"351\":1,\"445\":1}}],[\"n|\",{\"1\":{\"218\":3}}],[\"n$\",{\"1\":{\"216\":1}}],[\"nc\",{\"1\":{\"159\":2}}],[\"nconsole\",{\"1\":{\"158\":1}}],[\"nconst\",{\"1\":{\"158\":1,\"159\":1}}],[\"n^2\",{\"1\":{\"154\":1}}],[\"nlogn\",{\"1\":{\"154\":1}}],[\"never\",{\"1\":{\"469\":2,\"470\":1,\"472\":2}}],[\"network\",{\"0\":{\"415\":1},\"1\":{\"442\":1}}],[\"neither\",{\"1\":{\"351\":1,\"445\":1}}],[\"needattach\",{\"1\":{\"159\":3}}],[\"nesting\",{\"1\":{\"107\":1,\"109\":1}}],[\"next\",{\"1\":{\"106\":2}}],[\"newowners\",{\"1\":{\"88\":11}}],[\"new调用\",{\"0\":{\"70\":1}}],[\"newval\",{\"1\":{\"33\":3}}],[\"new\",{\"1\":{\"33\":1,\"34\":2,\"37\":1,\"39\":2,\"66\":2,\"70\":1,\"80\":1,\"86\":2,\"109\":2,\"159\":4,\"213\":1,\"214\":2,\"223\":3,\"227\":3,\"229\":3,\"233\":4,\"263\":2,\"270\":1,\"275\":1,\"321\":2,\"329\":2,\"330\":2,\"337\":4,\"338\":7,\"340\":7,\"341\":8,\"343\":5,\"344\":9,\"346\":9,\"347\":9,\"362\":2,\"366\":2,\"370\":2,\"374\":6,\"383\":6,\"387\":7,\"393\":1,\"394\":1,\"396\":1,\"397\":7,\"398\":7,\"405\":1,\"406\":1,\"408\":1,\"409\":7,\"410\":7,\"414\":8,\"418\":16,\"426\":9,\"436\":6,\"440\":7,\"456\":2,\"460\":2,\"464\":2,\"468\":6}}],[\"npx\",{\"1\":{\"106\":1,\"146\":1,\"240\":1,\"251\":3,\"258\":1,\"265\":1,\"270\":1,\"275\":1,\"278\":1,\"283\":1,\"291\":1,\"299\":1,\"305\":1,\"311\":1,\"317\":1,\"322\":1,\"329\":1,\"330\":1,\"331\":2,\"335\":1,\"393\":1,\"394\":1,\"395\":1,\"398\":1,\"405\":1,\"406\":1,\"407\":1,\"410\":1}}],[\"npmtrends\",{\"1\":{\"96\":1}}],[\"npm排名\",{\"0\":{\"96\":1}}],[\"npm\",{\"1\":{\"91\":1,\"106\":1,\"131\":1,\"135\":1,\"199\":1,\"200\":1,\"215\":2,\"222\":1,\"224\":1,\"226\":1,\"230\":1,\"232\":1,\"234\":1,\"250\":2,\"262\":1,\"270\":1,\"275\":1,\"295\":1,\"301\":1,\"307\":1,\"313\":1,\"320\":1,\"331\":4,\"339\":1,\"340\":1,\"345\":1,\"374\":1,\"383\":1,\"387\":3,\"393\":1,\"398\":1,\"405\":1,\"410\":1,\"414\":1,\"422\":3,\"426\":3,\"436\":1,\"440\":3,\"468\":1}}],[\"n\",{\"1\":{\"53\":1,\"123\":4,\"124\":4,\"154\":1,\"155\":1,\"158\":10,\"159\":10,\"198\":1,\"351\":24,\"445\":24}}],[\"num\",{\"1\":{\"66\":3,\"75\":5,\"84\":2}}],[\"number>\",{\"1\":{\"472\":1}}],[\"numbers\",{\"1\":{\"122\":6}}],[\"number\",{\"1\":{\"50\":1,\"59\":1,\"86\":1,\"472\":3}}],[\"null\",{\"1\":{\"17\":1,\"34\":1,\"159\":7,\"192\":1,\"193\":1}}],[\"nosourcemaps\",{\"1\":{\"351\":6,\"445\":6}}],[\"nor\",{\"1\":{\"351\":1,\"445\":1}}],[\"normal\",{\"1\":{\"187\":6}}],[\"noerroronmissing\",{\"1\":{\"337\":1,\"338\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1}}],[\"nonce\",{\"1\":{\"159\":1}}],[\"none\",{\"1\":{\"6\":2}}],[\"noispseudoselector\",{\"1\":{\"107\":1,\"109\":1}}],[\"nodejs核心模块\",{\"1\":{\"374\":1,\"468\":1}}],[\"nodejs\",{\"1\":{\"209\":1,\"215\":1}}],[\"nodes\",{\"1\":{\"91\":1}}],[\"nodename\",{\"1\":{\"39\":1}}],[\"nodetype\",{\"1\":{\"39\":2}}],[\"nodetofragment\",{\"1\":{\"39\":2}}],[\"nodevalue=this\",{\"1\":{\"34\":1}}],[\"nodevalue\",{\"1\":{\"34\":6,\"39\":5}}],[\"node\",{\"0\":{\"176\":1},\"1\":{\"34\":9,\"39\":14,\"117\":1,\"193\":1,\"201\":3,\"215\":4,\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"257\":1,\"258\":1,\"263\":1,\"270\":1,\"275\":1,\"321\":1,\"328\":1,\"329\":1,\"330\":1,\"337\":2,\"338\":2,\"339\":2,\"340\":5,\"341\":6,\"343\":3,\"344\":3,\"345\":3,\"346\":4,\"347\":7,\"351\":18,\"362\":1,\"364\":2,\"366\":2,\"370\":3,\"374\":3,\"383\":3,\"387\":8,\"394\":2,\"396\":1,\"397\":3,\"398\":4,\"406\":2,\"408\":1,\"409\":3,\"410\":4,\"414\":3,\"418\":6,\"422\":1,\"426\":3,\"436\":3,\"440\":8,\"445\":18,\"456\":1,\"458\":2,\"460\":2,\"464\":3,\"468\":3}}],[\"no\",{\"1\":{\"7\":2,\"159\":6,\"269\":1,\"270\":1,\"398\":1,\"410\":1,\"422\":1}}],[\"note\",{\"1\":{\"92\":1}}],[\"notify\",{\"1\":{\"33\":1,\"35\":1}}],[\"not\",{\"1\":{\"2\":1,\"6\":2,\"56\":1,\"61\":1,\"159\":3,\"228\":1,\"339\":1,\"340\":1,\"345\":1}}],[\"但实际开发时我们只需要关注两种情况即可\",{\"1\":{\"353\":1,\"447\":1}}],[\"但是将来如果还想使用其他语法\",{\"1\":{\"422\":1}}],[\"但是如果是\",{\"1\":{\"420\":1}}],[\"但是这样的话就会有一个问题\",{\"1\":{\"416\":1}}],[\"但是加载速度还不够好\",{\"1\":{\"412\":1}}],[\"但是实际上可能我们可能只用上极小部分的功能\",{\"1\":{\"377\":1,\"430\":1}}],[\"但是我们需要进行其他配置\",{\"1\":{\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"468\":1}}],[\"但是我们只需要检查\",{\"1\":{\"271\":1}}],[\"但是都要过一遍\",{\"1\":{\"360\":1,\"454\":1}}],[\"但是\",{\"1\":{\"358\":1,\"418\":1,\"452\":1}}],[\"但是此时就会对项目所有文件默认进行\",{\"1\":{\"271\":1}}],[\"但是可以读取状态变量的值\",{\"1\":{\"51\":1}}],[\"但如果计算量很小\",{\"1\":{\"193\":1}}],[\"但此时组件可能已经被卸载或处于其他不同步的状态\",{\"1\":{\"141\":1}}],[\"但用户仍然可以查看和编辑\",{\"1\":{\"4\":1}}],[\"但具体过期规则由服务器管理\",{\"1\":{\"3\":1}}],[\"但它们有一些关键的区别\",{\"1\":{\"3\":1}}],[\"但服务器只返回首部\",{\"1\":{\"2\":1}}],[\"但也导致了一些在处理复杂事务时的挑战\",{\"1\":{\"2\":1}}],[\"向服务器提交数据\",{\"1\":{\"2\":1}}],[\"pwa\",{\"0\":{\"423\":1},\"1\":{\"425\":1,\"442\":1}}],[\"performance\",{\"1\":{\"341\":1,\"347\":1}}],[\"pmmmwh\",{\"1\":{\"337\":1,\"339\":1,\"340\":2,\"341\":1}}],[\"pm2\",{\"1\":{\"145\":1}}],[\"polyfill翻译过来叫做垫片\",{\"1\":{\"421\":1}}],[\"polyfill\",{\"1\":{\"421\":1,\"422\":4}}],[\"port\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"321\":1,\"329\":1,\"330\":1,\"337\":1,\"340\":1,\"341\":1,\"343\":1,\"346\":1,\"347\":1,\"358\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"452\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"postcssoptions\",{\"1\":{\"227\":4,\"229\":1,\"233\":1,\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"468\":1}}],[\"postcssloaderoptions\",{\"1\":{\"25\":1}}],[\"postcss\",{\"1\":{\"25\":4,\"107\":3,\"109\":4,\"226\":3,\"227\":8,\"229\":2,\"233\":2,\"337\":2,\"338\":2,\"339\":2,\"340\":2,\"341\":2,\"343\":2,\"344\":2,\"345\":1,\"346\":2,\"347\":2,\"374\":2,\"383\":2,\"387\":2,\"397\":2,\"398\":2,\"409\":2,\"410\":2,\"414\":2,\"418\":4,\"426\":2,\"436\":2,\"440\":2,\"468\":2}}],[\"postcss是一个功能强大且灵活的css处理工具\",{\"1\":{\"25\":1}}],[\"postcss是一个基于javascript的css处理器\",{\"1\":{\"25\":1}}],[\"postcss可以用来为css属性添加特定于浏览器厂商的前缀\",{\"1\":{\"25\":1}}],[\"post\",{\"1\":{\"2\":1,\"187\":5}}],[\"ps\",{\"1\":{\"215\":1}}],[\"pngquant\",{\"1\":{\"387\":1,\"440\":1}}],[\"png\",{\"1\":{\"240\":1,\"281\":1,\"282\":1}}],[\"png|jpe\",{\"1\":{\"200\":1,\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"280\":1,\"285\":1,\"290\":1,\"321\":1,\"329\":1,\"330\":1,\"334\":1,\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"pnpm\",{\"1\":{\"25\":8,\"26\":1,\"107\":1,\"109\":1,\"111\":1,\"113\":1,\"115\":1,\"129\":1,\"130\":1,\"131\":1,\"132\":1,\"133\":1,\"135\":1,\"140\":1,\"145\":2,\"146\":1,\"345\":1}}],[\"pick<t\",{\"1\":{\"471\":1}}],[\"picking\",{\"1\":{\"470\":1,\"471\":1}}],[\"pink\",{\"1\":{\"298\":1,\"316\":1}}],[\"pitch\",{\"1\":{\"195\":4,\"201\":1}}],[\"pitching\",{\"0\":{\"195\":1}}],[\"pivot\",{\"1\":{\"154\":2}}],[\"pivotindex\",{\"1\":{\"154\":2}}],[\"p\",{\"1\":{\"159\":2,\"249\":2,\"394\":2,\"406\":2,\"469\":3,\"472\":4}}],[\"plus\",{\"1\":{\"347\":2}}],[\"plus组件样式\",{\"1\":{\"347\":1}}],[\"plugin是webpack4用的\",{\"1\":{\"113\":1}}],[\"plugin\",{\"0\":{\"113\":1,\"202\":1,\"203\":1,\"204\":1,\"208\":1},\"1\":{\"109\":1,\"113\":2,\"209\":2,\"213\":1,\"216\":1,\"217\":1,\"218\":1,\"219\":5,\"222\":1,\"223\":3,\"227\":3,\"229\":3,\"232\":1,\"233\":4,\"262\":1,\"263\":2,\"269\":1,\"270\":2,\"275\":1,\"321\":2,\"329\":2,\"330\":2,\"337\":5,\"338\":8,\"339\":7,\"340\":14,\"341\":9,\"343\":4,\"344\":7,\"345\":11,\"346\":8,\"347\":8,\"362\":2,\"366\":2,\"370\":2,\"374\":5,\"382\":2,\"383\":7,\"386\":1,\"387\":8,\"393\":2,\"394\":1,\"396\":1,\"397\":7,\"398\":9,\"405\":2,\"406\":1,\"408\":1,\"409\":7,\"410\":9,\"414\":9,\"418\":16,\"422\":1,\"426\":10,\"435\":2,\"436\":7,\"439\":1,\"440\":8,\"442\":1,\"456\":2,\"460\":2,\"464\":2,\"468\":5}}],[\"plugins\",{\"1\":{\"25\":2,\"106\":1,\"107\":1,\"109\":2,\"213\":1,\"216\":1,\"217\":1,\"218\":1,\"219\":1,\"223\":1,\"227\":5,\"229\":2,\"233\":2,\"238\":1,\"256\":1,\"257\":1,\"258\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"280\":1,\"285\":1,\"290\":1,\"297\":1,\"303\":1,\"309\":1,\"315\":1,\"321\":1,\"325\":1,\"329\":1,\"330\":1,\"334\":1,\"337\":3,\"338\":5,\"340\":5,\"341\":5,\"343\":3,\"344\":5,\"346\":5,\"347\":5,\"362\":1,\"366\":1,\"370\":1,\"374\":2,\"383\":3,\"387\":5,\"393\":1,\"394\":1,\"396\":1,\"397\":5,\"398\":6,\"405\":1,\"406\":1,\"408\":1,\"409\":5,\"410\":6,\"414\":5,\"418\":10,\"422\":1,\"426\":5,\"436\":3,\"440\":5,\"456\":1,\"460\":1,\"464\":1,\"468\":2}}],[\"plugi\",{\"1\":{\"109\":1}}],[\"playwright\",{\"1\":{\"134\":1}}],[\"package\",{\"1\":{\"215\":1,\"228\":1,\"250\":2,\"268\":1,\"273\":1,\"328\":1,\"331\":2,\"339\":1,\"340\":1,\"345\":1,\"393\":1,\"405\":1}}],[\"packet\",{\"1\":{\"90\":3}}],[\"patterns\",{\"1\":{\"337\":1,\"338\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1}}],[\"pattern\",{\"1\":{\"119\":1}}],[\"path\",{\"1\":{\"109\":2,\"159\":1,\"216\":2,\"217\":5,\"223\":6,\"227\":6,\"229\":6,\"233\":6,\"238\":4,\"258\":6,\"263\":6,\"270\":5,\"275\":5,\"277\":4,\"280\":4,\"285\":4,\"290\":4,\"297\":4,\"303\":4,\"309\":4,\"315\":4,\"321\":6,\"329\":5,\"330\":6,\"334\":4,\"337\":9,\"338\":10,\"340\":8,\"341\":11,\"343\":10,\"344\":10,\"346\":11,\"347\":13,\"362\":5,\"366\":6,\"370\":7,\"374\":8,\"383\":8,\"387\":8,\"393\":4,\"394\":4,\"396\":4,\"397\":8,\"398\":8,\"405\":4,\"406\":4,\"408\":4,\"409\":8,\"410\":8,\"414\":8,\"418\":16,\"426\":8,\"436\":8,\"440\":8,\"456\":5,\"460\":6,\"464\":7,\"468\":8}}],[\"pages\",{\"1\":{\"109\":2}}],[\"parallel\",{\"1\":{\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"468\":1}}],[\"params\",{\"1\":{\"338\":1,\"340\":1,\"341\":1,\"344\":1,\"346\":1,\"347\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"440\":1}}],[\"paramlist\",{\"1\":{\"51\":1}}],[\"parameters\",{\"1\":{\"25\":1}}],[\"parcel\",{\"1\":{\"244\":1}}],[\"part\",{\"1\":{\"201\":2}}],[\"partial\",{\"1\":{\"120\":1}}],[\"parentchunkloadingfunction\",{\"1\":{\"159\":3}}],[\"parentnode\",{\"1\":{\"159\":2}}],[\"parseroptions\",{\"1\":{\"269\":3,\"270\":1,\"339\":1,\"345\":1,\"398\":1,\"410\":1,\"422\":1}}],[\"parser再吐给依赖\",{\"1\":{\"160\":1}}],[\"parser开始解析依赖\",{\"1\":{\"160\":1}}],[\"parser\",{\"1\":{\"109\":1,\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"285\":1,\"290\":1,\"321\":1,\"329\":1,\"330\":1,\"334\":1,\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"345\":3,\"346\":1,\"347\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"422\":3,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"parseint\",{\"1\":{\"90\":1}}],[\"pass\",{\"1\":{\"88\":1,\"159\":1}}],[\"pairaddress\",{\"1\":{\"80\":5}}],[\"pairfactory\",{\"1\":{\"80\":1}}],[\"pair\",{\"1\":{\"80\":6}}],[\"payable使得部署的时候可以转eth进去\",{\"1\":{\"79\":1}}],[\"payable\",{\"0\":{\"61\":1},\"1\":{\"48\":2,\"51\":1,\"61\":3,\"73\":1,\"75\":2,\"78\":2,\"79\":9,\"80\":1,\"82\":1,\"90\":6}}],[\"priority\",{\"1\":{\"341\":4,\"347\":4,\"394\":4,\"396\":2,\"406\":4,\"408\":2}}],[\"primary\",{\"1\":{\"341\":1}}],[\"private\",{\"1\":{\"49\":1,\"51\":2,\"66\":1}}],[\"preload兼容性更好\",{\"1\":{\"414\":1,\"418\":2,\"426\":1}}],[\"preloadwebpackplugin\",{\"1\":{\"414\":2,\"418\":4,\"426\":2}}],[\"preload只能加载当前页面需要使用的资源\",{\"1\":{\"413\":1}}],[\"preload加载优先级高\",{\"1\":{\"413\":1}}],[\"preload\",{\"0\":{\"411\":1},\"1\":{\"412\":1,\"413\":3,\"414\":3,\"418\":4,\"426\":2,\"442\":1}}],[\"preloaded\",{\"1\":{\"159\":2}}],[\"preprocessor\",{\"1\":{\"229\":2,\"233\":2,\"337\":2,\"338\":2,\"340\":2,\"341\":4,\"343\":2,\"344\":2,\"346\":2,\"347\":4,\"374\":2,\"383\":2,\"387\":2,\"397\":2,\"398\":2,\"409\":2,\"410\":2,\"414\":2,\"418\":4,\"426\":2,\"436\":2,\"440\":2,\"468\":2}}],[\"prepack\",{\"0\":{\"157\":1},\"1\":{\"119\":1,\"157\":9}}],[\"prefixids\",{\"1\":{\"338\":1,\"340\":1,\"341\":1,\"344\":1,\"346\":1,\"347\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"440\":1}}],[\"prefix\",{\"1\":{\"198\":2}}],[\"prefetch兼容性更差\",{\"1\":{\"414\":1,\"418\":2,\"426\":1}}],[\"prefetch可以加载当前页面资源\",{\"1\":{\"413\":1}}],[\"prefetch加载优先级低\",{\"1\":{\"413\":1}}],[\"prefetch\",{\"0\":{\"411\":1},\"1\":{\"412\":1,\"413\":3,\"414\":1,\"418\":2,\"426\":1,\"442\":1}}],[\"prefetching\",{\"1\":{\"159\":1}}],[\"prefetched\",{\"1\":{\"159\":1}}],[\"precedingrequest\",{\"1\":{\"195\":1}}],[\"pre\",{\"1\":{\"187\":6}}],[\"prev\",{\"1\":{\"159\":3}}],[\"preview\",{\"1\":{\"25\":5}}],[\"presets中包含了\",{\"1\":{\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1}}],[\"presets\",{\"1\":{\"199\":1,\"274\":2,\"275\":1,\"339\":2,\"345\":1,\"422\":1}}],[\"preset\",{\"1\":{\"106\":1,\"107\":2,\"109\":1,\"199\":1,\"215\":1,\"226\":1,\"227\":4,\"229\":1,\"233\":1,\"274\":3,\"275\":2,\"337\":1,\"338\":2,\"339\":4,\"340\":3,\"341\":2,\"343\":1,\"344\":2,\"345\":2,\"346\":2,\"347\":2,\"374\":1,\"383\":1,\"387\":2,\"397\":2,\"398\":2,\"409\":2,\"410\":2,\"414\":2,\"418\":4,\"420\":1,\"422\":1,\"426\":2,\"436\":1,\"440\":2,\"468\":1}}],[\"progressive\",{\"1\":{\"338\":1,\"340\":1,\"341\":1,\"344\":1,\"346\":1,\"347\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"425\":1,\"426\":1,\"440\":1}}],[\"programming\",{\"1\":{\"119\":1}}],[\"prod\",{\"0\":{\"330\":1},\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"328\":1,\"330\":1,\"331\":1,\"338\":1,\"339\":2,\"343\":1,\"344\":2,\"345\":1,\"346\":1,\"347\":1,\"397\":1,\"409\":1,\"414\":1}}],[\"production\",{\"1\":{\"109\":1,\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"256\":1,\"330\":1,\"338\":1,\"340\":2,\"341\":2,\"344\":1,\"346\":2,\"347\":2,\"351\":3,\"353\":1,\"374\":1,\"383\":1,\"387\":1,\"393\":1,\"394\":1,\"396\":1,\"397\":1,\"398\":1,\"405\":1,\"406\":1,\"408\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"445\":3,\"447\":1,\"468\":1}}],[\"produce\",{\"1\":{\"12\":2}}],[\"proposals\",{\"1\":{\"422\":1}}],[\"properties\",{\"1\":{\"198\":1,\"199\":1,\"470\":1,\"471\":1}}],[\"property\",{\"1\":{\"159\":1}}],[\"prop\",{\"1\":{\"158\":2,\"159\":2}}],[\"process\",{\"1\":{\"109\":2,\"117\":1,\"340\":1,\"341\":1,\"346\":1,\"347\":1}}],[\"promises\",{\"1\":{\"159\":6}}],[\"promise\",{\"1\":{\"40\":2,\"159\":7,\"207\":1,\"214\":1,\"420\":1,\"422\":21,\"426\":4}}],[\"prototype\",{\"1\":{\"34\":1,\"35\":1,\"39\":1,\"40\":3,\"158\":1,\"159\":1}}],[\"protocol\",{\"1\":{\"2\":1}}],[\"pragma\",{\"1\":{\"7\":4,\"46\":1,\"47\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"61\":1,\"62\":1,\"65\":1,\"66\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"77\":1,\"78\":1,\"79\":1,\"80\":1,\"82\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"90\":1,\"92\":1}}],[\"pure和if等\",{\"0\":{\"59\":1}}],[\"pure函数\",{\"1\":{\"56\":1}}],[\"pure\",{\"1\":{\"51\":3,\"59\":1,\"60\":1,\"65\":2,\"66\":3,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"119\":2,\"351\":2,\"445\":2}}],[\"push\",{\"1\":{\"34\":1,\"35\":1,\"40\":2,\"53\":2,\"55\":1,\"80\":1,\"88\":1,\"90\":3,\"153\":4,\"154\":2,\"159\":6,\"351\":1,\"445\":1}}],[\"publicpath\",{\"1\":{\"159\":4}}],[\"public\",{\"1\":{\"7\":2,\"47\":1,\"49\":3,\"50\":2,\"51\":4,\"52\":2,\"53\":3,\"54\":2,\"55\":3,\"56\":1,\"57\":3,\"58\":4,\"59\":2,\"60\":1,\"61\":3,\"62\":1,\"65\":2,\"66\":6,\"69\":1,\"70\":1,\"71\":1,\"73\":1,\"75\":2,\"76\":3,\"77\":4,\"79\":1,\"80\":5,\"83\":4,\"84\":1,\"88\":1,\"90\":6,\"159\":1,\"223\":2,\"227\":2,\"229\":2,\"233\":2,\"263\":2,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1,\"321\":2,\"328\":1,\"329\":2,\"330\":2,\"337\":2,\"338\":2,\"340\":1,\"341\":2,\"343\":2,\"344\":2,\"346\":2,\"347\":2,\"362\":2,\"366\":2,\"370\":2,\"374\":2,\"383\":2,\"387\":2,\"393\":2,\"394\":1,\"395\":1,\"396\":1,\"397\":2,\"398\":2,\"405\":2,\"406\":1,\"407\":1,\"408\":1,\"409\":2,\"410\":2,\"414\":2,\"418\":4,\"426\":2,\"436\":2,\"440\":2,\"456\":2,\"460\":2,\"464\":2,\"468\":2}}],[\"put\",{\"1\":{\"2\":1}}],[\"是专门用来做\",{\"1\":{\"421\":1}}],[\"是同一个引入\",{\"1\":{\"417\":1}}],[\"是用户点击按钮时才加载这个资源的\",{\"1\":{\"412\":1}}],[\"是用来运行本地安装\",{\"1\":{\"251\":1}}],[\"是webpack命名规则\",{\"1\":{\"393\":1,\"394\":1,\"396\":1,\"405\":1,\"406\":1,\"408\":1}}],[\"是什么\",{\"0\":{\"352\":1,\"357\":1,\"361\":1,\"365\":1,\"369\":1,\"373\":1,\"378\":1,\"382\":1,\"386\":1,\"391\":1,\"403\":1,\"413\":1,\"417\":1,\"421\":1,\"425\":1,\"431\":1,\"435\":1,\"439\":1,\"446\":1,\"451\":1,\"455\":1,\"459\":1,\"463\":1,\"467\":1}}],[\"是基于\",{\"1\":{\"257\":1}}],[\"是文件夹需要递归遍历删除下面所有文件\",{\"1\":{\"217\":1}}],[\"是指在一个函数内部定义的函数\",{\"1\":{\"125\":1}}],[\"是函数的最后一步\",{\"1\":{\"124\":1}}],[\"是函数式编程中的一种技术\",{\"1\":{\"120\":1}}],[\"是柯里化的逆操作\",{\"1\":{\"121\":1}}],[\"是两种不同的前端渲染方式\",{\"1\":{\"99\":1}}],[\"是否自动打开浏览器\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"321\":1,\"329\":1,\"330\":1,\"358\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"452\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"是否允许增加其他字段\",{\"1\":{\"198\":1}}],[\"是否允许缓存代理等\",{\"1\":{\"6\":1}}],[\"是否写过plugin\",{\"0\":{\"166\":1}}],[\"是否写过loader\",{\"0\":{\"165\":1}}],[\"是否被领取过了\",{\"1\":{\"90\":1}}],[\"是否是等额红包\",{\"1\":{\"90\":1}}],[\"是\",{\"1\":{\"78\":2,\"214\":3,\"417\":1}}],[\"是为\",{\"1\":{\"21\":1}}],[\"是一个术语\",{\"1\":{\"378\":1,\"431\":1}}],[\"是一个用来生成源代码与构建后代码一一映射的文件的方案\",{\"1\":{\"352\":1,\"446\":1}}],[\"是一个用于网站可视化回归测试\",{\"1\":{\"136\":1}}],[\"是一个用于生成\",{\"1\":{\"131\":1}}],[\"是一个用于反柯里化的函数\",{\"1\":{\"121\":1}}],[\"是一个用于\",{\"1\":{\"116\":1}}],[\"是一个静态资源打包工具\",{\"1\":{\"245\":1}}],[\"是一个由\",{\"1\":{\"157\":1}}],[\"是一个闭包\",{\"1\":{\"125\":1}}],[\"是一个柯里化的函数\",{\"1\":{\"121\":1}}],[\"是一个柯里化函数\",{\"1\":{\"120\":1}}],[\"是一个过时的头部\",{\"1\":{\"7\":2}}],[\"是一种可以提供类似于\",{\"1\":{\"425\":1}}],[\"是一种软件测试方法\",{\"1\":{\"134\":1}}],[\"是一种软件架构模式\",{\"1\":{\"28\":1}}],[\"是一种编译器优化技术\",{\"1\":{\"123\":1}}],[\"是一种编程范式\",{\"1\":{\"119\":1}}],[\"是一种用于在网络上传输超文本数据的协议\",{\"1\":{\"2\":1}}],[\"是服务器生成的资源唯一标识符\",{\"1\":{\"6\":1}}],[\"是服务器发送给客户端并存储在客户端的小型文本文件\",{\"1\":{\"3\":1}}],[\"是与域名关联的\",{\"1\":{\"4\":1}}],[\"是uri的一种具体形式\",{\"1\":{\"2\":1}}],[\"it\",{\"1\":{\"351\":1,\"445\":1,\"469\":1,\"470\":1,\"471\":1}}],[\"its\",{\"1\":{\"66\":3}}],[\"ignore\",{\"1\":{\"337\":1,\"338\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1}}],[\"ignoreorder\",{\"1\":{\"109\":1}}],[\"i>\",{\"1\":{\"264\":3,\"289\":3}}],[\"icon\",{\"1\":{\"264\":3,\"289\":3}}],[\"iconfont\",{\"1\":{\"264\":3,\"270\":1,\"275\":1,\"289\":8,\"358\":1,\"398\":1,\"410\":1,\"422\":4,\"426\":1,\"452\":1}}],[\"ie=edge\",{\"1\":{\"239\":1,\"264\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1,\"395\":1,\"407\":1}}],[\"ie8\",{\"1\":{\"228\":1}}],[\"ie\",{\"1\":{\"159\":1,\"228\":1,\"266\":1}}],[\"ierc20\",{\"1\":{\"92\":2}}],[\"i<arr\",{\"1\":{\"154\":1,\"155\":1}}],[\"i=0\",{\"1\":{\"154\":1,\"155\":1}}],[\"io\",{\"0\":{\"137\":1},\"1\":{\"94\":1}}],[\"illegal\",{\"1\":{\"90\":1}}],[\"iyideng\",{\"1\":{\"72\":4}}],[\"i++\",{\"1\":{\"39\":1,\"51\":2,\"59\":1,\"88\":2,\"90\":1,\"154\":1,\"155\":1,\"159\":2}}],[\"i\",{\"1\":{\"25\":6,\"39\":4,\"51\":6,\"59\":4,\"66\":4,\"88\":9,\"90\":8,\"109\":3,\"125\":2,\"146\":1,\"154\":3,\"155\":2,\"159\":9,\"199\":1,\"200\":1,\"222\":1,\"226\":1,\"232\":1,\"250\":1,\"262\":1,\"270\":1,\"275\":1,\"295\":1,\"301\":1,\"307\":1,\"313\":1,\"320\":1,\"345\":1,\"374\":1,\"383\":1,\"387\":1,\"393\":1,\"398\":1,\"405\":1,\"410\":1,\"413\":1,\"414\":1,\"422\":2,\"426\":2,\"436\":1,\"440\":1,\"468\":1}}],[\"id=\",{\"1\":{\"36\":2,\"37\":1,\"39\":5,\"395\":1,\"407\":1}}],[\"id\",{\"1\":{\"19\":1,\"34\":4,\"37\":3,\"40\":4,\"159\":2,\"351\":1,\"445\":1}}],[\"identifier\",{\"1\":{\"2\":1,\"46\":1,\"47\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"61\":1,\"62\":1,\"65\":1,\"66\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"77\":1,\"78\":1,\"79\":1,\"80\":1,\"82\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"90\":1,\"92\":1}}],[\"isproduction\",{\"1\":{\"340\":11,\"341\":11,\"346\":9,\"347\":9}}],[\"ispending\",{\"1\":{\"17\":2}}],[\"isdirectory\",{\"1\":{\"217\":1}}],[\"isc\",{\"1\":{\"215\":1,\"339\":1,\"340\":1,\"345\":1}}],[\"ismounted\",{\"1\":{\"141\":3}}],[\"isgrabbed\",{\"1\":{\"90\":3}}],[\"isequal\",{\"1\":{\"59\":1,\"90\":5}}],[\"is\",{\"1\":{\"52\":1,\"56\":1,\"60\":1,\"71\":1,\"90\":2,\"159\":2,\"351\":1,\"445\":1}}],[\"isomorphic\",{\"1\":{\"102\":1}}],[\"iso\",{\"0\":{\"9\":1}}],[\"infer\",{\"1\":{\"469\":2}}],[\"info\",{\"1\":{\"337\":1,\"338\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1}}],[\"innerhtml\",{\"1\":{\"201\":2,\"219\":1}}],[\"innerfunction\",{\"1\":{\"125\":6}}],[\"inlinechunkhtmlplugin\",{\"1\":{\"219\":1}}],[\"inlinechunkwebpackplugin\",{\"0\":{\"219\":1},\"1\":{\"219\":4}}],[\"inline\",{\"1\":{\"187\":5,\"219\":1}}],[\"inprogress\",{\"1\":{\"159\":6}}],[\"inputfilesystem\",{\"1\":{\"209\":1}}],[\"input\",{\"1\":{\"34\":1,\"39\":1,\"56\":1}}],[\"includes\",{\"1\":{\"216\":1,\"420\":1,\"426\":1}}],[\"include\",{\"0\":{\"363\":1,\"457\":1},\"1\":{\"109\":1,\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"365\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"442\":1,\"459\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"invalid\",{\"1\":{\"86\":1}}],[\"inspecto\",{\"1\":{\"215\":1}}],[\"inspect\",{\"1\":{\"215\":2}}],[\"inspired\",{\"1\":{\"66\":1}}],[\"insufficient\",{\"1\":{\"66\":1}}],[\"installed\",{\"1\":{\"159\":1}}],[\"installedchunkdata\",{\"1\":{\"159\":10}}],[\"installedchunks\",{\"1\":{\"159\":12}}],[\"install\",{\"1\":{\"25\":1,\"106\":1,\"135\":1,\"145\":1,\"159\":1,\"387\":2,\"440\":2}}],[\"int\",{\"1\":{\"48\":1}}],[\"int256\",{\"1\":{\"48\":1}}],[\"int24\",{\"1\":{\"48\":1}}],[\"int16\",{\"1\":{\"48\":1}}],[\"int8\",{\"1\":{\"48\":1}}],[\"interlaced\",{\"1\":{\"338\":1,\"340\":1,\"341\":1,\"344\":1,\"346\":1,\"347\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"440\":1}}],[\"interpolatename\",{\"1\":{\"200\":1}}],[\"interface\",{\"0\":{\"60\":1},\"1\":{\"60\":1,\"72\":1,\"83\":1,\"92\":1,\"470\":1,\"471\":1,\"472\":1}}],[\"interactions\",{\"1\":{\"25\":2}}],[\"internal\",{\"1\":{\"2\":1,\"51\":2,\"88\":1}}],[\"indexed\",{\"1\":{\"62\":3,\"77\":1,\"92\":4}}],[\"index\",{\"0\":{\"239\":1,\"264\":1},\"1\":{\"25\":1,\"53\":2,\"55\":2,\"109\":1,\"158\":4,\"159\":4,\"198\":1,\"199\":1,\"201\":3,\"207\":1,\"219\":1,\"223\":2,\"227\":2,\"229\":2,\"233\":2,\"263\":2,\"265\":1,\"270\":5,\"275\":5,\"278\":1,\"282\":3,\"283\":1,\"289\":6,\"291\":1,\"298\":3,\"299\":1,\"304\":4,\"305\":1,\"310\":7,\"311\":1,\"316\":7,\"317\":1,\"321\":2,\"328\":1,\"329\":2,\"330\":2,\"337\":2,\"338\":2,\"339\":1,\"340\":2,\"341\":2,\"343\":2,\"344\":2,\"346\":2,\"347\":3,\"351\":3,\"358\":5,\"362\":2,\"366\":2,\"370\":2,\"374\":2,\"383\":2,\"387\":2,\"393\":1,\"394\":1,\"395\":1,\"396\":1,\"397\":2,\"398\":7,\"405\":1,\"406\":1,\"407\":1,\"408\":1,\"409\":2,\"410\":7,\"414\":2,\"418\":4,\"422\":20,\"426\":8,\"436\":2,\"440\":2,\"445\":3,\"452\":5,\"456\":2,\"460\":2,\"464\":2,\"468\":2}}],[\"initial\",{\"1\":{\"239\":1,\"264\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1,\"341\":2,\"347\":2,\"395\":1,\"407\":1}}],[\"initialize\",{\"1\":{\"80\":2}}],[\"initialvalue\",{\"1\":{\"12\":5}}],[\"init\",{\"1\":{\"25\":3,\"106\":1,\"136\":1,\"146\":1,\"250\":1}}],[\"in\",{\"1\":{\"21\":2,\"40\":1,\"158\":1,\"159\":5,\"351\":2,\"426\":1,\"445\":2,\"469\":1,\"470\":2,\"471\":2,\"472\":4}}],[\"imagemin\",{\"1\":{\"339\":5,\"340\":5,\"345\":5,\"387\":9,\"440\":9}}],[\"imagemingenerate\",{\"1\":{\"338\":1,\"340\":1,\"341\":1,\"344\":1,\"346\":1,\"347\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"440\":1}}],[\"imageminimizerplugin\",{\"1\":{\"338\":3,\"340\":3,\"341\":3,\"344\":3,\"346\":3,\"347\":3,\"387\":3,\"397\":3,\"398\":3,\"409\":3,\"410\":3,\"414\":3,\"418\":6,\"426\":3,\"440\":3}}],[\"image\",{\"0\":{\"384\":1,\"437\":1},\"1\":{\"282\":3,\"338\":1,\"339\":1,\"340\":2,\"341\":1,\"344\":1,\"345\":1,\"346\":1,\"347\":1,\"386\":1,\"387\":2,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"439\":1,\"440\":2,\"442\":1}}],[\"images\",{\"1\":{\"281\":3,\"282\":3,\"387\":2,\"440\":2}}],[\"imgs\",{\"1\":{\"223\":2,\"227\":2,\"229\":2,\"233\":2,\"238\":2,\"240\":1,\"263\":2,\"270\":2,\"275\":2,\"277\":2,\"290\":2,\"321\":2,\"329\":2,\"330\":2,\"334\":2,\"362\":2,\"366\":2,\"370\":2,\"374\":2,\"383\":2,\"387\":2,\"397\":2,\"398\":2,\"409\":2,\"410\":2,\"414\":2,\"418\":4,\"426\":2,\"436\":2,\"440\":2,\"456\":2,\"460\":2,\"464\":2,\"468\":2}}],[\"immutable\",{\"1\":{\"119\":3}}],[\"immer可以阻止无意义的渲染\",{\"1\":{\"12\":1}}],[\"immerhook<s>\",{\"1\":{\"12\":2}}],[\"immer\",{\"0\":{\"10\":1},\"1\":{\"11\":1,\"12\":1,\"140\":1}}],[\"implement\",{\"1\":{\"469\":1,\"470\":1,\"471\":1,\"472\":1}}],[\"implementation\",{\"1\":{\"25\":1,\"66\":1,\"338\":1,\"340\":1,\"341\":1,\"344\":1,\"346\":1,\"347\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"440\":1}}],[\"import的规则解决的\",{\"1\":{\"398\":1,\"410\":1,\"422\":1}}],[\"imports\",{\"1\":{\"351\":1,\"445\":1}}],[\"importstyle\",{\"1\":{\"347\":1}}],[\"importscripts\",{\"1\":{\"159\":1}}],[\"import导入css语法\",{\"1\":{\"201\":1}}],[\"imported\",{\"1\":{\"158\":2,\"351\":8,\"445\":8}}],[\"importloaders\",{\"1\":{\"109\":1}}],[\"import\",{\"0\":{\"67\":1},\"1\":{\"12\":2,\"17\":2,\"25\":5,\"47\":1,\"52\":1,\"56\":1,\"67\":3,\"69\":1,\"70\":2,\"71\":1,\"76\":1,\"106\":1,\"117\":8,\"158\":2,\"159\":2,\"187\":5,\"201\":2,\"249\":2,\"270\":8,\"275\":8,\"289\":9,\"298\":3,\"304\":4,\"310\":6,\"316\":8,\"347\":1,\"351\":4,\"358\":8,\"394\":2,\"395\":2,\"398\":10,\"406\":2,\"407\":2,\"410\":10,\"412\":1,\"422\":35,\"426\":8,\"442\":1,\"445\":4,\"452\":8}}],[\"if终止不了合约\",{\"1\":{\"59\":1}}],[\"if\",{\"1\":{\"6\":4,\"12\":1,\"31\":1,\"33\":2,\"34\":2,\"36\":1,\"39\":5,\"40\":3,\"56\":2,\"59\":3,\"66\":2,\"79\":2,\"90\":4,\"117\":1,\"123\":1,\"124\":1,\"141\":1,\"153\":2,\"154\":2,\"155\":1,\"158\":3,\"159\":28,\"217\":1,\"219\":3,\"351\":2,\"358\":1,\"398\":1,\"410\":1,\"426\":1,\"445\":2,\"452\":1,\"469\":1}}],[\"ip协议栈\",{\"0\":{\"8\":1}}],[\"ip\",{\"1\":{\"1\":3}}],[\"ua\",{\"1\":{\"239\":1,\"264\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1,\"395\":1,\"407\":1}}],[\"u\",{\"1\":{\"159\":2}}],[\"ups\",{\"1\":{\"86\":1}}],[\"updated\",{\"1\":{\"92\":1}}],[\"update\",{\"1\":{\"34\":3,\"35\":2}}],[\"updater<t>\",{\"1\":{\"12\":1}}],[\"updater<s>\",{\"1\":{\"12\":2}}],[\"updater\",{\"1\":{\"12\":4}}],[\"updatevalue\",{\"1\":{\"12\":3}}],[\"usage\",{\"1\":{\"422\":1}}],[\"usdtcontract\",{\"1\":{\"77\":1}}],[\"usdttoken\",{\"1\":{\"76\":2}}],[\"using\",{\"1\":{\"66\":1,\"469\":1,\"470\":1,\"471\":1}}],[\"usebuiltins\",{\"1\":{\"422\":1}}],[\"used\",{\"1\":{\"351\":1,\"445\":1}}],[\"usedeferredvalue\",{\"0\":{\"18\":1},\"1\":{\"18\":1}}],[\"useful\",{\"1\":{\"159\":1}}],[\"use\",{\"1\":{\"52\":1,\"109\":2,\"158\":1,\"159\":2,\"223\":5,\"227\":5,\"229\":5,\"233\":5,\"238\":5,\"263\":5,\"270\":5,\"275\":5,\"277\":5,\"280\":5,\"285\":5,\"290\":5,\"297\":2,\"303\":3,\"309\":4,\"315\":5,\"321\":5,\"329\":5,\"330\":5,\"334\":5,\"337\":5,\"338\":5,\"340\":5,\"341\":4,\"343\":5,\"344\":5,\"346\":5,\"347\":5,\"351\":1,\"362\":5,\"366\":5,\"370\":5,\"374\":6,\"383\":6,\"387\":6,\"397\":6,\"398\":6,\"409\":6,\"410\":6,\"413\":1,\"414\":6,\"418\":12,\"426\":6,\"436\":6,\"440\":6,\"445\":1,\"456\":5,\"460\":5,\"464\":5,\"468\":6}}],[\"uselayouteffect\",{\"1\":{\"21\":1}}],[\"useeffect\",{\"1\":{\"21\":1,\"141\":4}}],[\"uses\",{\"1\":{\"351\":1,\"445\":1}}],[\"usesyncexternalstore\",{\"0\":{\"20\":1}}],[\"usestate\",{\"1\":{\"12\":2,\"17\":2,\"117\":2}}],[\"useinsertioneffect\",{\"0\":{\"21\":1},\"1\":{\"21\":1}}],[\"useid\",{\"0\":{\"19\":1},\"1\":{\"19\":1}}],[\"useimmer<t>\",{\"1\":{\"12\":1}}],[\"useimmer<s\",{\"1\":{\"12\":1}}],[\"usetransition\",{\"0\":{\"17\":1},\"1\":{\"17\":2}}],[\"usecallback\",{\"1\":{\"12\":2}}],[\"user2>\",{\"1\":{\"472\":1}}],[\"user2\",{\"1\":{\"472\":1}}],[\"user1\",{\"1\":{\"472\":1}}],[\"useref\",{\"1\":{\"141\":3}}],[\"users\",{\"1\":{\"55\":3,\"201\":2,\"215\":1,\"387\":2,\"440\":2}}],[\"user\",{\"1\":{\"7\":2,\"55\":13,\"56\":11,\"58\":9,\"269\":1}}],[\"utils\",{\"1\":{\"67\":1,\"196\":4,\"200\":2,\"201\":1,\"215\":1}}],[\"utilities\",{\"1\":{\"25\":1,\"108\":1}}],[\"utf\",{\"1\":{\"48\":1,\"159\":1,\"194\":1,\"239\":1,\"264\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1,\"395\":1,\"407\":1}}],[\"uint24\",{\"1\":{\"48\":1}}],[\"uint256\",{\"1\":{\"48\":2,\"49\":4,\"51\":6,\"52\":6,\"53\":4,\"55\":1,\"56\":1,\"57\":2,\"59\":3,\"60\":2,\"61\":2,\"62\":3,\"66\":12,\"72\":4,\"73\":7,\"75\":5,\"76\":4,\"77\":4,\"78\":2,\"79\":6,\"83\":6,\"84\":1,\"86\":2,\"87\":2,\"88\":3,\"90\":9,\"92\":8}}],[\"uint16\",{\"1\":{\"48\":1}}],[\"uint8\",{\"1\":{\"48\":1,\"55\":2,\"56\":1,\"58\":4,\"66\":1}}],[\"uint\",{\"1\":{\"48\":1,\"50\":7,\"86\":3}}],[\"uid\",{\"1\":{\"34\":1}}],[\"ui\",{\"1\":{\"28\":1,\"133\":1}}],[\"unplugin\",{\"1\":{\"347\":3}}],[\"unlinksync\",{\"1\":{\"217\":1}}],[\"unwound\",{\"1\":{\"159\":1}}],[\"undefined\",{\"1\":{\"158\":2,\"159\":7,\"192\":1,\"329\":1,\"337\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"362\":1,\"366\":1,\"370\":1,\"456\":1,\"460\":1,\"464\":1}}],[\"unused\",{\"1\":{\"158\":2,\"159\":3}}],[\"uncurriedadd\",{\"1\":{\"121\":3}}],[\"uncurryadd\",{\"1\":{\"121\":3}}],[\"uncurrying\",{\"1\":{\"121\":1}}],[\"union\",{\"1\":{\"472\":1}}],[\"universal\",{\"1\":{\"102\":1}}],[\"uniswapv2\",{\"1\":{\"80\":1}}],[\"uniform\",{\"1\":{\"2\":2}}],[\"unmount\",{\"0\":{\"16\":1},\"1\":{\"16\":1}}],[\"unknown>\",{\"1\":{\"12\":1}}],[\"url\",{\"1\":{\"2\":1,\"159\":11,\"279\":1,\"282\":3}}],[\"uri是一种标识资源的方式\",{\"1\":{\"2\":1}}],[\"uri\",{\"1\":{\"2\":1,\"285\":2,\"290\":1}}],[\"skipwaiting\",{\"1\":{\"426\":1}}],[\"svgo\",{\"1\":{\"338\":1,\"339\":1,\"340\":2,\"341\":1,\"344\":1,\"345\":1,\"346\":1,\"347\":1,\"387\":3,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"440\":3}}],[\"smart\",{\"1\":{\"269\":3}}],[\"sw\",{\"1\":{\"426\":3}}],[\"switch\",{\"1\":{\"269\":1}}],[\"swc\",{\"0\":{\"132\":1},\"1\":{\"109\":1,\"132\":1}}],[\"ss$\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"280\":1,\"285\":1,\"290\":1,\"309\":1,\"315\":1,\"321\":1,\"329\":1,\"330\":1,\"334\":1,\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"ssr\",{\"0\":{\"22\":1,\"99\":1,\"101\":1},\"1\":{\"99\":1,\"101\":2,\"102\":2}}],[\"should\",{\"1\":{\"469\":1}}],[\"shorthand\",{\"1\":{\"159\":1}}],[\"shaking\",{\"0\":{\"376\":1,\"429\":1},\"1\":{\"378\":1,\"431\":1,\"442\":1}}],[\"shaking的原理是什么\",{\"0\":{\"180\":1}}],[\"sha256\",{\"1\":{\"84\":1}}],[\"shift\",{\"1\":{\"153\":4}}],[\"scss\",{\"0\":{\"306\":1},\"1\":{\"270\":1,\"275\":1,\"289\":1,\"292\":1,\"310\":2,\"316\":1,\"347\":1,\"358\":1,\"398\":1,\"410\":1,\"422\":4,\"426\":1,\"452\":1}}],[\"scale=1\",{\"1\":{\"239\":1,\"264\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1,\"395\":1,\"407\":1}}],[\"scala\",{\"1\":{\"119\":1}}],[\"schema是options的校验规则\",{\"1\":{\"198\":1}}],[\"schema\",{\"1\":{\"196\":2,\"198\":5,\"199\":4}}],[\"script>\",{\"1\":{\"239\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1}}],[\"scriptname\",{\"1\":{\"219\":3}}],[\"scripturl\",{\"1\":{\"159\":11}}],[\"scripts\",{\"1\":{\"159\":7,\"215\":1,\"331\":2,\"339\":1,\"340\":1,\"345\":1}}],[\"scripts中配置\",{\"1\":{\"133\":1}}],[\"script\",{\"1\":{\"159\":26,\"201\":2,\"219\":2,\"414\":1,\"418\":2,\"426\":1}}],[\"scope=\",{\"1\":{\"145\":1}}],[\"sass\",{\"0\":{\"306\":1,\"310\":1},\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"243\":1,\"263\":1,\"270\":4,\"275\":4,\"277\":1,\"280\":1,\"282\":2,\"285\":1,\"289\":3,\"290\":1,\"292\":1,\"307\":2,\"308\":5,\"309\":1,\"310\":6,\"315\":1,\"316\":3,\"321\":1,\"329\":1,\"330\":1,\"334\":1,\"337\":1,\"338\":1,\"339\":1,\"340\":2,\"341\":1,\"343\":1,\"344\":1,\"345\":1,\"346\":1,\"347\":3,\"358\":3,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":4,\"409\":1,\"410\":4,\"414\":1,\"418\":2,\"422\":12,\"426\":4,\"436\":1,\"440\":1,\"452\":3,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"safe\",{\"1\":{\"219\":1}}],[\"save\",{\"1\":{\"129\":1,\"135\":1}}],[\"saysomething\",{\"1\":{\"65\":2}}],[\"squarednumbers\",{\"1\":{\"122\":2}}],[\"slice\",{\"1\":{\"109\":1,\"153\":2}}],[\"src=\",{\"1\":{\"239\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1}}],[\"src\",{\"1\":{\"106\":1,\"109\":7,\"158\":6,\"159\":14,\"201\":1,\"219\":1,\"223\":2,\"227\":2,\"229\":2,\"233\":2,\"238\":1,\"248\":1,\"251\":3,\"258\":1,\"263\":2,\"270\":2,\"271\":1,\"275\":2,\"277\":1,\"280\":1,\"281\":3,\"282\":3,\"285\":1,\"289\":5,\"290\":1,\"297\":1,\"298\":2,\"303\":1,\"304\":2,\"309\":1,\"310\":3,\"315\":1,\"316\":2,\"321\":2,\"328\":1,\"329\":2,\"330\":2,\"334\":1,\"337\":3,\"338\":3,\"340\":3,\"341\":4,\"343\":3,\"344\":3,\"346\":3,\"347\":5,\"351\":3,\"362\":2,\"366\":3,\"370\":3,\"374\":3,\"383\":3,\"387\":5,\"393\":5,\"394\":4,\"396\":4,\"397\":3,\"398\":3,\"405\":5,\"406\":4,\"408\":4,\"409\":3,\"410\":3,\"414\":3,\"418\":6,\"426\":3,\"436\":3,\"440\":5,\"445\":3,\"456\":2,\"460\":3,\"464\":3,\"468\":3}}],[\"syncloophook\",{\"1\":{\"207\":2}}],[\"syncwaterfallhook\",{\"1\":{\"207\":2}}],[\"syncbailhook\",{\"1\":{\"207\":2}}],[\"synchook\",{\"1\":{\"207\":2,\"214\":1}}],[\"symbol\",{\"1\":{\"158\":3,\"159\":3}}],[\"symbols\",{\"1\":{\"66\":2}}],[\"system\",{\"1\":{\"1\":1}}],[\"sortattrs\",{\"1\":{\"338\":1,\"340\":1,\"341\":1,\"344\":1,\"346\":1,\"347\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"440\":1}}],[\"sourcetype\",{\"1\":{\"269\":1,\"270\":1,\"398\":1,\"410\":1,\"422\":1}}],[\"source>\",{\"1\":{\"215\":1}}],[\"source\",{\"1\":{\"201\":2,\"215\":2,\"216\":5,\"218\":5,\"219\":1,\"337\":1,\"338\":1,\"340\":2,\"341\":2,\"343\":1,\"344\":1,\"346\":2,\"347\":2,\"351\":1,\"353\":4,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"442\":1,\"445\":1,\"447\":4,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"sourcemap\",{\"0\":{\"350\":1,\"444\":1},\"1\":{\"190\":1,\"196\":2,\"352\":1,\"353\":1,\"446\":1,\"447\":1}}],[\"sourceurl=webpack\",{\"1\":{\"158\":2,\"159\":2,\"351\":1,\"445\":1}}],[\"some\",{\"1\":{\"159\":1,\"219\":2}}],[\"somethings\",{\"1\":{\"195\":1}}],[\"something\",{\"1\":{\"65\":2}}],[\"software\",{\"0\":{\"114\":1},\"1\":{\"115\":1,\"117\":1}}],[\"soda\",{\"0\":{\"113\":1},\"1\":{\"113\":2}}],[\"solditytest\",{\"1\":{\"74\":1}}],[\"solitidy\",{\"1\":{\"49\":1}}],[\"solidity是一个专为evm虚拟机运行而设计的高级语言\",{\"1\":{\"63\":1}}],[\"solidity也对合约进行审计\",{\"1\":{\"47\":1}}],[\"solidity语法\",{\"0\":{\"45\":1}}],[\"solidity\",{\"0\":{\"47\":1},\"1\":{\"44\":1,\"46\":1,\"47\":3,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"61\":1,\"62\":1,\"65\":1,\"66\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"77\":1,\"78\":1,\"79\":1,\"80\":1,\"82\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"90\":1,\"92\":1}}],[\"solidity学习网站\",{\"0\":{\"44\":1}}],[\"sol\",{\"0\":{\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"65\":1,\"66\":1,\"67\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"77\":1,\"78\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"90\":1,\"92\":1},\"1\":{\"47\":1,\"52\":1,\"56\":1,\"66\":1,\"67\":3,\"69\":1,\"70\":1,\"71\":1,\"76\":1,\"91\":1,\"92\":1}}],[\"solcjs\",{\"1\":{\"46\":1}}],[\"size\",{\"1\":{\"216\":1,\"218\":2,\"282\":3}}],[\"side\",{\"0\":{\"100\":1,\"101\":1},\"1\":{\"99\":2,\"119\":1}}],[\"sig\",{\"1\":{\"50\":1}}],[\"since\",{\"1\":{\"6\":2}}],[\"split<\",{\"1\":{\"395\":1,\"407\":1}}],[\"splitchunks\",{\"1\":{\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"394\":1,\"396\":1,\"397\":1,\"398\":1,\"406\":1,\"408\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1}}],[\"splitchunks是如何配置的\",{\"0\":{\"177\":1}}],[\"splitted\",{\"1\":{\"216\":3}}],[\"split\",{\"0\":{\"389\":1,\"401\":1},\"1\":{\"201\":1,\"216\":1,\"391\":1,\"403\":1,\"442\":1}}],[\"splice\",{\"1\":{\"154\":1}}],[\"specify\",{\"1\":{\"159\":1}}],[\"spender\",{\"1\":{\"76\":2,\"92\":3}}],[\"spdx\",{\"1\":{\"46\":1,\"47\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"61\":1,\"62\":1,\"65\":1,\"66\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"77\":1,\"78\":1,\"79\":1,\"80\":1,\"82\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"90\":1,\"92\":1}}],[\"spawn\",{\"1\":{\"387\":1,\"440\":1}}],[\"span\",{\"1\":{\"34\":1,\"36\":1}}],[\"span>\",{\"1\":{\"17\":1}}],[\"spa\",{\"1\":{\"28\":1,\"396\":1,\"408\":1}}],[\"supported\",{\"1\":{\"159\":2}}],[\"supporting\",{\"1\":{\"159\":1}}],[\"super\",{\"1\":{\"39\":1,\"71\":1}}],[\"sufficient\",{\"1\":{\"80\":1}}],[\"successevent\",{\"1\":{\"86\":3}}],[\"success\",{\"1\":{\"73\":7,\"74\":2,\"75\":7,\"77\":1,\"79\":4,\"85\":2,\"86\":7}}],[\"sum\",{\"1\":{\"51\":6,\"122\":2,\"248\":1,\"249\":5,\"270\":3,\"275\":3,\"289\":3,\"298\":3,\"304\":3,\"310\":3,\"316\":3,\"358\":6,\"394\":5,\"395\":2,\"398\":6,\"406\":5,\"407\":2,\"410\":6,\"422\":12,\"426\":3,\"452\":6}}],[\"sub\",{\"1\":{\"35\":5}}],[\"substr\",{\"1\":{\"90\":3}}],[\"subs\",{\"1\":{\"35\":3}}],[\"styl\",{\"0\":{\"312\":1,\"316\":1},\"1\":{\"270\":2,\"275\":2,\"282\":2,\"289\":2,\"292\":1,\"314\":1,\"316\":4,\"358\":2,\"398\":2,\"410\":2,\"422\":8,\"426\":2,\"452\":2}}],[\"stylus\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"280\":1,\"285\":1,\"290\":1,\"313\":1,\"314\":1,\"315\":1,\"321\":1,\"329\":1,\"330\":1,\"334\":1,\"337\":1,\"338\":1,\"339\":1,\"340\":2,\"341\":1,\"343\":1,\"344\":1,\"345\":1,\"346\":1,\"347\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"styl$\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"280\":1,\"285\":1,\"290\":1,\"315\":1,\"321\":1,\"329\":1,\"330\":1,\"334\":1,\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"styleel\",{\"1\":{\"201\":6}}],[\"styleloader\",{\"1\":{\"201\":3}}],[\"style\",{\"0\":{\"201\":1},\"1\":{\"117\":1,\"187\":5,\"201\":9,\"221\":1,\"238\":4,\"263\":4,\"270\":4,\"275\":4,\"277\":4,\"280\":4,\"284\":1,\"285\":4,\"290\":4,\"295\":1,\"296\":3,\"297\":1,\"303\":2,\"309\":3,\"315\":4,\"321\":4,\"329\":4,\"330\":4,\"334\":4,\"337\":1,\"339\":1,\"340\":2,\"341\":1,\"343\":1,\"345\":1,\"346\":1,\"347\":1,\"358\":1,\"362\":4,\"366\":4,\"370\":4,\"452\":1,\"456\":4,\"460\":4,\"464\":4}}],[\"styled\",{\"1\":{\"111\":1}}],[\"styles\",{\"1\":{\"109\":4,\"187\":9,\"347\":1}}],[\"str\",{\"1\":{\"90\":4}}],[\"str2hex\",{\"1\":{\"90\":2}}],[\"struct\",{\"1\":{\"55\":2,\"56\":1,\"58\":1}}],[\"strict\",{\"1\":{\"158\":1,\"159\":1,\"351\":1,\"445\":1}}],[\"strictmode>\",{\"1\":{\"15\":2}}],[\"string>\",{\"1\":{\"472\":2}}],[\"strings\",{\"1\":{\"66\":3}}],[\"string\",{\"1\":{\"47\":1,\"48\":1,\"49\":1,\"53\":2,\"54\":3,\"55\":4,\"56\":3,\"58\":4,\"59\":2,\"65\":3,\"66\":7,\"69\":1,\"74\":2,\"83\":3,\"84\":3,\"86\":4,\"90\":1,\"159\":1,\"198\":1,\"470\":2,\"471\":2,\"472\":13}}],[\"store\",{\"1\":{\"159\":1}}],[\"storage\",{\"1\":{\"58\":3}}],[\"storage与memory\",{\"0\":{\"58\":1}}],[\"stories\",{\"1\":{\"25\":10}}],[\"storybookconfig\",{\"1\":{\"25\":4}}],[\"storybook\",{\"0\":{\"25\":1,\"149\":1},\"1\":{\"25\":18,\"149\":1}}],[\"stare\",{\"0\":{\"131\":1},\"1\":{\"131\":7}}],[\"starttransition\",{\"1\":{\"17\":3}}],[\"start\",{\"1\":{\"2\":1,\"159\":1,\"331\":2,\"339\":1,\"340\":1,\"345\":1}}],[\"stacktrace\",{\"1\":{\"159\":1}}],[\"stack\",{\"1\":{\"123\":1,\"159\":1}}],[\"static\",{\"1\":{\"223\":6,\"227\":6,\"229\":6,\"233\":6,\"238\":4,\"239\":1,\"240\":1,\"263\":5,\"270\":5,\"275\":6,\"277\":5,\"289\":1,\"290\":5,\"321\":5,\"329\":5,\"330\":5,\"334\":4,\"337\":3,\"338\":5,\"340\":7,\"341\":7,\"343\":3,\"344\":5,\"346\":7,\"347\":7,\"362\":5,\"366\":5,\"370\":5,\"374\":6,\"383\":6,\"387\":6,\"397\":6,\"398\":8,\"409\":6,\"410\":8,\"414\":8,\"418\":16,\"426\":8,\"436\":6,\"440\":6,\"456\":5,\"460\":5,\"464\":5,\"468\":6}}],[\"staticcall只能调用值\",{\"1\":{\"74\":1}}],[\"staticcall\",{\"0\":{\"74\":1},\"1\":{\"74\":1}}],[\"staticclass\",{\"1\":{\"36\":1}}],[\"statsync\",{\"1\":{\"217\":1}}],[\"states\",{\"1\":{\"109\":2}}],[\"state\",{\"0\":{\"140\":1},\"1\":{\"41\":1}}],[\"stateless\",{\"1\":{\"2\":1}}],[\"status\",{\"1\":{\"2\":1}}],[\"s\",{\"1\":{\"12\":4,\"66\":1,\"159\":4,\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"280\":1,\"285\":1,\"290\":1,\"309\":1,\"315\":1,\"321\":1,\"329\":1,\"330\":1,\"334\":1,\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"serviceworker\",{\"1\":{\"426\":2}}],[\"serviceworkers\",{\"1\":{\"426\":2}}],[\"service\",{\"1\":{\"425\":1,\"426\":6}}],[\"serve\",{\"1\":{\"322\":1,\"325\":1,\"329\":1,\"331\":1,\"339\":1,\"340\":1,\"345\":1,\"426\":4}}],[\"server\",{\"0\":{\"101\":1},\"1\":{\"2\":1,\"99\":1,\"320\":1,\"339\":1,\"340\":1,\"345\":1}}],[\"separate\",{\"1\":{\"351\":1,\"445\":1}}],[\"semi\",{\"1\":{\"269\":1}}],[\"see\",{\"1\":{\"215\":1,\"351\":1,\"445\":1}}],[\"seal\",{\"1\":{\"210\":1}}],[\"sequentialsearch\",{\"1\":{\"155\":3}}],[\"seo\",{\"1\":{\"100\":2,\"101\":1}}],[\"select\",{\"1\":{\"351\":1,\"445\":1}}],[\"selector\",{\"0\":{\"85\":1},\"1\":{\"85\":1}}],[\"selenium\",{\"1\":{\"134\":1}}],[\"selfdestruct\",{\"1\":{\"82\":1}}],[\"self\",{\"1\":{\"39\":2,\"159\":4}}],[\"sendfailed\",{\"1\":{\"79\":1}}],[\"sendeth\",{\"1\":{\"79\":2}}],[\"sender也是你\",{\"1\":{\"74\":1}}],[\"sender只能是合约地址\",{\"1\":{\"74\":1}}],[\"sender只能是你本人\",{\"1\":{\"74\":2}}],[\"sender部署合约的人\",{\"1\":{\"54\":1}}],[\"sender\",{\"1\":{\"50\":1,\"54\":3,\"57\":2,\"59\":1,\"61\":3,\"75\":3,\"76\":1,\"77\":3,\"78\":4,\"80\":2,\"82\":2,\"90\":7}}],[\"send\",{\"1\":{\"56\":1,\"79\":3}}],[\"sex\",{\"1\":{\"55\":5,\"56\":3,\"58\":4}}],[\"setup\",{\"1\":{\"159\":1}}],[\"setuser\",{\"1\":{\"55\":1,\"56\":1,\"58\":1}}],[\"setattribute\",{\"1\":{\"159\":2}}],[\"setage2\",{\"1\":{\"58\":1}}],[\"setage1\",{\"1\":{\"58\":1}}],[\"setdata\",{\"1\":{\"117\":2,\"141\":3}}],[\"setvars\",{\"1\":{\"75\":2}}],[\"setx\",{\"1\":{\"72\":2,\"73\":4}}],[\"setnames\",{\"1\":{\"53\":1,\"54\":1}}],[\"settimeout\",{\"1\":{\"40\":1,\"122\":2,\"159\":1,\"193\":1,\"214\":5}}],[\"set\",{\"1\":{\"31\":2,\"33\":1,\"37\":1,\"159\":1,\"471\":1}}],[\"setcount\",{\"1\":{\"17\":2,\"57\":1}}],[\"session\",{\"1\":{\"2\":1,\"3\":12,\"4\":9}}],[\"以下代码生产模式下会删除\",{\"1\":{\"398\":1,\"410\":1}}],[\"以下是默认值\",{\"1\":{\"394\":1,\"396\":1,\"406\":1,\"408\":1}}],[\"以下是\",{\"1\":{\"136\":1,\"157\":1}}],[\"以下是一些关键特点和目标\",{\"1\":{\"134\":1}}],[\"以下是一些关键特点和用法\",{\"1\":{\"131\":1}}],[\"以下是一些常见的高阶函数的例子\",{\"1\":{\"122\":1}}],[\"以下是一个尾递归的例子\",{\"1\":{\"124\":1}}],[\"以下是一个满足尾调用优化条件的例子\",{\"1\":{\"123\":1}}],[\"以下是函数式编程的一些主要概念和特点\",{\"1\":{\"119\":1}}],[\"以下是导致它们区别的一些原因\",{\"1\":{\"4\":1}}],[\"以下是http协议的一些关键特点和详解\",{\"1\":{\"2\":1}}],[\"以后启动指令\",{\"1\":{\"331\":1}}],[\"以上\",{\"1\":{\"228\":1}}],[\"以上为了测试兼容性所以设置兼容浏览器\",{\"1\":{\"228\":1}}],[\"以\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"263\":1,\"321\":1,\"329\":1,\"330\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"以一个vue项目为例\",{\"0\":{\"174\":1}}],[\"以生成更为高效\",{\"1\":{\"157\":1}}],[\"以保证状态的更新\",{\"1\":{\"141\":1}}],[\"以确保在进行代码更改后没有引入新的视觉问题\",{\"1\":{\"136\":1}}],[\"以确保应用程序在各种环境中的兼容性\",{\"1\":{\"134\":1}}],[\"以确保应用程序在真实用户使用的环境中能够正常运行\",{\"1\":{\"134\":1}}],[\"以满足特定的测试场景\",{\"1\":{\"136\":1}}],[\"以满足你的项目需求\",{\"1\":{\"131\":1}}],[\"以便能够运行在当前和旧版本的浏览器或其他环境中\",{\"1\":{\"272\":1}}],[\"以便检测任何视觉上的变化\",{\"1\":{\"136\":1}}],[\"以便更清晰地处理异步操作和状态更新\",{\"1\":{\"141\":1}}],[\"以便更清晰地查看\",{\"1\":{\"131\":1}}],[\"以便更有针对性地进行性能调试\",{\"1\":{\"116\":1}}],[\"以便在外部函数执行后仍然能够访问外部作用域中的变量\",{\"1\":{\"125\":1}}],[\"以减少函数调用的栈空间占用\",{\"1\":{\"123\":1}}],[\"以支持函数式编程的理念\",{\"1\":{\"119\":1}}],[\"以太坊激励体系内最小的虚拟数字货币单位\",{\"1\":{\"50\":1}}],[\"以react为例\",{\"1\":{\"25\":1}}],[\"以及以上\",{\"1\":{\"421\":1}}],[\"以及对数据进行操作的方法\",{\"1\":{\"28\":1}}],[\"以及在\",{\"1\":{\"4\":1}}],[\"以及响应体\",{\"1\":{\"1\":1}}],[\"t>\",{\"1\":{\"471\":1}}],[\"ttf\",{\"1\":{\"289\":1}}],[\"ttf|woff2\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"290\":1,\"321\":1,\"329\":1,\"330\":1,\"334\":1,\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"typicode\",{\"0\":{\"137\":1}}],[\"type=\",{\"1\":{\"36\":1,\"37\":1,\"39\":5}}],[\"typescript\",{\"1\":{\"274\":2}}],[\"typescripts\",{\"1\":{\"25\":1}}],[\"types\",{\"1\":{\"25\":2,\"130\":1}}],[\"typeof\",{\"1\":{\"12\":2,\"158\":1,\"159\":3}}],[\"type\",{\"1\":{\"12\":3,\"25\":4,\"34\":6,\"106\":1,\"109\":1,\"159\":4,\"198\":2,\"199\":2,\"200\":1,\"223\":2,\"227\":2,\"229\":2,\"233\":2,\"238\":1,\"263\":2,\"270\":2,\"275\":2,\"277\":2,\"280\":1,\"285\":1,\"290\":5,\"321\":2,\"329\":2,\"330\":2,\"334\":2,\"337\":2,\"338\":2,\"340\":2,\"341\":2,\"343\":2,\"344\":2,\"346\":2,\"347\":2,\"362\":2,\"366\":2,\"370\":2,\"374\":2,\"383\":2,\"387\":2,\"397\":2,\"398\":2,\"409\":2,\"410\":2,\"414\":2,\"418\":4,\"426\":2,\"436\":2,\"440\":2,\"456\":2,\"460\":2,\"464\":2,\"468\":2,\"469\":2,\"470\":3,\"471\":3,\"472\":18}}],[\"totype\",{\"1\":{\"337\":1,\"338\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1}}],[\"totalamount\",{\"1\":{\"90\":10}}],[\"totalsupply\",{\"1\":{\"77\":2,\"92\":1}}],[\"tolowercase\",{\"1\":{\"90\":1}}],[\"todo的类型去掉了description\",{\"1\":{\"470\":1}}],[\"todopreview\",{\"1\":{\"470\":2,\"471\":2}}],[\"todo\",{\"1\":{\"81\":1,\"470\":2,\"471\":2,\"472\":1}}],[\"tokenb\",{\"1\":{\"80\":6}}],[\"tokena\",{\"1\":{\"80\":6}}],[\"token1\",{\"1\":{\"80\":2}}],[\"token0\",{\"1\":{\"80\":2}}],[\"token\",{\"1\":{\"76\":1,\"77\":1,\"92\":2}}],[\"tohexstring\",{\"1\":{\"66\":5}}],[\"tostringtag\",{\"1\":{\"158\":2,\"159\":2}}],[\"tostring\",{\"1\":{\"66\":3,\"90\":1}}],[\"to\",{\"1\":{\"62\":5,\"66\":3,\"79\":6,\"85\":2,\"92\":3,\"159\":6,\"337\":1,\"338\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"351\":2,\"445\":2,\"472\":1}}],[\"topics\",{\"1\":{\"62\":2}}],[\"terserplugin\",{\"1\":{\"374\":2,\"383\":2,\"387\":2,\"397\":2,\"398\":2,\"409\":2,\"410\":2,\"414\":2,\"418\":4,\"426\":2,\"436\":2,\"440\":2,\"468\":2}}],[\"terser\",{\"1\":{\"338\":1,\"340\":1,\"341\":1,\"344\":1,\"346\":1,\"347\":1,\"372\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"466\":1,\"468\":1}}],[\"terserwebpackplugin\",{\"1\":{\"338\":2,\"340\":2,\"341\":2,\"344\":2,\"346\":2,\"347\":2}}],[\"template\",{\"1\":{\"159\":1,\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"263\":1,\"321\":1,\"329\":1,\"330\":1,\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"345\":1,\"346\":1,\"347\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"393\":1,\"394\":1,\"396\":1,\"397\":1,\"398\":1,\"405\":1,\"406\":1,\"408\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"temp\",{\"1\":{\"66\":6,\"90\":2}}],[\"tests\",{\"1\":{\"219\":5}}],[\"testplugin\",{\"1\":{\"213\":5,\"214\":12}}],[\"testing\",{\"1\":{\"136\":1}}],[\"test4\",{\"1\":{\"52\":1}}],[\"test3\",{\"1\":{\"52\":1}}],[\"test2\",{\"1\":{\"52\":1}}],[\"test\",{\"1\":{\"39\":1,\"52\":7,\"70\":1,\"71\":1,\"90\":1,\"109\":3,\"117\":1,\"133\":1,\"136\":1,\"187\":6,\"200\":1,\"213\":1,\"219\":4,\"223\":7,\"227\":7,\"229\":7,\"233\":7,\"238\":5,\"263\":7,\"270\":6,\"275\":7,\"277\":6,\"280\":5,\"285\":5,\"290\":6,\"297\":1,\"303\":2,\"309\":3,\"315\":4,\"321\":7,\"328\":1,\"329\":7,\"330\":7,\"334\":6,\"337\":7,\"338\":7,\"340\":7,\"341\":11,\"343\":8,\"344\":8,\"346\":8,\"347\":12,\"360\":1,\"362\":7,\"366\":7,\"370\":7,\"374\":7,\"383\":7,\"387\":7,\"394\":2,\"396\":1,\"397\":7,\"398\":7,\"406\":2,\"408\":1,\"409\":7,\"410\":7,\"414\":7,\"418\":14,\"426\":7,\"436\":7,\"440\":7,\"454\":1,\"456\":7,\"460\":7,\"464\":7,\"468\":7}}],[\"text\",{\"1\":{\"33\":3,\"34\":6,\"36\":4,\"37\":5,\"39\":17}}],[\"timeout\",{\"1\":{\"159\":4}}],[\"timestamp\",{\"1\":{\"50\":1,\"59\":1,\"90\":1}}],[\"tiny\",{\"1\":{\"39\":1}}],[\"title>\",{\"1\":{\"239\":1,\"264\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1,\"395\":1,\"407\":1}}],[\"title\",{\"1\":{\"18\":1,\"470\":3,\"471\":3,\"472\":2}}],[\"threads\",{\"1\":{\"374\":5,\"383\":4,\"387\":4,\"397\":4,\"398\":4,\"409\":4,\"410\":4,\"414\":4,\"418\":8,\"426\":4,\"436\":4,\"440\":4,\"468\":5}}],[\"thread\",{\"0\":{\"371\":1},\"1\":{\"374\":2,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"468\":2}}],[\"throw\",{\"1\":{\"159\":1}}],[\"that\",{\"1\":{\"92\":1,\"472\":1}}],[\"than\",{\"1\":{\"61\":1,\"90\":1}}],[\"thead\",{\"0\":{\"465\":1},\"1\":{\"442\":1}}],[\"thegraph\",{\"1\":{\"91\":2}}],[\"then\",{\"1\":{\"40\":1,\"159\":3,\"395\":1,\"398\":1,\"407\":1,\"410\":1,\"422\":4,\"426\":2,\"470\":1}}],[\"the\",{\"1\":{\"39\":1,\"159\":5,\"351\":4,\"445\":4,\"469\":1,\"470\":1,\"471\":2,\"472\":1}}],[\"theme\",{\"1\":{\"25\":1,\"106\":1,\"341\":1}}],[\"this\",{\"1\":{\"34\":23,\"35\":3,\"36\":1,\"37\":4,\"39\":4,\"40\":13,\"52\":2,\"61\":2,\"76\":1,\"79\":1,\"85\":1,\"90\":1,\"159\":5,\"192\":2,\"193\":1,\"196\":13,\"198\":1,\"199\":2,\"200\":2,\"201\":2,\"216\":2,\"217\":2,\"219\":5,\"351\":1,\"445\":1}}],[\"turborepo\",{\"0\":{\"147\":1},\"1\":{\"147\":1}}],[\"turbo\",{\"1\":{\"26\":1}}],[\"tsx中引用\",{\"1\":{\"117\":1}}],[\"tsx\",{\"1\":{\"106\":1,\"109\":2,\"117\":1}}],[\"ts\",{\"0\":{\"481\":1},\"1\":{\"25\":1,\"109\":1,\"126\":1}}],[\"tappromise注册\",{\"1\":{\"214\":1}}],[\"tappromise\",{\"1\":{\"207\":1,\"214\":2}}],[\"tapasync\",{\"1\":{\"207\":1,\"214\":5,\"216\":1,\"217\":1}}],[\"tapable就是一个观察者\",{\"1\":{\"160\":1}}],[\"tapable\",{\"0\":{\"207\":1},\"1\":{\"160\":1,\"204\":2,\"207\":4,\"209\":1,\"210\":1}}],[\"tap\",{\"1\":{\"207\":1,\"214\":3,\"218\":1,\"219\":3}}],[\"tail\",{\"1\":{\"123\":1}}],[\"tailwind\",{\"1\":{\"25\":3,\"106\":1,\"108\":3}}],[\"tailwindcss\",{\"0\":{\"104\":1},\"1\":{\"25\":5,\"106\":3,\"109\":1}}],[\"target==\",{\"1\":{\"33\":1}}],[\"target\",{\"1\":{\"33\":2,\"34\":2,\"39\":1,\"155\":2,\"159\":3}}],[\"tanstack\",{\"1\":{\"26\":1}}],[\"tagname\",{\"1\":{\"219\":2}}],[\"tags\",{\"1\":{\"219\":2}}],[\"tag\",{\"1\":{\"25\":2,\"159\":1,\"219\":5}}],[\"tree\",{\"0\":{\"180\":1,\"376\":1,\"429\":1},\"1\":{\"378\":1,\"431\":1,\"442\":1}}],[\"trying\",{\"1\":{\"351\":1,\"445\":1}}],[\"try\",{\"1\":{\"86\":2,\"141\":3,\"159\":1,\"217\":1}}],[\"trycatch\",{\"0\":{\"86\":1},\"1\":{\"86\":1}}],[\"truffle\",{\"0\":{\"42\":1},\"1\":{\"42\":1}}],[\"true\",{\"1\":{\"12\":2,\"25\":2,\"40\":2,\"59\":1,\"76\":1,\"77\":1,\"86\":1,\"90\":1,\"109\":1,\"117\":2,\"141\":1,\"158\":2,\"159\":4,\"194\":2,\"199\":1,\"200\":1,\"219\":1,\"223\":2,\"227\":2,\"229\":2,\"233\":2,\"263\":1,\"269\":1,\"270\":3,\"275\":1,\"277\":1,\"290\":1,\"321\":2,\"329\":2,\"330\":2,\"334\":1,\"337\":8,\"338\":7,\"340\":9,\"341\":12,\"343\":9,\"344\":8,\"345\":2,\"346\":12,\"347\":12,\"358\":2,\"362\":3,\"366\":3,\"370\":5,\"374\":5,\"383\":4,\"387\":6,\"393\":1,\"394\":5,\"396\":3,\"397\":6,\"398\":8,\"405\":1,\"406\":5,\"408\":3,\"409\":6,\"410\":8,\"414\":6,\"418\":12,\"422\":3,\"426\":8,\"436\":4,\"440\":6,\"452\":2,\"456\":3,\"460\":3,\"464\":5,\"468\":5,\"472\":8}}],[\"trimedstr\",{\"1\":{\"90\":4}}],[\"trim\",{\"1\":{\"39\":1,\"90\":1}}],[\"transform\",{\"1\":{\"199\":1,\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"382\":2,\"383\":2,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"435\":2,\"436\":2,\"440\":1,\"442\":1}}],[\"transferfrom\",{\"1\":{\"92\":1}}],[\"transfereth\",{\"1\":{\"79\":1}}],[\"transfernotowner\",{\"1\":{\"56\":2}}],[\"transfer\",{\"1\":{\"2\":1,\"61\":1,\"62\":3,\"79\":2,\"90\":3,\"92\":2}}],[\"travis\",{\"0\":{\"138\":1}}],[\"trackallpurecomponents\",{\"1\":{\"117\":1}}],[\"tracing\",{\"1\":{\"29\":1}}],[\"t\",{\"1\":{\"12\":1,\"53\":1,\"469\":1,\"470\":3,\"471\":2,\"472\":11}}],[\"tls加密通信\",{\"1\":{\"2\":1}}],[\"tcp慢\",{\"1\":{\"9\":1}}],[\"tcp\",{\"1\":{\"1\":2}}],[\"historyapifallback\",{\"1\":{\"337\":1,\"340\":1,\"341\":1,\"343\":1,\"346\":1,\"347\":1}}],[\"higher\",{\"1\":{\"119\":1}}],[\"h1>\",{\"1\":{\"239\":1,\"264\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1,\"395\":1,\"407\":1}}],[\"hmr\",{\"1\":{\"159\":2,\"357\":1,\"358\":1,\"451\":1,\"452\":1}}],[\"husky\",{\"0\":{\"137\":1}}],[\"hotmodulereplacement\",{\"0\":{\"355\":1,\"449\":1},\"1\":{\"357\":1,\"442\":1,\"451\":1}}],[\"hot\",{\"1\":{\"337\":1,\"340\":1,\"341\":1,\"343\":1,\"346\":1,\"347\":1,\"358\":5,\"362\":1,\"366\":1,\"370\":1,\"398\":2,\"410\":2,\"452\":5,\"456\":1,\"460\":1,\"464\":1}}],[\"hotpink\",{\"1\":{\"310\":1}}],[\"host\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"321\":1,\"329\":1,\"330\":1,\"337\":1,\"340\":1,\"341\":1,\"343\":1,\"346\":1,\"347\":1,\"358\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"452\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"home\",{\"1\":{\"117\":1}}],[\"hookmap\",{\"1\":{\"207\":2}}],[\"hooks\",{\"1\":{\"109\":2,\"206\":1,\"207\":1,\"209\":2,\"210\":2,\"214\":7,\"216\":2,\"217\":2,\"218\":2,\"219\":4}}],[\"hook\",{\"0\":{\"12\":1,\"214\":1},\"1\":{\"209\":1,\"210\":1,\"214\":1}}],[\"harmony\",{\"1\":{\"158\":4,\"159\":4,\"351\":8,\"445\":8}}],[\"hardhat对solidity做了扩充\",{\"1\":{\"47\":1}}],[\"hardhat\",{\"1\":{\"47\":1,\"56\":1,\"67\":1,\"69\":1}}],[\"have\",{\"1\":{\"90\":1,\"159\":1}}],[\"hasownproperty\",{\"1\":{\"158\":1,\"159\":2}}],[\"haskell\",{\"1\":{\"120\":1}}],[\"hash值取8位\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"290\":1,\"321\":1,\"329\":1,\"330\":1,\"334\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"hash\",{\"0\":{\"84\":1},\"1\":{\"84\":2,\"200\":1,\"210\":1,\"223\":4,\"227\":4,\"229\":4,\"233\":4,\"238\":3,\"263\":4,\"270\":4,\"275\":4,\"277\":4,\"290\":4,\"321\":4,\"329\":4,\"330\":4,\"334\":4,\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"362\":4,\"366\":4,\"370\":4,\"374\":4,\"383\":4,\"387\":4,\"397\":4,\"398\":5,\"409\":4,\"410\":5,\"414\":5,\"417\":7,\"418\":14,\"426\":5,\"436\":4,\"440\":4,\"456\":4,\"460\":4,\"464\":4,\"468\":4}}],[\"hasha\",{\"1\":{\"59\":2}}],[\"has\",{\"1\":{\"34\":1,\"40\":3,\"351\":1,\"445\":1}}],[\"handleclick\",{\"1\":{\"17\":2,\"117\":2}}],[\"height\",{\"1\":{\"282\":3,\"298\":1,\"304\":1,\"310\":2,\"316\":1,\"351\":1,\"445\":1}}],[\"help\",{\"1\":{\"215\":1}}],[\"helloworld\",{\"1\":{\"47\":1,\"50\":1}}],[\"hello\",{\"0\":{\"47\":1},\"1\":{\"33\":2,\"37\":2,\"39\":1,\"47\":2,\"49\":2,\"65\":2,\"66\":1,\"69\":1,\"70\":1,\"71\":1,\"74\":1,\"87\":1,\"117\":1,\"122\":2,\"189\":1,\"393\":2,\"394\":2,\"395\":2,\"405\":2,\"406\":2,\"407\":2,\"422\":4,\"426\":1}}],[\"hex2str\",{\"1\":{\"90\":2}}],[\"hexadecimal\",{\"1\":{\"66\":2}}],[\"hex\",{\"1\":{\"66\":3,\"90\":2}}],[\"head>\",{\"1\":{\"239\":1,\"264\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1,\"395\":1,\"407\":1}}],[\"headtags\",{\"1\":{\"219\":2}}],[\"headers\",{\"1\":{\"2\":1}}],[\"head\",{\"1\":{\"2\":1,\"159\":1,\"201\":2}}],[\"h2>\",{\"1\":{\"17\":1}}],[\"hypertext\",{\"1\":{\"2\":1}}],[\"html>\",{\"1\":{\"239\":2,\"264\":2,\"289\":2,\"298\":2,\"304\":2,\"310\":2,\"316\":2,\"395\":2,\"407\":2}}],[\"htmlwebpackplugin\",{\"1\":{\"219\":2,\"223\":2,\"227\":2,\"229\":2,\"233\":2,\"263\":2,\"264\":1,\"321\":2,\"329\":2,\"330\":2,\"337\":2,\"338\":2,\"340\":2,\"341\":2,\"343\":2,\"344\":2,\"346\":2,\"347\":2,\"362\":2,\"366\":2,\"370\":2,\"374\":2,\"383\":2,\"387\":2,\"393\":2,\"394\":2,\"396\":2,\"397\":2,\"398\":2,\"405\":2,\"406\":2,\"408\":2,\"409\":2,\"410\":2,\"414\":2,\"418\":4,\"426\":2,\"436\":2,\"440\":2,\"456\":2,\"460\":2,\"464\":2,\"468\":2}}],[\"html\",{\"0\":{\"236\":1,\"239\":1,\"261\":1,\"264\":1},\"1\":{\"1\":3,\"28\":1,\"100\":3,\"101\":5,\"106\":1,\"131\":3,\"219\":5,\"223\":3,\"227\":3,\"229\":3,\"233\":3,\"236\":1,\"262\":1,\"263\":3,\"265\":1,\"278\":1,\"283\":1,\"289\":1,\"291\":1,\"298\":1,\"299\":1,\"304\":1,\"305\":1,\"310\":1,\"311\":1,\"316\":1,\"317\":1,\"321\":3,\"324\":1,\"328\":1,\"329\":3,\"330\":3,\"337\":4,\"338\":4,\"339\":1,\"340\":3,\"341\":4,\"343\":3,\"344\":3,\"345\":1,\"346\":3,\"347\":3,\"362\":3,\"366\":3,\"370\":3,\"374\":3,\"383\":3,\"387\":3,\"393\":3,\"394\":2,\"395\":1,\"396\":2,\"397\":3,\"398\":3,\"405\":3,\"406\":2,\"407\":1,\"408\":2,\"409\":3,\"410\":3,\"414\":3,\"418\":6,\"426\":4,\"436\":3,\"440\":3,\"456\":3,\"460\":3,\"464\":3,\"468\":3}}],[\"https\",{\"0\":{\"137\":1,\"138\":1},\"1\":{\"23\":1,\"25\":1,\"39\":1,\"44\":3,\"66\":1,\"67\":1,\"91\":2,\"93\":1,\"94\":1,\"106\":1,\"126\":2,\"207\":1,\"215\":1,\"269\":2,\"341\":1,\"351\":2,\"445\":2}}],[\"https是基于http的安全协议\",{\"1\":{\"2\":1}}],[\"http缓存机制的合理使用可以显著提升web应用的性能\",{\"1\":{\"7\":1}}],[\"http缓存机制主要涉及两个方面\",{\"1\":{\"5\":1}}],[\"http缓存机制是一种通过在客户端和服务器之间存储已请求资源的副本来提高性能\",{\"1\":{\"5\":1}}],[\"http缓存机制\",{\"0\":{\"5\":1}}],[\"httponly\",{\"1\":{\"4\":1}}],[\"http的版本也在不断更新\",{\"1\":{\"2\":1}}],[\"http是互联网上最基本\",{\"1\":{\"2\":1}}],[\"http是一个请求\",{\"1\":{\"2\":1}}],[\"http通过cookie和session机制支持状态保持\",{\"1\":{\"2\":1}}],[\"http报文分为请求报文和响应报文\",{\"1\":{\"2\":1}}],[\"http响应包含一个状态码\",{\"1\":{\"2\":1}}],[\"http定义了一些请求方法\",{\"1\":{\"2\":1}}],[\"http协议是无状态的\",{\"1\":{\"2\":1}}],[\"http协议详解\",{\"0\":{\"2\":1}}],[\"http\",{\"0\":{\"0\":1},\"1\":{\"1\":5,\"2\":2,\"3\":1,\"4\":1,\"145\":1,\"239\":1,\"264\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1,\"395\":1,\"407\":1,\"426\":3}}],[\"222\",{\"1\":{\"214\":2}}],[\"2300\",{\"1\":{\"79\":2}}],[\"25\",{\"1\":{\"66\":1,\"122\":1}}],[\"255\",{\"1\":{\"48\":1}}],[\"2的8次幂\",{\"1\":{\"48\":1}}],[\"28\",{\"1\":{\"6\":2}}],[\"20\",{\"1\":{\"52\":1,\"339\":1,\"341\":1,\"347\":1,\"394\":2,\"396\":1,\"406\":2,\"408\":1}}],[\"2023\",{\"1\":{\"6\":2}}],[\"20000\",{\"1\":{\"394\":1,\"396\":1,\"406\":1,\"408\":1}}],[\"2000\",{\"1\":{\"214\":2}}],[\"200\",{\"1\":{\"2\":1}}],[\"21\",{\"1\":{\"6\":2}}],[\"2\",{\"0\":{\"48\":1,\"66\":1,\"71\":1,\"106\":1,\"190\":1,\"193\":1,\"223\":1,\"227\":1,\"233\":1,\"239\":1,\"249\":1,\"263\":1,\"269\":1,\"274\":1,\"278\":1,\"281\":1,\"289\":1,\"296\":1,\"302\":1,\"308\":1,\"314\":1,\"321\":1,\"329\":1,\"335\":1,\"394\":1,\"406\":1},\"1\":{\"1\":1,\"33\":1,\"48\":1,\"49\":1,\"52\":1,\"56\":3,\"58\":1,\"62\":1,\"66\":4,\"83\":4,\"86\":3,\"90\":5,\"109\":1,\"120\":2,\"121\":1,\"122\":6,\"153\":2,\"154\":1,\"155\":1,\"159\":2,\"201\":1,\"213\":1,\"214\":1,\"215\":2,\"223\":1,\"227\":1,\"228\":1,\"229\":1,\"233\":1,\"249\":2,\"259\":1,\"263\":1,\"269\":1,\"270\":3,\"275\":2,\"281\":1,\"282\":1,\"289\":2,\"298\":2,\"304\":2,\"310\":2,\"316\":2,\"321\":1,\"329\":1,\"330\":1,\"339\":9,\"340\":6,\"345\":8,\"358\":4,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"394\":4,\"395\":1,\"396\":1,\"397\":1,\"398\":5,\"406\":4,\"407\":1,\"408\":1,\"409\":1,\"410\":5,\"414\":1,\"418\":2,\"422\":9,\"426\":4,\"436\":1,\"440\":1,\"452\":4,\"456\":1,\"460\":1,\"464\":1,\"468\":1,\"469\":2,\"472\":3}}],[\"cpus\",{\"1\":{\"374\":2,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"468\":2}}],[\"cpu核数\",{\"1\":{\"374\":2,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"468\":2}}],[\"cpu\",{\"1\":{\"374\":2,\"468\":2}}],[\"cn\",{\"1\":{\"341\":1}}],[\"customize\",{\"1\":{\"341\":1}}],[\"currently\",{\"1\":{\"159\":1}}],[\"currentscript\",{\"1\":{\"159\":2}}],[\"current\",{\"1\":{\"141\":2}}],[\"curriedadd\",{\"1\":{\"121\":3}}],[\"curryadd\",{\"1\":{\"120\":3,\"121\":3}}],[\"curry\",{\"1\":{\"120\":2}}],[\"currying\",{\"1\":{\"120\":1}}],[\"curcharcode\",{\"1\":{\"90\":3}}],[\"cross\",{\"1\":{\"339\":3,\"340\":4,\"345\":3,\"346\":1,\"347\":1}}],[\"create\",{\"1\":{\"159\":1,\"351\":1,\"445\":1}}],[\"createelement\",{\"1\":{\"159\":1,\"201\":2}}],[\"create2\",{\"0\":{\"81\":1}}],[\"createpair\",{\"1\":{\"80\":1}}],[\"createdocumentfragment\",{\"1\":{\"39\":1}}],[\"createroot\",{\"0\":{\"15\":1},\"1\":{\"15\":1,\"117\":2}}],[\"cjs\",{\"1\":{\"201\":3,\"351\":6,\"445\":6}}],[\"cd使用的是什么\",{\"0\":{\"175\":1}}],[\"cva\",{\"0\":{\"150\":1},\"1\":{\"150\":1}}],[\"ci\",{\"0\":{\"138\":1}}],[\"cypress\",{\"0\":{\"135\":1},\"1\":{\"134\":1,\"135\":1}}],[\"cwd\",{\"1\":{\"109\":1}}],[\"cli\",{\"1\":{\"215\":5,\"250\":1,\"269\":2,\"339\":2,\"340\":2,\"345\":5,\"393\":1,\"405\":1}}],[\"clientsclaim\",{\"1\":{\"426\":1}}],[\"client\",{\"0\":{\"100\":1},\"1\":{\"99\":1,\"117\":1}}],[\"clear\",{\"1\":{\"393\":1,\"405\":1}}],[\"cleartimeout\",{\"1\":{\"159\":1}}],[\"cleanwebpackplugin\",{\"0\":{\"217\":1},\"1\":{\"217\":3}}],[\"cleanlogloader\",{\"1\":{\"197\":1}}],[\"clean\",{\"0\":{\"197\":1},\"1\":{\"197\":1,\"217\":1,\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"290\":1,\"321\":1,\"329\":1,\"330\":1,\"334\":1,\"338\":1,\"340\":1,\"341\":1,\"344\":1,\"346\":1,\"347\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"394\":1,\"396\":1,\"397\":1,\"398\":1,\"406\":1,\"408\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1,\"471\":1}}],[\"closetag\",{\"1\":{\"219\":1}}],[\"closurefunction\",{\"1\":{\"125\":4}}],[\"closure\",{\"1\":{\"125\":1}}],[\"clojure和部分支持的编程语言\",{\"1\":{\"119\":1}}],[\"class\",{\"1\":{\"213\":1,\"214\":1,\"216\":1,\"217\":1,\"218\":1,\"219\":1}}],[\"class=\",{\"1\":{\"105\":1,\"239\":5,\"264\":8,\"289\":8,\"298\":1,\"304\":2,\"310\":4,\"316\":5}}],[\"classnames\",{\"1\":{\"25\":1}}],[\"classname=\",{\"1\":{\"17\":1}}],[\"csr\",{\"0\":{\"99\":1,\"100\":1},\"1\":{\"99\":1,\"100\":1,\"102\":2}}],[\"css压缩也可以写到optimization\",{\"1\":{\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"468\":1}}],[\"css压缩\",{\"1\":{\"233\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"468\":1}}],[\"cssminimizerplugin\",{\"1\":{\"233\":2,\"338\":2,\"340\":2,\"341\":2,\"344\":2,\"346\":2,\"347\":2,\"374\":3,\"383\":3,\"387\":3,\"397\":3,\"398\":3,\"409\":3,\"410\":3,\"414\":3,\"418\":6,\"426\":3,\"436\":3,\"440\":3,\"468\":3}}],[\"css资源\",{\"1\":{\"201\":1}}],[\"css$\",{\"1\":{\"109\":1,\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"280\":1,\"285\":1,\"290\":1,\"297\":1,\"303\":1,\"309\":1,\"315\":1,\"321\":1,\"329\":1,\"330\":1,\"334\":1,\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"cssdb\",{\"1\":{\"106\":1}}],[\"css5了\",{\"1\":{\"106\":1}}],[\"css框架排名\",{\"1\":{\"104\":1}}],[\"css入口文件\",{\"1\":{\"25\":1}}],[\"css\",{\"0\":{\"104\":1,\"220\":1,\"221\":1,\"225\":1,\"231\":1,\"294\":1,\"298\":1},\"1\":{\"21\":2,\"25\":2,\"41\":1,\"106\":1,\"109\":9,\"117\":1,\"187\":10,\"201\":7,\"215\":1,\"216\":1,\"221\":2,\"222\":1,\"223\":8,\"227\":8,\"229\":5,\"232\":1,\"233\":6,\"238\":5,\"243\":2,\"254\":1,\"263\":5,\"270\":9,\"275\":9,\"277\":5,\"280\":5,\"285\":5,\"289\":6,\"290\":5,\"292\":1,\"295\":1,\"296\":3,\"297\":2,\"298\":5,\"302\":1,\"303\":3,\"304\":2,\"308\":1,\"309\":4,\"310\":2,\"314\":1,\"315\":5,\"316\":2,\"321\":5,\"329\":5,\"330\":5,\"334\":5,\"337\":2,\"338\":8,\"339\":3,\"340\":11,\"341\":7,\"343\":2,\"344\":8,\"345\":3,\"346\":8,\"347\":7,\"351\":19,\"358\":5,\"362\":5,\"366\":5,\"370\":5,\"374\":6,\"383\":6,\"387\":6,\"397\":6,\"398\":12,\"409\":6,\"410\":12,\"414\":8,\"417\":1,\"418\":16,\"422\":16,\"426\":12,\"436\":6,\"440\":6,\"445\":19,\"452\":5,\"456\":5,\"460\":5,\"464\":5,\"468\":6}}],[\"csssheets\",{\"1\":{\"1\":1}}],[\"c中的状态变量受影响\",{\"1\":{\"75\":1}}],[\"c++指针\",{\"1\":{\"58\":1}}],[\"case\",{\"1\":{\"269\":1}}],[\"catch失败的assert\",{\"1\":{\"86\":1}}],[\"catch\",{\"1\":{\"86\":6,\"141\":3,\"159\":1,\"217\":1,\"426\":1}}],[\"catchbyte\",{\"1\":{\"86\":2}}],[\"catchevent\",{\"1\":{\"86\":3}}],[\"calls\",{\"1\":{\"351\":1,\"445\":1}}],[\"callsetvars\",{\"1\":{\"75\":1}}],[\"callsetx\",{\"1\":{\"72\":1,\"73\":1}}],[\"callback\",{\"1\":{\"122\":2,\"159\":2,\"192\":3,\"193\":2,\"196\":4,\"199\":2,\"214\":8,\"216\":2,\"217\":2,\"269\":1}}],[\"calldata\",{\"0\":{\"88\":1},\"1\":{\"88\":4}}],[\"calldata的前四个字节\",{\"1\":{\"50\":1}}],[\"call不成功的情况下\",{\"1\":{\"86\":1}}],[\"call成功的情况下\",{\"1\":{\"86\":2}}],[\"callwithsignature\",{\"1\":{\"85\":1}}],[\"callfailed\",{\"1\":{\"79\":1}}],[\"calleth\",{\"1\":{\"79\":1}}],[\"call中使用try\",{\"1\":{\"86\":1}}],[\"call中\",{\"1\":{\"74\":1}}],[\"callhello\",{\"1\":{\"74\":1}}],[\"call\",{\"0\":{\"73\":1},\"1\":{\"73\":8,\"74\":1,\"75\":5,\"79\":3,\"85\":1,\"86\":1,\"123\":1,\"158\":1,\"159\":1}}],[\"callgetx\",{\"1\":{\"72\":1,\"73\":1}}],[\"callcontract\",{\"1\":{\"72\":1}}],[\"callparentsuper\",{\"1\":{\"71\":1}}],[\"can\",{\"1\":{\"61\":1,\"413\":1}}],[\"cachegroups\",{\"1\":{\"341\":1,\"347\":1,\"394\":2,\"396\":1,\"406\":2,\"408\":1}}],[\"cachelocation\",{\"1\":{\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"464\":1,\"468\":1}}],[\"cachecompression\",{\"1\":{\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"370\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"464\":1}}],[\"cachedirectory\",{\"1\":{\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":2,\"344\":2,\"346\":2,\"347\":2,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"464\":1,\"468\":1}}],[\"cachedmodule\",{\"1\":{\"158\":3,\"159\":3}}],[\"cache\",{\"0\":{\"367\":1,\"415\":1,\"461\":1},\"1\":{\"6\":3,\"7\":5,\"158\":3,\"159\":4,\"337\":2,\"338\":2,\"340\":2,\"341\":2,\"343\":3,\"344\":3,\"346\":3,\"347\":3,\"370\":2,\"374\":2,\"383\":2,\"387\":2,\"397\":2,\"398\":2,\"409\":2,\"410\":2,\"414\":2,\"418\":4,\"426\":2,\"436\":2,\"440\":2,\"442\":2,\"464\":2,\"468\":2}}],[\"cheap\",{\"1\":{\"337\":1,\"340\":1,\"341\":1,\"343\":1,\"346\":1,\"347\":1,\"353\":2,\"362\":1,\"366\":1,\"370\":1,\"447\":2,\"456\":1,\"460\":1,\"464\":1}}],[\"checkunique\",{\"1\":{\"88\":2}}],[\"check\",{\"1\":{\"80\":1}}],[\"chunkhash\",{\"1\":{\"417\":1}}],[\"chunk的name是啥呢\",{\"1\":{\"393\":1,\"394\":1,\"396\":1,\"405\":1,\"406\":1,\"408\":1}}],[\"chunkloadingglobal\",{\"1\":{\"159\":5}}],[\"chunkloaderror\",{\"1\":{\"159\":1}}],[\"chunkids\",{\"1\":{\"159\":5}}],[\"chunkid\",{\"1\":{\"159\":22}}],[\"chunks\",{\"1\":{\"159\":5,\"210\":1,\"337\":1,\"338\":1,\"340\":1,\"341\":3,\"343\":1,\"344\":1,\"346\":1,\"347\":3,\"394\":1,\"396\":1,\"397\":1,\"398\":1,\"406\":1,\"408\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1}}],[\"chunk\",{\"1\":{\"159\":15,\"210\":4,\"219\":1,\"337\":1,\"338\":2,\"340\":3,\"341\":5,\"343\":1,\"344\":2,\"346\":3,\"347\":5,\"394\":2,\"396\":1,\"398\":2,\"406\":2,\"408\":1,\"410\":2,\"414\":2,\"417\":1,\"418\":4,\"426\":2}}],[\"chunkfilename\",{\"1\":{\"109\":1,\"337\":1,\"338\":2,\"340\":2,\"341\":2,\"343\":1,\"344\":2,\"346\":2,\"347\":2,\"398\":2,\"410\":2,\"414\":2,\"418\":4,\"426\":2}}],[\"charset=\",{\"1\":{\"239\":1,\"264\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1,\"395\":1,\"407\":1}}],[\"charset\",{\"1\":{\"159\":1}}],[\"charcodeat\",{\"1\":{\"90\":1}}],[\"chainsafe\",{\"1\":{\"135\":1}}],[\"chainlink\",{\"1\":{\"91\":2}}],[\"child\",{\"1\":{\"39\":4}}],[\"chrome\",{\"1\":{\"29\":1,\"215\":1}}],[\"cb\",{\"1\":{\"34\":1,\"40\":1}}],[\"c\",{\"1\":{\"17\":2,\"36\":2,\"75\":3,\"88\":1,\"90\":2,\"201\":2,\"215\":1,\"249\":2,\"387\":2,\"394\":2,\"406\":2,\"440\":2}}],[\"copy\",{\"1\":{\"337\":1,\"338\":1,\"339\":1,\"341\":1,\"343\":1,\"345\":1,\"346\":1,\"347\":1}}],[\"copyplugin\",{\"1\":{\"337\":2,\"338\":2,\"341\":2,\"343\":2,\"344\":1,\"346\":2,\"347\":2}}],[\"cover\",{\"1\":{\"282\":3}}],[\"collections\",{\"1\":{\"119\":1}}],[\"color\",{\"1\":{\"25\":1,\"61\":1,\"298\":1,\"304\":1,\"310\":2,\"316\":1,\"341\":1,\"351\":1,\"445\":1}}],[\"code\",{\"0\":{\"389\":1,\"401\":1},\"1\":{\"90\":1,\"159\":1,\"199\":1,\"248\":1,\"387\":2,\"391\":1,\"403\":1,\"440\":2,\"442\":1}}],[\"codes\",{\"1\":{\"2\":1}}],[\"coinbase\",{\"1\":{\"50\":1}}],[\"corejs\",{\"1\":{\"422\":1}}],[\"core\",{\"0\":{\"419\":1},\"1\":{\"25\":2,\"199\":2,\"215\":1,\"275\":1,\"339\":1,\"340\":1,\"345\":1,\"421\":1,\"422\":4,\"442\":1}}],[\"count\",{\"1\":{\"17\":3,\"56\":1,\"90\":7,\"248\":1,\"249\":5,\"270\":3,\"275\":3,\"289\":3,\"298\":3,\"304\":3,\"310\":3,\"316\":3,\"358\":6,\"398\":2,\"410\":2,\"422\":12,\"426\":3,\"452\":6}}],[\"concat\",{\"1\":{\"154\":1}}],[\"converts\",{\"1\":{\"66\":3}}],[\"cond\",{\"1\":{\"56\":2}}],[\"console\",{\"1\":{\"31\":2,\"34\":2,\"40\":1,\"47\":2,\"56\":1,\"67\":1,\"69\":2,\"90\":2,\"117\":1,\"120\":2,\"121\":1,\"122\":2,\"123\":1,\"124\":1,\"125\":1,\"141\":3,\"155\":2,\"158\":1,\"159\":2,\"189\":1,\"195\":1,\"197\":1,\"213\":2,\"214\":9,\"249\":2,\"270\":2,\"275\":2,\"289\":2,\"298\":2,\"304\":2,\"310\":2,\"316\":2,\"358\":4,\"393\":2,\"394\":4,\"395\":2,\"398\":3,\"405\":2,\"406\":4,\"407\":2,\"410\":3,\"422\":12,\"426\":6,\"452\":4}}],[\"constructs\",{\"1\":{\"470\":1,\"471\":1}}],[\"constructor\",{\"1\":{\"40\":1,\"47\":1,\"49\":1,\"50\":1,\"52\":1,\"53\":1,\"54\":1,\"56\":1,\"57\":1,\"61\":1,\"79\":1,\"80\":1,\"86\":2,\"90\":1,\"213\":3,\"214\":3,\"216\":1,\"219\":1}}],[\"constant\",{\"1\":{\"49\":1,\"66\":1}}],[\"const\",{\"1\":{\"12\":1,\"15\":1,\"17\":3,\"19\":1,\"25\":3,\"48\":1,\"51\":1,\"109\":9,\"117\":5,\"120\":1,\"121\":1,\"122\":7,\"125\":1,\"141\":7,\"158\":1,\"159\":1,\"193\":1,\"196\":1,\"198\":3,\"199\":4,\"200\":2,\"201\":6,\"216\":5,\"217\":6,\"218\":1,\"219\":3,\"223\":4,\"227\":4,\"229\":5,\"233\":6,\"238\":1,\"258\":1,\"263\":3,\"270\":2,\"275\":4,\"277\":1,\"280\":1,\"285\":1,\"290\":1,\"297\":1,\"303\":1,\"309\":1,\"315\":1,\"321\":3,\"329\":3,\"330\":3,\"334\":1,\"337\":6,\"338\":9,\"340\":10,\"341\":11,\"343\":7,\"344\":10,\"346\":12,\"347\":15,\"351\":1,\"358\":4,\"362\":3,\"366\":3,\"370\":3,\"374\":11,\"383\":9,\"387\":10,\"393\":2,\"394\":3,\"396\":2,\"397\":10,\"398\":12,\"405\":2,\"406\":3,\"408\":2,\"409\":10,\"410\":12,\"414\":11,\"418\":22,\"422\":12,\"426\":16,\"436\":9,\"440\":10,\"445\":1,\"452\":4,\"456\":3,\"460\":3,\"464\":3,\"468\":11,\"469\":1,\"470\":1,\"471\":1}}],[\"context\",{\"1\":{\"196\":2,\"201\":1,\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"263\":1,\"270\":1,\"275\":1,\"321\":1,\"329\":1,\"330\":1,\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"contextify\",{\"1\":{\"196\":2,\"201\":1}}],[\"content=\",{\"1\":{\"239\":2,\"264\":2,\"289\":2,\"298\":2,\"304\":2,\"310\":2,\"316\":2,\"395\":2,\"407\":2}}],[\"content是一个buffer数据\",{\"1\":{\"194\":1}}],[\"contenthash\",{\"1\":{\"109\":2,\"338\":4,\"340\":4,\"341\":4,\"344\":4,\"346\":4,\"347\":4,\"417\":1,\"418\":11,\"426\":5}}],[\"content\",{\"1\":{\"25\":1,\"36\":1,\"106\":1,\"189\":2,\"190\":1,\"192\":5,\"193\":1,\"194\":2,\"195\":2,\"196\":2,\"197\":2,\"198\":2,\"199\":2,\"200\":3}}],[\"contains\",{\"1\":{\"159\":1}}],[\"contained\",{\"1\":{\"117\":1}}],[\"container\",{\"1\":{\"117\":2}}],[\"contracts\",{\"1\":{\"67\":2,\"92\":1}}],[\"contract\",{\"1\":{\"47\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"61\":1,\"62\":1,\"65\":1,\"66\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":2,\"77\":1,\"78\":1,\"79\":2,\"80\":2,\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"86\":2,\"87\":1,\"88\":1,\"90\":1}}],[\"controls\",{\"1\":{\"25\":1}}],[\"control\",{\"1\":{\"6\":3,\"7\":3}}],[\"configuring\",{\"1\":{\"269\":1}}],[\"configuration\",{\"1\":{\"159\":1,\"351\":2,\"445\":2}}],[\"config\",{\"0\":{\"107\":1},\"1\":{\"25\":7,\"106\":2,\"107\":1,\"109\":3,\"187\":1,\"257\":1,\"260\":1,\"263\":1,\"270\":1,\"273\":3,\"274\":1,\"275\":2,\"321\":1,\"328\":2,\"329\":2,\"330\":2,\"331\":4,\"339\":6,\"340\":8,\"345\":5,\"346\":1,\"393\":2,\"394\":1,\"405\":2,\"406\":1,\"422\":1}}],[\"cookie和session通常一起使用\",{\"1\":{\"3\":1}}],[\"cookie和session的区别\",{\"0\":{\"3\":1}}],[\"cookie头将cookie发送给客户端\",{\"1\":{\"2\":1}}],[\"cookie\",{\"1\":{\"2\":1,\"3\":15,\"4\":12}}],[\"commentpattern\",{\"1\":{\"269\":1}}],[\"common\",{\"1\":{\"257\":1}}],[\"completed\",{\"1\":{\"470\":2,\"471\":3,\"472\":1}}],[\"complilation会生成chunk\",{\"1\":{\"160\":1}}],[\"compress\",{\"1\":{\"337\":1,\"340\":1,\"341\":1,\"343\":1,\"346\":1,\"347\":1}}],[\"compatible\",{\"1\":{\"239\":1,\"264\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1,\"395\":1,\"407\":1}}],[\"compilationparams\",{\"1\":{\"214\":1}}],[\"compilation\",{\"0\":{\"210\":1},\"1\":{\"93\":1,\"210\":9,\"214\":6,\"215\":1,\"216\":6,\"217\":1,\"218\":3,\"219\":7}}],[\"compileelement\",{\"1\":{\"39\":2}}],[\"compiler创建以后\",{\"1\":{\"160\":1}}],[\"compiler是webpack的总调度器\",{\"1\":{\"160\":1}}],[\"compiler\",{\"0\":{\"209\":1},\"1\":{\"39\":1,\"209\":8,\"213\":2,\"214\":16,\"215\":1,\"216\":3,\"217\":7,\"218\":3,\"219\":2,\"345\":1}}],[\"compile\",{\"1\":{\"37\":1,\"39\":2,\"52\":1,\"214\":3}}],[\"components\",{\"1\":{\"25\":1,\"108\":1,\"109\":2,\"117\":1,\"347\":4}}],[\"com\",{\"0\":{\"138\":1},\"1\":{\"1\":1,\"26\":1,\"39\":1,\"44\":2,\"66\":1,\"67\":1,\"91\":2,\"126\":2,\"207\":1,\"269\":2}}],[\"和代码进行了优化\",{\"1\":{\"442\":1}}],[\"和文件名无关\",{\"1\":{\"393\":1,\"394\":1,\"396\":1,\"405\":1,\"406\":1,\"408\":1}}],[\"和type\",{\"1\":{\"290\":1}}],[\"和重新创建\",{\"1\":{\"210\":1}}],[\"和实时重新加载功能\",{\"1\":{\"134\":1}}],[\"和不可变数据\",{\"1\":{\"119\":1}}],[\"和viewmodel\",{\"1\":{\"28\":1}}],[\"和\",{\"0\":{\"306\":1},\"1\":{\"1\":1,\"2\":1,\"3\":1,\"4\":2,\"6\":2,\"7\":1,\"86\":1,\"99\":1,\"187\":3,\"195\":1,\"209\":1,\"215\":1,\"267\":2,\"269\":1,\"279\":1,\"351\":1,\"368\":2,\"369\":1,\"417\":1,\"418\":1,\"442\":2,\"445\":1,\"462\":2,\"463\":1}}],[\"文档可知\",{\"1\":{\"353\":1,\"447\":1}}],[\"文档\",{\"1\":{\"196\":1,\"209\":1,\"210\":1,\"228\":1,\"293\":1}}],[\"文档对象模型\",{\"1\":{\"1\":1}}],[\"文件可以从课件中找到\",{\"1\":{\"440\":1}}],[\"文件路径是\",{\"1\":{\"426\":1}}],[\"文件只保存文件的\",{\"1\":{\"418\":1}}],[\"文件发送变化\",{\"1\":{\"418\":1}}],[\"文件名发生了变化\",{\"1\":{\"418\":1}}],[\"文件名称\",{\"1\":{\"398\":1,\"410\":1}}],[\"文件的\",{\"1\":{\"418\":1}}],[\"文件再重新打包的时候\",{\"1\":{\"418\":1}}],[\"文件打包到一个文件中\",{\"1\":{\"390\":1,\"402\":1}}],[\"文件处理主要就是\",{\"1\":{\"372\":1,\"466\":1}}],[\"文件处理时\",{\"1\":{\"364\":1,\"458\":1}}],[\"文件都要经过\",{\"1\":{\"368\":1,\"462\":1}}],[\"文件以外其他文件都处理\",{\"1\":{\"365\":1,\"459\":1}}],[\"文件目录\",{\"0\":{\"328\":1},\"1\":{\"393\":1,\"405\":1}}],[\"文件目前被打包到\",{\"1\":{\"221\":1}}],[\"文件编译成\",{\"1\":{\"296\":1,\"302\":1,\"308\":1,\"314\":1}}],[\"文件查看\",{\"1\":{\"275\":1}}],[\"文件代码\",{\"1\":{\"270\":1,\"275\":1}}],[\"文件进行配置\",{\"1\":{\"260\":1}}],[\"文件输出目录\",{\"1\":{\"258\":1}}],[\"文件输出到\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"290\":1,\"321\":1,\"329\":1,\"330\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"409\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"文件开始打包\",{\"1\":{\"251\":1}}],[\"文件加载时\",{\"1\":{\"221\":1}}],[\"文件中添加\",{\"1\":{\"228\":1}}],[\"文件中\",{\"1\":{\"221\":1,\"418\":1}}],[\"文件中指定\",{\"1\":{\"187\":1}}],[\"文件太小了\",{\"1\":{\"219\":1}}],[\"文件\",{\"1\":{\"187\":1,\"218\":1,\"219\":1,\"221\":1,\"250\":1,\"264\":1,\"265\":1,\"302\":1,\"308\":1,\"314\":1,\"352\":2,\"365\":1,\"372\":1,\"390\":3,\"391\":1,\"393\":2,\"394\":2,\"402\":3,\"403\":1,\"405\":2,\"406\":2,\"418\":2,\"422\":1,\"426\":1,\"442\":1,\"446\":2,\"459\":1,\"466\":1}}],[\"文件等\",{\"1\":{\"1\":1}}],[\"页面查看效果\",{\"1\":{\"278\":1,\"283\":1,\"291\":1,\"299\":1,\"305\":1,\"311\":1,\"317\":1}}],[\"页面的初始\",{\"1\":{\"100\":1}}],[\"页面更新\",{\"1\":{\"38\":1}}],[\"页面\",{\"1\":{\"1\":1,\"100\":1,\"101\":2}}],[\"它没办法处理\",{\"1\":{\"420\":1}}],[\"它能将\",{\"1\":{\"420\":1}}],[\"它依赖\",{\"1\":{\"378\":1,\"431\":1}}],[\"它会生成一个\",{\"1\":{\"352\":1,\"446\":1}}],[\"它会以一个或多个文件作为打包的入口\",{\"1\":{\"245\":1}}],[\"它会检查状态码\",{\"1\":{\"1\":1}}],[\"它有以下主要属性\",{\"1\":{\"209\":1,\"210\":1}}],[\"它接受要处理的源码作为参数\",{\"1\":{\"189\":1}}],[\"它接受一个参数\",{\"1\":{\"120\":1}}],[\"它通过在构建阶段对\",{\"1\":{\"157\":1}}],[\"它通常用于禁用客户端缓存\",{\"1\":{\"7\":2}}],[\"它的主要功能是捕捉网站的屏幕截图\",{\"1\":{\"136\":1}}],[\"它的目标是测试整个应用程序的流程\",{\"1\":{\"134\":1}}],[\"它关注用户在应用程序中的完整流程\",{\"1\":{\"134\":1}}],[\"它提供了一个美观的\",{\"1\":{\"131\":1}}],[\"它仍然能够访问和引用\",{\"1\":{\"125\":1}}],[\"它返回的是\",{\"1\":{\"125\":1}}],[\"它创建了\",{\"1\":{\"125\":1}}],[\"它使得函数成为一等公民\",{\"1\":{\"125\":1}}],[\"它满足尾递归的条件\",{\"1\":{\"124\":1}}],[\"它优化了函数的尾调用\",{\"1\":{\"123\":1}}],[\"它们都会生成一个唯一的\",{\"1\":{\"417\":1}}],[\"它们的问题\",{\"1\":{\"413\":1}}],[\"它们区别\",{\"1\":{\"413\":1}}],[\"它们共同点\",{\"1\":{\"413\":1}}],[\"它们被禁用了\",{\"1\":{\"201\":1}}],[\"它们是函数式编程风格的核心概念\",{\"1\":{\"122\":1}}],[\"它们能够接受其他函数作为参数\",{\"1\":{\"122\":1}}],[\"它们分别指的是在浏览器端和服务器端进行页面渲染的方法\",{\"1\":{\"99\":1}}],[\"它也能更容易地进行并行化和异步编程\",{\"1\":{\"119\":1}}],[\"它在函数式编程中被广泛使用\",{\"1\":{\"119\":1}}],[\"它将计算视为数学函数的计算\",{\"1\":{\"119\":1}}],[\"它可以保存这些变量的状态\",{\"1\":{\"125\":1}}],[\"它可以帮助开发者识别为什么组件重新渲染\",{\"1\":{\"116\":1}}],[\"它可以通过插件扩展\",{\"1\":{\"25\":1}}],[\"它还负责处理用户输入\",{\"1\":{\"28\":1}}],[\"它负责请求数据\",{\"1\":{\"100\":1}}],[\"它负责处理用户界面的逻辑和状态\",{\"1\":{\"28\":1}}],[\"它负责管理数据的状态和行为\",{\"1\":{\"28\":1}}],[\"它反映了模型的状态\",{\"1\":{\"28\":1}}],[\"它包括三个主要组件\",{\"1\":{\"28\":1}}],[\"它利用javascript的强大编程能力对css代码进行转换\",{\"1\":{\"25\":1}}],[\"它是用来检测\",{\"1\":{\"267\":1}}],[\"它是在打包输出前触发\",{\"1\":{\"218\":1}}],[\"它是打包输出前触发\",{\"1\":{\"216\":1,\"217\":1}}],[\"它是\",{\"1\":{\"207\":1}}],[\"它是将一个多参数的函数转换为一系列单参数函数的过程\",{\"1\":{\"120\":1}}],[\"它是一个静态的\",{\"1\":{\"63\":1}}],[\"它是一个无状态\",{\"1\":{\"2\":1}}],[\"它是通过在浏览器中存储一个小型的文本文件来实现的\",{\"1\":{\"4\":1}}],[\"它为客户端和服务器之间的通信提供了标准化的方式\",{\"1\":{\"2\":1}}],[\"它就会尝试与服务器建立\",{\"1\":{\"1\":1}}],[\"重定向\",{\"1\":{\"1\":1}}],[\"响应时间等\",{\"1\":{\"134\":1}}],[\"响应式数据\",{\"1\":{\"29\":1}}],[\"响应报文\",{\"1\":{\"2\":1}}],[\"响应协议\",{\"1\":{\"2\":1}}],[\"响应模型\",{\"1\":{\"2\":1}}],[\"响应后\",{\"1\":{\"1\":1}}],[\"响应头\",{\"1\":{\"1\":1}}],[\"响应\",{\"1\":{\"1\":1}}],[\"服务器需要处理更多的页面渲染请求\",{\"1\":{\"101\":1}}],[\"服务器压力\",{\"1\":{\"101\":1}}],[\"服务器已经生成了完整的\",{\"1\":{\"101\":1}}],[\"服务器负责生成完整的\",{\"1\":{\"101\":1}}],[\"服务器缓存\",{\"0\":{\"7\":1}}],[\"服务器返回已经渲染好的\",{\"1\":{\"101\":1}}],[\"服务器返回\",{\"1\":{\"6\":2}}],[\"服务器返回http响应\",{\"1\":{\"1\":1}}],[\"服务器通过\",{\"1\":{\"6\":1,\"7\":1}}],[\"服务器在响应中发送\",{\"1\":{\"6\":1}}],[\"服务器可以识别用户\",{\"1\":{\"3\":1}}],[\"服务器可以通过set\",{\"1\":{\"2\":1}}],[\"服务器生成一个唯一的会话标识符\",{\"1\":{\"3\":1}}],[\"服务器内部错误\",{\"1\":{\"2\":1}}],[\"服务器不会记录之前的请求信息\",{\"1\":{\"2\":1}}],[\"服务器收到请求后返回http响应\",{\"1\":{\"2\":1}}],[\"服务器根据处理结果生成一个\",{\"1\":{\"1\":1}}],[\"服务器接收到浏览器发送的\",{\"1\":{\"1\":1}}],[\"服务器处理请求\",{\"1\":{\"1\":1}}],[\"服务器发送请求\",{\"1\":{\"1\":1}}],[\"发行量\",{\"1\":{\"77\":1}}],[\"发送eth\",{\"0\":{\"79\":1},\"1\":{\"79\":3}}],[\"发送数额\",{\"1\":{\"73\":1}}],[\"发送给服务器\",{\"1\":{\"6\":1}}],[\"发起http请求\",{\"1\":{\"1\":1}}],[\"发生了以下一系列的步骤\",{\"1\":{\"1\":1}}],[\"这会导致\",{\"1\":{\"418\":1}}],[\"这句话意思就是\",{\"1\":{\"267\":1}}],[\"这条生产线上的每个处理流程的职责都是单一的\",{\"1\":{\"204\":1}}],[\"这里的minchunks权重更大\",{\"1\":{\"394\":1,\"396\":1,\"406\":1,\"408\":1}}],[\"这里的状态变量还包含区块链的内建对象数据\",{\"1\":{\"51\":1}}],[\"这里是inline\",{\"1\":{\"201\":1}}],[\"这意味着它可以执行更多的计算和优化\",{\"1\":{\"157\":1}}],[\"这意味着在用户浏览器中执行时\",{\"1\":{\"157\":1}}],[\"这通常是在项目初期或确认页面样式稳定的时候进行的\",{\"1\":{\"136\":1}}],[\"这有助于减少在客户端上的解析和编译时间\",{\"1\":{\"157\":1}}],[\"这有助于开发人员快速定位并解决视觉问题\",{\"1\":{\"136\":1}}],[\"这有助于检测页面样式\",{\"1\":{\"136\":1}}],[\"这有助于提高测试效率\",{\"1\":{\"134\":1}}],[\"这有助于提高性能和避免不必要的计算\",{\"1\":{\"119\":1}}],[\"这有助于在代码库的不同提交之间进行比较\",{\"1\":{\"131\":1}}],[\"这就会导致反柯里化不够直观或者不可行\",{\"1\":{\"121\":1}}],[\"这些选项帮助快速启用\",{\"1\":{\"426\":1}}],[\"这些接口被很形象地称做\",{\"1\":{\"206\":1}}],[\"这些语法就要通过css\",{\"1\":{\"201\":1}}],[\"这些方法有助于减少在异步操作中发生状态撕裂的可能性\",{\"1\":{\"141\":1}}],[\"这些截图将用作未来测试的比较基准\",{\"1\":{\"136\":1}}],[\"这些单参数函数返回新的函数\",{\"1\":{\"120\":1}}],[\"这些差异主要反映了设计决策和权衡\",{\"1\":{\"4\":1}}],[\"这使得纯函数更容易理解\",{\"1\":{\"119\":1}}],[\"这使得每个请求都是相互独立的\",{\"1\":{\"2\":1}}],[\"这对于前端应用程序来说尤其重要\",{\"1\":{\"157\":1}}],[\"这对于大型项目中逐步优化的场景非常有用\",{\"1\":{\"116\":1}}],[\"这对于优化\",{\"1\":{\"116\":1}}],[\"这种方法对y9\",{\"1\":{\"472\":1}}],[\"这种方法对y7\",{\"1\":{\"472\":1}}],[\"这种方法结合了两者的优点\",{\"1\":{\"102\":1}}],[\"这种不同步导致的问题称为\",{\"1\":{\"141\":1}}],[\"这种能力使得函数可以更灵活地组合和复用\",{\"1\":{\"119\":1}}],[\"这种分离有助于提高代码的可维护性\",{\"1\":{\"28\":1}}],[\"这种结合使用的方式兼顾了安全性和性能\",{\"1\":{\"3\":1}}],[\"这可能导致栈溢出\",{\"1\":{\"123\":1}}],[\"这可能涉及到从数据库中检索数据\",{\"1\":{\"1\":1}}],[\"这可以通过创建新的数据副本而不是直接修改现有数据来实现\",{\"1\":{\"119\":1}}],[\"这可以降低网络延迟和减轻服务器负载\",{\"1\":{\"5\":1}}],[\"这样找不到会\",{\"1\":{\"426\":1}}],[\"这样引入会将所有兼容性代码全部引入\",{\"1\":{\"422\":1}}],[\"这样就可以做缓存了\",{\"1\":{\"416\":1}}],[\"这样就和同步一样了\",{\"1\":{\"159\":1}}],[\"这样浏览器第二次请求资源就能读取缓存了\",{\"1\":{\"416\":1}}],[\"这样加载的资源就少\",{\"1\":{\"390\":1,\"402\":1}}],[\"这样将整个库都打包进来\",{\"1\":{\"377\":1,\"430\":1}}],[\"这样速度就比之前的单进程打包更快了\",{\"1\":{\"372\":1,\"466\":1}}],[\"这样第二次打包时速度就会更快了\",{\"1\":{\"368\":1,\"462\":1}}],[\"这样打包速度就能很快\",{\"1\":{\"356\":1,\"450\":1}}],[\"这样对于网站来说\",{\"1\":{\"221\":1}}],[\"这样的代码要想在浏览器运行必须经过编译成浏览器能识别的\",{\"1\":{\"243\":1}}],[\"这样的单线程环境下进行此操作并不是好的方案\",{\"1\":{\"193\":1}}],[\"这样的尾递归函数可以被一些编程语言的编译器或解释器进行尾调用优化\",{\"1\":{\"124\":1}}],[\"这样可以避免在组件已经卸载后仍然尝试更新状态\",{\"1\":{\"141\":1}}],[\"这样可以更容易地定位并解决性能问题\",{\"1\":{\"116\":1}}],[\"这样\",{\"1\":{\"3\":1,\"204\":1}}],[\"这是正常的\",{\"1\":{\"418\":1}}],[\"这是webpack动态导入模块命名的方式\",{\"1\":{\"398\":1,\"410\":1}}],[\"这是因为每个\",{\"1\":{\"4\":1}}],[\"这是一个简化的描述\",{\"1\":{\"1\":1}}],[\"这是通过三次握手过程完成的\",{\"1\":{\"1\":1}}],[\"这个时候给todo中加title会报错的\",{\"1\":{\"470\":1}}],[\"这个速度是比较慢的\",{\"1\":{\"372\":1,\"466\":1}}],[\"这个模式下我们主要对代码进行优化\",{\"1\":{\"326\":1}}],[\"这个模式下我们主要做两件事\",{\"1\":{\"324\":1}}],[\"这个对象会在首次启动\",{\"1\":{\"209\":1}}],[\"这个问题通常在\",{\"1\":{\"141\":1}}],[\"这个返回的函数接受参数\",{\"1\":{\"120\":1}}],[\"这个是烧币的\",{\"1\":{\"77\":1}}],[\"这个用户可以花他的钱\",{\"1\":{\"48\":1}}],[\"这个函数可以花钱\",{\"1\":{\"48\":1}}],[\"这个函数会返回一个vnode节点\",{\"1\":{\"36\":1}}],[\"这个响应包括一个状态码\",{\"1\":{\"1\":1}}],[\"这个请求包含了你想要获取的资源的信息\",{\"1\":{\"1\":1}}],[\"这个过程通过\",{\"1\":{\"1\":1}}],[\"连接管理\",{\"1\":{\"2\":1}}],[\"连接向服务器发送一个\",{\"1\":{\"1\":1}}],[\"连接\",{\"1\":{\"1\":1}}],[\"建立tcp连接\",{\"1\":{\"1\":1}}],[\"浏览器收到后直接渲染页面\",{\"1\":{\"101\":1}}],[\"浏览器在此过期时间之前可以直接使用本地缓存\",{\"1\":{\"6\":1}}],[\"浏览器关闭时过期\",{\"1\":{\"3\":1,\"4\":1}}],[\"浏览器\",{\"1\":{\"3\":1,\"215\":1}}],[\"浏览器可能会关闭与服务器的连接\",{\"1\":{\"1\":1}}],[\"浏览器根据渲染树展示页面内容\",{\"1\":{\"1\":1}}],[\"浏览器会开始解析\",{\"1\":{\"1\":1}}],[\"浏览器会继续处理响应\",{\"1\":{\"1\":1}}],[\"浏览器会向本地\",{\"1\":{\"1\":1}}],[\"浏览器接收到来自服务器的\",{\"1\":{\"1\":1}}],[\"浏览器接收响应\",{\"1\":{\"1\":1}}],[\"浏览器通过已建立的\",{\"1\":{\"1\":1}}],[\"浏览器首先会检查输入的网址\",{\"1\":{\"1\":1}}],[\"地址\",{\"1\":{\"1\":3}}],[\"如音视频等\",{\"1\":{\"276\":1}}],[\"如何获取\",{\"1\":{\"374\":1,\"468\":1}}],[\"如何获取打包输出的资源\",{\"1\":{\"216\":1}}],[\"如何处理\",{\"1\":{\"292\":1}}],[\"如何命名等\",{\"1\":{\"256\":1}}],[\"如何操作\",{\"1\":{\"219\":1}}],[\"如何清空上次打包内容\",{\"1\":{\"217\":1}}],[\"如何在打包输出前执行\",{\"1\":{\"217\":1}}],[\"如何对bundle体积进行监控和分析\",{\"0\":{\"172\":1}}],[\"如何保证各个loader按照预想的方式工作\",{\"0\":{\"164\":1}}],[\"如界面显示不一致\",{\"1\":{\"141\":1}}],[\"如网络请求\",{\"1\":{\"141\":1}}],[\"如功能错误\",{\"1\":{\"134\":1}}],[\"如点击链接\",{\"1\":{\"134\":1}}],[\"如测试用例\",{\"1\":{\"131\":1}}],[\"如scheme\",{\"1\":{\"123\":1,\"124\":1}}],[\"如string\",{\"1\":{\"58\":1}}],[\"如javascript和python\",{\"1\":{\"119\":1}}],[\"如不可变列表\",{\"1\":{\"119\":1}}],[\"如next\",{\"1\":{\"102\":1}}],[\"如vue\",{\"1\":{\"28\":1}}],[\"如自动补全\",{\"1\":{\"25\":1}}],[\"如设置安全标志和\",{\"1\":{\"4\":1}}],[\"如用户登录状态\",{\"1\":{\"3\":1,\"4\":1}}],[\"如用户偏好设置\",{\"1\":{\"3\":1,\"4\":1}}],[\"如果当前\",{\"1\":{\"394\":2,\"396\":1,\"406\":2,\"408\":1}}],[\"如果多入口文件中都引用了同一份代码\",{\"1\":{\"394\":1,\"406\":1}}],[\"如果还是之前写法main\",{\"1\":{\"393\":1,\"394\":1,\"396\":1,\"405\":1,\"406\":1,\"408\":1}}],[\"如果没有特殊处理的话我们打包时会引入整个库\",{\"1\":{\"377\":1,\"430\":1}}],[\"如果没有模版\",{\"1\":{\"160\":1}}],[\"如果项目中图片都是在线链接\",{\"1\":{\"385\":1,\"438\":1,\"442\":1}}],[\"如果项目中使用element\",{\"1\":{\"347\":1}}],[\"如果项目中使用antd\",{\"1\":{\"341\":1}}],[\"如果项目中没有\",{\"1\":{\"341\":2,\"347\":2}}],[\"如果是\",{\"1\":{\"269\":1}}],[\"如果使用tap注册的话\",{\"1\":{\"214\":1}}],[\"如果使用异步函数\",{\"1\":{\"141\":1}}],[\"如果有\",{\"1\":{\"195\":1}}],[\"如果有模版\",{\"1\":{\"160\":1}}],[\"如果成功了\",{\"1\":{\"92\":1}}],[\"如果不是一个等额红包\",{\"1\":{\"90\":1}}],[\"如果失败\",{\"1\":{\"79\":2}}],[\"如果要终止合约需要用到assert\",{\"1\":{\"59\":1}}],[\"如果返回数据类型长度是变长的\",{\"1\":{\"58\":1}}],[\"如果合约中有修改\",{\"1\":{\"42\":1}}],[\"如果资源体积很大\",{\"1\":{\"412\":1}}],[\"如果资源的\",{\"1\":{\"6\":1}}],[\"如果资源在此时间后没有发生变化\",{\"1\":{\"6\":1}}],[\"如果响应是一个\",{\"1\":{\"1\":1}}],[\"如果状态码表示成功\",{\"1\":{\"1\":1}}],[\"如果它是一个域名\",{\"1\":{\"1\":1}}],[\"如html文件的内容\",{\"1\":{\"1\":1}}],[\"如内容类型\",{\"1\":{\"1\":1}}],[\"如www\",{\"1\":{\"1\":1}}],[\"dappeteer\",{\"1\":{\"135\":1}}],[\"dage\",{\"1\":{\"49\":2}}],[\"dataurlcondition\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"285\":1,\"290\":1,\"321\":1,\"329\":1,\"330\":1,\"334\":1,\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"datawebpackprefix\",{\"1\":{\"159\":3}}],[\"data是空\",{\"1\":{\"78\":1}}],[\"data\",{\"1\":{\"37\":6,\"50\":1,\"73\":8,\"74\":2,\"75\":5,\"78\":2,\"79\":1,\"85\":4,\"86\":1,\"90\":1,\"117\":2,\"119\":2,\"141\":6,\"158\":8,\"159\":15,\"195\":1,\"285\":2,\"290\":1}}],[\"date$\",{\"1\":{\"25\":1}}],[\"date\",{\"1\":{\"25\":1}}],[\"did\",{\"0\":{\"114\":1,\"116\":1},\"1\":{\"115\":1,\"116\":6,\"117\":1}}],[\"dir\",{\"1\":{\"337\":1,\"338\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1}}],[\"dirname\",{\"1\":{\"109\":1,\"223\":3,\"227\":3,\"229\":3,\"233\":3,\"238\":1,\"258\":2,\"263\":3,\"270\":2,\"275\":2,\"277\":1,\"280\":1,\"285\":1,\"290\":1,\"297\":1,\"303\":1,\"309\":1,\"315\":1,\"321\":3,\"329\":2,\"330\":3,\"334\":1,\"337\":6,\"338\":7,\"340\":5,\"341\":8,\"343\":7,\"344\":7,\"346\":8,\"347\":10,\"362\":2,\"366\":3,\"370\":4,\"374\":5,\"383\":5,\"387\":5,\"393\":1,\"394\":1,\"396\":1,\"397\":5,\"398\":5,\"405\":1,\"406\":1,\"408\":1,\"409\":5,\"410\":5,\"414\":5,\"418\":10,\"426\":5,\"436\":5,\"440\":5,\"456\":2,\"460\":3,\"464\":4,\"468\":5}}],[\"directive\",{\"0\":{\"36\":1}}],[\"disable\",{\"1\":{\"351\":1,\"445\":1}}],[\"disabletelemetry\",{\"1\":{\"25\":2}}],[\"dist\",{\"1\":{\"109\":1,\"201\":3,\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"238\":1,\"239\":1,\"240\":1,\"252\":2,\"258\":1,\"263\":1,\"265\":1,\"270\":1,\"271\":3,\"275\":2,\"277\":1,\"280\":1,\"284\":2,\"285\":1,\"289\":1,\"290\":1,\"297\":1,\"298\":1,\"303\":1,\"304\":1,\"309\":1,\"310\":1,\"315\":1,\"316\":1,\"321\":1,\"322\":1,\"330\":1,\"334\":1,\"335\":1,\"337\":1,\"338\":2,\"340\":1,\"341\":2,\"343\":1,\"344\":1,\"346\":2,\"347\":2,\"351\":18,\"374\":1,\"383\":1,\"387\":1,\"393\":2,\"394\":1,\"396\":1,\"397\":1,\"398\":1,\"405\":2,\"406\":1,\"408\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":4,\"436\":1,\"440\":1,\"445\":18,\"468\":1}}],[\"digits++\",{\"1\":{\"66\":1}}],[\"digits\",{\"1\":{\"66\":4}}],[\"different\",{\"1\":{\"351\":1,\"445\":1}}],[\"difficulty\",{\"1\":{\"49\":3,\"50\":1}}],[\"diff\",{\"1\":{\"38\":1}}],[\"div\",{\"1\":{\"36\":1}}],[\"div>\",{\"1\":{\"17\":1,\"36\":1,\"105\":1,\"239\":5,\"264\":5,\"289\":5,\"298\":1,\"304\":2,\"310\":4,\"316\":5}}],[\"dlx\",{\"1\":{\"25\":2}}],[\"d\",{\"1\":{\"25\":3,\"106\":1,\"107\":1,\"109\":1,\"113\":1,\"115\":1,\"130\":1,\"131\":1,\"132\":1,\"133\":1,\"135\":1,\"146\":1,\"158\":2,\"159\":2,\"199\":1,\"200\":1,\"222\":1,\"226\":1,\"232\":1,\"250\":1,\"262\":1,\"270\":1,\"275\":1,\"295\":1,\"301\":1,\"307\":1,\"313\":1,\"320\":1,\"345\":1,\"351\":1,\"374\":1,\"383\":1,\"387\":3,\"393\":1,\"398\":1,\"405\":1,\"410\":1,\"414\":1,\"422\":1,\"426\":1,\"436\":1,\"440\":3,\"445\":1,\"468\":1}}],[\"design\",{\"1\":{\"341\":1}}],[\"description\",{\"1\":{\"339\":1,\"340\":1,\"345\":1,\"470\":2,\"471\":1,\"472\":2}}],[\"desktop\",{\"1\":{\"201\":2,\"215\":1,\"387\":2,\"440\":2}}],[\"deeppink\",{\"1\":{\"304\":1,\"351\":1,\"445\":1}}],[\"dead\",{\"1\":{\"228\":1,\"339\":1,\"340\":1,\"345\":1}}],[\"debugger\",{\"1\":{\"215\":2}}],[\"debug\",{\"1\":{\"215\":4}}],[\"delayedgreeting\",{\"1\":{\"122\":2}}],[\"delegatecall不能修改目标合约的值\",{\"1\":{\"75\":1}}],[\"delegatecallsetvars\",{\"1\":{\"75\":1}}],[\"delegatecall和call类似\",{\"1\":{\"75\":1}}],[\"delegatecall\",{\"0\":{\"75\":1},\"1\":{\"74\":1,\"75\":3}}],[\"deletecontract\",{\"1\":{\"82\":2}}],[\"delete\",{\"1\":{\"2\":1,\"159\":1,\"219\":1}}],[\"details可以帮助我们生成abi\",{\"1\":{\"93\":1}}],[\"decode\",{\"1\":{\"73\":1,\"74\":1,\"83\":1}}],[\"decimal\",{\"1\":{\"66\":1}}],[\"devtools\",{\"1\":{\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"351\":1,\"445\":1}}],[\"devtool\",{\"1\":{\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"343\":1,\"344\":1,\"346\":1,\"347\":1,\"351\":6,\"353\":3,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"445\":6,\"447\":3,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"devserver\",{\"1\":{\"223\":1,\"227\":1,\"229\":1,\"233\":1,\"321\":1,\"325\":1,\"329\":1,\"330\":1,\"337\":1,\"340\":1,\"341\":1,\"343\":1,\"346\":1,\"347\":1,\"358\":1,\"362\":1,\"366\":1,\"370\":1,\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"452\":1,\"456\":1,\"460\":1,\"464\":1,\"468\":1}}],[\"devdependencies\",{\"1\":{\"215\":1,\"339\":1,\"340\":1,\"345\":1}}],[\"development\",{\"1\":{\"109\":1,\"117\":1,\"238\":1,\"256\":1,\"258\":1,\"263\":1,\"270\":1,\"275\":1,\"277\":1,\"280\":1,\"285\":1,\"290\":1,\"297\":1,\"303\":1,\"309\":1,\"315\":1,\"321\":1,\"329\":1,\"334\":1,\"337\":1,\"340\":1,\"341\":1,\"343\":1,\"346\":1,\"347\":1,\"351\":1,\"353\":1,\"362\":1,\"366\":1,\"370\":1,\"445\":1,\"447\":1,\"456\":1,\"460\":1,\"464\":1}}],[\"dev\",{\"0\":{\"329\":1},\"1\":{\"66\":3,\"92\":7,\"129\":1,\"135\":1,\"320\":1,\"328\":1,\"329\":1,\"331\":4,\"337\":1,\"339\":4,\"340\":3,\"343\":1,\"345\":4}}],[\"derective\",{\"1\":{\"29\":1}}],[\"dependencies\",{\"1\":{\"339\":1,\"340\":1,\"345\":1}}],[\"deploy\",{\"1\":{\"93\":1}}],[\"deposit\",{\"1\":{\"61\":1}}],[\"dep\",{\"0\":{\"35\":1},\"1\":{\"29\":1,\"33\":7,\"34\":2,\"35\":2}}],[\"definition\",{\"1\":{\"158\":4,\"159\":4}}],[\"defineplugin\",{\"1\":{\"343\":2,\"344\":2,\"346\":2,\"347\":2}}],[\"defineproperty\",{\"0\":{\"29\":1,\"31\":1},\"1\":{\"31\":2,\"32\":1,\"33\":1,\"158\":3,\"159\":3}}],[\"define\",{\"1\":{\"159\":3}}],[\"definereactive\",{\"1\":{\"33\":2}}],[\"defaultvendors\",{\"1\":{\"394\":2,\"396\":1,\"406\":2,\"408\":1}}],[\"default$\",{\"1\":{\"269\":1}}],[\"default\",{\"1\":{\"17\":1,\"25\":3,\"109\":1,\"117\":1,\"200\":1,\"249\":2,\"269\":3,\"338\":1,\"340\":1,\"341\":1,\"344\":1,\"346\":1,\"347\":1,\"351\":10,\"387\":1,\"394\":2,\"396\":1,\"397\":1,\"398\":1,\"406\":2,\"408\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"440\":1,\"445\":10}}],[\"demo\",{\"1\":{\"17\":2,\"51\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"61\":1,\"235\":1,\"241\":1,\"253\":1,\"259\":1,\"286\":1,\"318\":1,\"323\":1,\"332\":1,\"427\":2,\"441\":1}}],[\"down\",{\"1\":{\"264\":1,\"289\":1}}],[\"do\",{\"1\":{\"195\":1}}],[\"donefns\",{\"1\":{\"159\":3}}],[\"done\",{\"1\":{\"159\":3}}],[\"double\",{\"1\":{\"122\":2}}],[\"dotenv\",{\"1\":{\"109\":3}}],[\"dotest\",{\"1\":{\"52\":1}}],[\"doctype\",{\"1\":{\"239\":1,\"264\":1,\"289\":1,\"298\":1,\"304\":1,\"310\":1,\"316\":1,\"395\":1,\"407\":1}}],[\"docusaurus\",{\"1\":{\"98\":1}}],[\"document\",{\"1\":{\"15\":1,\"37\":2,\"39\":1,\"117\":1,\"159\":9,\"201\":4,\"395\":1,\"398\":1,\"407\":1,\"410\":1}}],[\"docs\",{\"1\":{\"25\":2,\"91\":1,\"215\":1,\"269\":2,\"341\":1}}],[\"dom\",{\"1\":{\"1\":1,\"25\":2,\"34\":1,\"37\":2,\"117\":2,\"298\":1,\"316\":1,\"339\":2,\"340\":2}}],[\"domain\",{\"1\":{\"1\":1}}],[\"draft<s>\",{\"1\":{\"12\":1}}],[\"draftfunction<s>\",{\"1\":{\"12\":2}}],[\"draft\",{\"1\":{\"12\":2}}],[\"dns\",{\"1\":{\"1\":2}}],[\"dns解析\",{\"1\":{\"1\":1}}],[\"当生产模式会默认开启terserplugin\",{\"1\":{\"374\":1,\"383\":1,\"387\":1,\"397\":1,\"398\":1,\"409\":1,\"410\":1,\"414\":1,\"418\":2,\"426\":1,\"436\":1,\"440\":1,\"468\":1}}],[\"当项目越来越庞大时\",{\"1\":{\"372\":1,\"466\":1}}],[\"当构建后代码出错了\",{\"1\":{\"352\":1,\"446\":1}}],[\"当被触发的时候\",{\"1\":{\"269\":1}}],[\"当调用\",{\"1\":{\"192\":1}}],[\"当进行异步操作\",{\"1\":{\"141\":1}}],[\"当\",{\"1\":{\"125\":1,\"204\":1,\"221\":1,\"418\":1}}],[\"当组件重新渲染时\",{\"1\":{\"116\":1}}],[\"当用户发起请求时\",{\"1\":{\"101\":1}}],[\"当approve或transferfrom被调用时候\",{\"1\":{\"92\":1}}],[\"当owner账户授权spender账户可以从自己的账户转移value单位的货币时\",{\"1\":{\"92\":1}}],[\"当value单位的货币从账户from转移到账户to时\",{\"1\":{\"92\":1}}],[\"当你买东西时需要把你的余额授权给平台\",{\"1\":{\"76\":1}}],[\"当你在浏览器中输入一个网址并按下回车键时\",{\"1\":{\"1\":1}}],[\"当前页面优先级高的资源用\",{\"1\":{\"413\":1}}],[\"当前文件的文件夹绝对路径\",{\"1\":{\"258\":1}}],[\"当前合约的msg\",{\"1\":{\"74\":2}}],[\"当前类不能访问\",{\"1\":{\"51\":1}}],[\"当前类可以访问\",{\"1\":{\"51\":1}}],[\"当前类能访问\",{\"1\":{\"51\":1}}],[\"当前块的时间戳\",{\"1\":{\"50\":1}}],[\"当前块的难度系数\",{\"1\":{\"50\":1}}],[\"当前块编号\",{\"1\":{\"50\":1}}],[\"当前块gas的上限\",{\"1\":{\"50\":1}}],[\"当前使用这个key的属性的一个watcher\",{\"1\":{\"33\":1}}],[\"当我们修改\",{\"1\":{\"418\":1}}],[\"当我们调用\",{\"1\":{\"125\":1}}],[\"当我们在html中写代码时\",{\"1\":{\"36\":1}}],[\"当我们输入网址后发生了什么\",{\"0\":{\"1\":1}}],[\"当不需要ispending时\",{\"1\":{\"17\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
